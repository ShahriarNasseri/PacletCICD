(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   CellGroupData[
    {
     Cell["BuildPaclet", "ObjectName", CellID -> 440013644],
     Cell[
      TextData[
       {
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "BuildPaclet",
             BaseStyle -> "Link",
             ButtonData -> "paclet:Wolfram/PacletCICD/ref/BuildPaclet"
            ],
            "[",
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        " \[LineSeparator]builds the paclet located in the current ",
        Cell[
         BoxData[
          RowBox[
           {ButtonBox["Directory", BaseStyle -> "Link"], "[", "]"}
          ]
         ],
         "InlineFormula"
        ],
        ".\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "BuildPaclet",
             BaseStyle -> "Link",
             ButtonData -> "paclet:Wolfram/PacletCICD/ref/BuildPaclet"
            ],
            "[",
            RowBox[
             {
              ButtonBox["File", BaseStyle -> "Link"],
              "[",
              "\"\!\(\*StyleBox[\"path\", \"TI\"]\)\"",
              "]"
             }
            ],
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]uses the given definition notebook or directory specified by ",
        Cell[
         BoxData["\"\!\(\*StyleBox[\"path\", \"TI\"]\)\""],
         "InlineFormula"
        ],
        "."
       }
      ],
      "Usage",
      CellID -> 108247565
     ],
     Cell[
      TextData[
       {
        Cell[
         BoxData[
          ButtonBox[
           "BuildPaclet",
           BaseStyle -> "Link",
           ButtonData -> "paclet:Wolfram/PacletCICD/ref/BuildPaclet"
          ]
         ],
         "InlineFormula"
        ],
        " requires a PacletResource definition notebook in order to build a paclet."
       }
      ],
      "Notes",
      CellID -> 720503753
     ],
     Cell[
      TextData[
       {
        "A new definition notebook can be created with ",
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              ButtonBox["ResourceFunction", BaseStyle -> "Link"],
              "[",
              "\"CreateResourceNotebook\"",
              "]"
             }
            ],
            "[",
            "\"Paclet\"",
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "."
       }
      ],
      "Notes",
      CellID -> 477323473
     ],
     Cell[
      "If running in a GitHub action, file annotations will automatically be generated.",
      "Notes",
      CellID -> 168332267
     ],
     Cell[
      TextData[
       {
        Cell[
         BoxData[
          ButtonBox[
           "BuildPaclet",
           BaseStyle -> "Link",
           ButtonData -> "paclet:Wolfram/PacletCICD/ref/BuildPaclet"
          ]
         ],
         "InlineFormula"
        ],
        " is the underlying function that powers the ",
        ButtonBox[
         "build-paclet",
         BaseStyle -> "Hyperlink",
         ButtonData -> {
          URL["https://github.com/marketplace/actions/build-paclet"],
          None
         },
         ButtonNote -> "https://github.com/marketplace/actions/build-paclet"
        ],
        " action from the GitHub marketplace."
       }
      ],
      "Notes",
      CellID -> 747501943
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Tech Notes",
        Cell[
         BoxData[
          TemplateBox[
           {
            "TechNotes",
            Cell[
             BoxData[
              FrameBox[
               Cell["Insert links to related tech notes.", "MoreInfoText"],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "TechNotesSection",
      CellID -> 429378331
     ],
     Cell["XXXX", "Tutorials", CellID -> 51647473]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Related Links",
        Cell[
         BoxData[
          TemplateBox[
           {
            "RelatedLinks",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related page, including web pages.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "RelatedLinksSection",
      CellID -> 125882563
     ],
     Cell["XXXX", "RelatedLinks", CellID -> 164924063]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "See Also",
        Cell[
         BoxData[
          TemplateBox[
           {
            "SeeAlso",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related reference (function) pages. Type a space, a period and then another space between function names. Then click the palette's Inline Listing Toggle button.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "SeeAlsoSection",
      CellID -> 193225470
     ],
     Cell[
      TextData[
       {
        Cell[
         BoxData[
          ButtonBox[
           "CheckPaclet",
           BaseStyle -> "Link",
           ButtonData -> "paclet:Wolfram/PacletCICD/ref/CheckPaclet"
          ]
         ],
         "InlineFormula"
        ],
        " \[EmptyVerySmallSquare] ",
        Cell[
         BoxData[
          ButtonBox[
           "WorkflowExport",
           BaseStyle -> "Link",
           ButtonData -> "paclet:Wolfram/PacletCICD/ref/WorkflowExport"
          ]
         ],
         "InlineFormula"
        ]
       }
      ],
      "SeeAlso",
      CellID -> 70994113
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Related Guides",
      "MoreAboutSection",
      CellID -> 263569330
     ],
     Cell["XXXX", "MoreAbout", CellID -> 757533622]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Examples Initialization",
        Cell[
         BoxData[
          TemplateBox[
           {
            "ExamplesInitialization",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Input that is to be evaluated before any examples are run, e.g. Needs[\[Ellipsis]].",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExamplesInitializationSection",
      CellID -> 462645252
     ],
     Cell[
      BoxData[
       RowBox[{"Needs", "[", "\"Wolfram`PacletCICD`\"", "]"}]
      ],
      "ExampleInitialization",
      CellID -> 9225029
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[
       InterpretationBox[
        GridBox[
         {
          {
           StyleBox[
            RowBox[{"Basic", " ", "Examples"}],
            "PrimaryExamplesSection"
           ],
           ButtonBox[
            RowBox[
             {
              RowBox[{"More", " ", "Examples"}],
              " ",
              "\[RightTriangle]"
             }
            ],
            BaseStyle -> "ExtendedExamplesLink",
            ButtonData :> "ExtendedExamples"
           ]
          }
         }
        ],
        $Line = 0;
       ]
      ],
      "PrimaryExamplesSection",
      CellID -> 330435858
     ],
     Cell[
      "Load the PacletCICD package:",
      "ExampleText",
      CellID -> 349985564
     ],
     Cell[
      BoxData[
       RowBox[
        {
         RowBox[{"Needs", "[", "\"Wolfram`PacletCICD`\"", "]"}],
         ";"
        }
       ]
      ],
      "Input",
      CellProlog :> ($Line = 0),
      InitializationCell -> True,
      CellLabel -> "In[1]:=",
      CellID -> 222115023
     ],
     Cell[
      BoxData[
       RowBox[
        {RowBox[{"$PublisherID", "=", "\"SamplePublisher\""}], ";"}
       ]
      ],
      "Input",
      "FutureExample",
      CellDingbat ->
       Cell[
        BoxData[
         TooltipBox[
          Cell["rhennigan      ", "TentativeID"],
          "2022-01-30"
         ]
        ],
        "TentativeWrapper"
       ],
      InitializationCell -> True,
      CellLabel -> "In[4]:=",
      CellID -> 150642313
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 107573276
        ],
        Cell[
         "Get an example paclet directory:",
         "ExampleText",
         CellID -> 68104082
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "dir",
               "=",
               RowBox[{"ExampleDirectory", "[", "\"FewIssues\"", "]"}]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 829164802
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "File",
               "[",
               TemplateBox[
                {
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues\""
                },
                "FileArgument"
               ],
               "]"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 567923811
           ]
          },
          Open
         ]
        ],
        Cell[
         "Build the paclet:",
         "ExampleText",
         CellID -> 51045277
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"BuildPaclet", "[", "dir", "]"}]],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 467608130
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"3.8374492`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"3.8374492`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                TagBox[
                                 DynamicModuleBox[
                                  {
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                    "InitialData" -> <|
                                     "Files" -> {
                                      <|
                                       "File" -> File["Kernel\\AddOne.wl"],
                                       "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\AddTwo.wl"],
                                       "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\MyPaclet.wl"],
                                       "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                        ],
                                       "Hash" -> "4dead0d0fb567fc7c8329779c1060df6e13c9d155e1cce288cac6a9be9bdbcd0"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                        ],
                                       "Hash" -> "d60573d74b79cb8b592bb90b60c473b46ea4ff5d908cc7a7d26d7c62bac78401"
                                      |>,
                                      <|
                                       "File" -> File["LICENSE"],
                                       "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                                      |>
                                     }
                                    |>,
                                    "AllowEmbedding" -> True,
                                    "InitialShape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[1]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "InitialType" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Meta" -> <| |>,
                                    "RowTarget" -> 20,
                                    "ColumnTarget" -> 10,
                                    "Shape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[1]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "Type" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Path" -> { },
                                    "DisplayedRowCount" -> 1,
                                    "DisplayedColumnCount" -> 2,
                                    "DataRowCount" -> 1,
                                    "DataColumnCount" -> 2,
                                    "SortPaths" -> { },
                                    "SortDirections" -> { },
                                    "HiddenItemsMap" -> Null,
                                    "UpdateType" -> 1
                                   |>,
                                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                   TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                    DynamicModule[
                                     {
                                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                       Deploy[
                                        Style[
                                         Grid[
                                          {
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               Mouseover[
                                                Graphics[
                                                 { },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ],
                                                Graphics[
                                                 {
                                                  GrayLevel[0.6],
                                                  Polygon[
                                                   {
                                                    {1/Sqrt[2], -(1/Sqrt[2])},
                                                    {1/Sqrt[2], 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                                   }
                                                  ]
                                                 },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, Keys},
                                                "KeyDummy",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "File",
                                                  Style[
                                                   "File",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "File"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "File"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Hash",
                                                  Style[
                                                   "Hash",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "Hash"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "Hash"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Files",
                                                  Style[
                                                   "Files",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {Key["Files"]},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"]},
                                                "RowHeader",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{56.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddOne.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddTwo.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\MyPaclet.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "4dead0d0fb567fc7c8329779c1060df6e13c9d155e1cce288cac6a9be9bdbcd0",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "d60573d74b79cb8b592bb90b60c473b46ea4ff5d908cc7a7d26d7c62bac78401",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["LICENSE"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           }
                                          },
                                          BaseStyle -> {
                                           ContextMenu ->
                                            Dynamic[
                                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                             Which[
                                              UnsameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                               TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                               ]
                                              ],
                                              { },
                                              SameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                              ],
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                              True,
                                              
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                               Block[
                                                {
                                                 TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                 }
                                                },
                                                With[
                                                 {
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                  TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                   And[
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                     Alternatives["RowHeader", "ColumnHeader"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                     "SortDirections"
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                   Not[
                                                    FailureQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ]
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                   Not[
                                                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                   ]
                                                 },
                                                 Join[
                                                  {
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Show ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "remove"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                     And[
                                                      TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                      TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                     ]
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Hide ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "add"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   Delimiter
                                                  },
                                                  If[ And[
                                                    TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                     Alternatives["ColumnHeader", "KeyDummy"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                   ],
                                                   {
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Ascending"
                                                     ],
                                                     MenuItem[
                                                      "Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Ascending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Descending"
                                                     ],
                                                     MenuItem[
                                                      "Reverse Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Descending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      None
                                                     ],
                                                     MenuItem[
                                                      "Unsort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        None
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    Delimiter
                                                   },
                                                   { }
                                                  ],
                                                  {
                                                   MenuItem[
                                                    "Copy Position to Clipboard",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Copy Data to Clipboard",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ],
                                                   Delimiter,
                                                   MenuItem[
                                                    "Paste Position in New Cell",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Paste Data in New Cell",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ]
                                                  }
                                                 ]
                                                ]
                                               ]
                                             ]
                                            ],
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          },
                                          Dividers -> All,
                                          FrameStyle -> GrayLevel[0.74902],
                                          Spacings -> {0, 0},
                                          Alignment -> Left,
                                          BaseStyle -> {
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          }
                                         ],
                                         LineBreakWithin -> False,
                                         ContextMenu -> { },
                                         NumberMarks -> False,
                                         ShowAutoStyles -> False
                                        ]
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                     },
                                     Dynamic[
                                      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       
                                       If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                        Module[
                                         {
                                          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                          TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                           TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                            TypeSystem`NestedGrid`PackagePrivate`$state$$
                                           ]
                                         },
                                         
                                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                          If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                           TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                            TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                           ]
                                          ];

                                         If[ Not[
                                           FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                          ],
                                          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                         ];
                                        ]
                                       ];

                                       TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                       If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                        TypeSystem`SparseGrid[
                                         TypeSystem`H["(data no longer present)"]
                                        ],
                                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                       ]
                                      ],
                                      TrackedSymbols :> {
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                      }
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                    Dynamic[
                                     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                      TypeSystem`PackageScope`SubViewPathbar[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       TypeSystem`NestedGrid`PackagePrivate`updateState[
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                      ]
                                     ],
                                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                    Style[
                                     Framed[
                                      Dynamic[
                                       Replace[
                                        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                        {
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Null,
                                          Blank[]
                                         ] -> "",
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                           Blank[]
                                          ]
                                         ] :>
                                          (
                                          Increment[
                                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                          ];

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                           TypeSystem`NestedGrid`PackagePrivate`path$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ];

                                          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                          ]),
                                         Null :> Spacer[10],
                                         Blank[] :> Spacer[10]
                                        }
                                       ],
                                       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                      ],
                                      FrameStyle -> None,
                                      ImageMargins -> 0,
                                      FrameMargins -> 0,
                                      Alignment -> Top,
                                      ImageSize -> {Automatic, 15}
                                     ],
                                     FontSize -> 1
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                  },
                                  DynamicWrapperBox[
                                   DynamicBox[
                                    ToBoxes[
                                     Dataset`DatasetContent[
                                      2,
                                      "Path" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                      "Grid" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                      "State" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                      "VPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                      "HPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                      "TopBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                      "BottomBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                      "OutputID" ->
                                       Hold[
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                     ],
                                     StandardForm
                                    ],
                                    TrackedSymbols :> {
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                    }
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                    MouseAnnotation[]
                                  ],
                                  Initialization :>
                                   (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                    CreateUUID[]),
                                  DynamicModuleValues :> { },
                                  BaseStyle -> {LineBreakWithin -> False},
                                  UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                 ],
                                 Deploy,
                                 DefaultBaseStyle -> "Deploy"
                                ],
                                Dataset`InterpretDataset[1],
                                Selectable -> False,
                                Editable -> False,
                                SelectWithContents -> True
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"DocumentationBuildResults\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "{",
                                 InterpretationBox[
                                  RowBox[
                                   {
                                    TagBox["Success", "SummaryHead"],
                                    "[",
                                    DynamicModuleBox[
                                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                     TemplateBox[
                                      {
                                       PaneSelectorBox[
                                        {
                                         False ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = True),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.1309956`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ],
                                         True ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = False),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.1309956`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"MaximumFileTime\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "{",
                                                     RowBox[
                                                      {
                                                       TemplateBox[
                                                        {"0.5776579`", "\"s\"", "seconds", "\"Seconds\""},
                                                        "Quantity",
                                                        SyntaxForm -> Mod
                                                       ],
                                                       ",",
                                                       "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddTwo.nb\""
                                                      }
                                                     ],
                                                     "}"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"ProcessedFiles\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "\[LeftAssociation]",
                                                     RowBox[
                                                      {
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.524312`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.524312`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.52431, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ],
                                                       ",",
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddTwo.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5776579`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5776579`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.57766, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ]
                                                      }
                                                     ],
                                                     "\[RightAssociation]"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"FailedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"PercentSucceeded\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"100.`", "\"%\"", "percent", "\"Percent\""},
                                                    "QuantityPostfix",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"ProcessedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SuccessfulFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SkippedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["\"DocumentationBuild\"", "SummaryItem"]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ]
                                        },
                                        Dynamic[Typeset`open$$],
                                        ImageSize -> Automatic
                                       ]
                                      },
                                      "SummaryPanel"
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                    "]"
                                   }
                                  ],
                                  Success[
                                   "DocumentationBuild",
                                   <|
                                    "TotalTime" -> Quantity[1.131, "Seconds"],
                                    "MaximumFileTime" -> {
                                     Quantity[0.57766, "Seconds"],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                    },
                                    "ProcessedFiles" -> <|
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.52431, "Seconds"]]
                                      ],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.57766, "Seconds"]]
                                      ]
                                    |>,
                                    "FailedFilesCount" -> 0,
                                    "PercentSucceeded" -> Quantity[100.0, "Percent"],
                                    "ProcessedFilesCount" -> 2,
                                    "SuccessfulFilesCount" -> 2,
                                    "SkippedFilesCount" -> 0,
                                    "MessageTemplate" -> "Documentation build completed successfully."
                                   |>
                                  ],
                                  Selectable -> False,
                                  Editable -> False,
                                  SelectWithContents -> True
                                 ],
                                 "}"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Source\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues/ResourceDefinition.nb\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"CheckResult\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"PacletBuild\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "PacletBuild",
               <|
                "PacletArchive" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\build\\MyPublisher__MyPaclet-1.0.0",
                "TotalTime" -> Quantity[3.8374, "Seconds"],
                "PacletManifest" ->
                 Dataset[
                  <|
                   "Files" -> {
                    <|
                     "File" -> File["Kernel\\AddOne.wl"],
                     "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                    |>,
                    <|
                     "File" -> File["Kernel\\AddTwo.wl"],
                     "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                    |>,
                    <|
                     "File" -> File["Kernel\\MyPaclet.wl"],
                     "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                      ],
                     "Hash" -> "4dead0d0fb567fc7c8329779c1060df6e13c9d155e1cce288cac6a9be9bdbcd0"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                      ],
                     "Hash" -> "d60573d74b79cb8b592bb90b60c473b46ea4ff5d908cc7a7d26d7c62bac78401"
                    |>,
                    <|
                     "File" -> File["LICENSE"],
                     "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                    |>
                   }
                  |>,
                  TypeSystem`Assoc[
                   TypeSystem`Atom[String],
                   TypeSystem`Vector[
                    TypeSystem`Struct[
                     {"File", "Hash"},
                     {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                    ],
                    6
                   ],
                   1
                  ],
                  <| |>
                 ],
                "DocumentationBuildResults" -> {
                 Success[
                  "DocumentationBuild",
                  <|
                   "TotalTime" -> Quantity[1.131, "Seconds"],
                   "MaximumFileTime" -> {
                    Quantity[0.57766, "Seconds"],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                   },
                   "ProcessedFiles" -> <|
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.52431, "Seconds"]]
                     ],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.57766, "Seconds"]]
                     ]
                   |>,
                   "FailedFilesCount" -> 0,
                   "PercentSucceeded" -> Quantity[100.0, "Percent"],
                   "ProcessedFilesCount" -> 2,
                   "SuccessfulFilesCount" -> 2,
                   "SkippedFilesCount" -> 0,
                   "MessageTemplate" -> "Documentation build completed successfully."
                  |>
                 ]
                },
                "Source" ->
                 File[
                  "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues/ResourceDefinition.nb"
                 ],
                "CheckResult" -> Missing["NotAvailable"]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 643574351
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 592703469
        ],
        Cell[
         "Check the paclet for potential issues before building:",
         "ExampleText",
         CellID -> 388292758
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "built",
               "=",
               RowBox[
                {
                 "BuildPaclet",
                 "[",
                 RowBox[
                  {
                   RowBox[{"ExampleDirectory", "[", "\"MoreIssues\"", "]"}],
                   ",",
                   RowBox[{"\"Check\"", "\[Rule]", "True"}]
                  }
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 864510055
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.96471, 0.16863, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Error\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Error", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.80784, 0.80392],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Error"
                      ],
                      Background -> RGBColor[1.0, 0.80784, 0.80392],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"CodeInspect found 1 fatal error\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"CodeInspectionIssues\"",
                          "\":\"",
                          "57873694",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 57873694,
                         "Level" -> "Error",
                         "Tag" -> "CodeInspectionIssues",
                         "Parameters" -> <|
                          "Issues" -> "1 fatal error",
                          "Key" -> Key[{6308105214813299588, "Submit", None}],
                          "Type" -> File,
                          "MessageText" -> "Expected context: SamplePublisher`MyPaclet`",
                          "PriorityTag" -> "NotPublisherContext",
                          "Metadata" -> <|
                           CodeParser`Source -> {{1, 14}, {1, 25}},
                           "Hash" -> 8824024375246586329,
                           ConfidenceLevel -> 0.99,
                           CodeParser`CodeActions -> {
                            CodeParser`CodeAction[
                             "Replace with suggested context",
                             CodeParser`ReplaceNode,
                             <|
                              "ReplacementNode" ->
                               CodeParser`ContainerNode[
                                String,
                                {
                                 CodeParser`LeafNode[
                                  String,
                                  "\"SamplePublisher`MyPaclet`\"",
                                  Association[CodeParser`Source -> {{1, 1}, {1, 24}}]
                                 ]
                                },
                                <| |>
                               ],
                              CodeParser`Source -> {{1, 14}, {1, 25}}
                             |>
                            ],
                            CodeParser`CodeAction[
                             "Go to code",
                             PacletResource`DefinitionNotebook`Private`GoToNode,
                             <|
                              CodeParser`Source -> {{1, 14}, {1, 25}},
                              "Hash" -> 8824024375246586329
                             |>
                            ]
                           },
                           "MessageParameters" -> {"SamplePublisher`MyPaclet`"},
                           "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Kernel\\AddOne.wl",
                           "Editor" -> Automatic
                          |>,
                          "CodeInspectLevel" -> "Fatal",
                          "Hash" -> 6308105214813299588
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Error"
                    ],
                    Background -> RGBColor[1.0, 0.80784, 0.80392],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "CodeInspect found 1 fatal error",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "CodeInspectionIssues", ":", 57873694, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 57873694,
                       "Level" -> "Error",
                       "Tag" -> "CodeInspectionIssues",
                       "Parameters" -> <|
                        "Issues" -> "1 fatal error",
                        "Key" -> Key[{6308105214813299588, "Submit", None}],
                        "Type" -> File,
                        "MessageText" -> "Expected context: SamplePublisher`MyPaclet`",
                        "PriorityTag" -> "NotPublisherContext",
                        "Metadata" -> <|
                         CodeParser`Source -> {{1, 14}, {1, 25}},
                         "Hash" -> 8824024375246586329,
                         ConfidenceLevel -> 0.99,
                         CodeParser`CodeActions -> {
                          CodeParser`CodeAction[
                           "Replace with suggested context",
                           CodeParser`ReplaceNode,
                           <|
                            "ReplacementNode" ->
                             CodeParser`ContainerNode[
                              String,
                              {
                               CodeParser`LeafNode[
                                String,
                                "\"SamplePublisher`MyPaclet`\"",
                                Association[CodeParser`Source -> {{1, 1}, {1, 24}}]
                               ]
                              },
                              <| |>
                             ],
                            CodeParser`Source -> {{1, 14}, {1, 25}}
                           |>
                          ],
                          CodeParser`CodeAction[
                           "Go to code",
                           PacletResource`DefinitionNotebook`Private`GoToNode,
                           <|
                            CodeParser`Source -> {{1, 14}, {1, 25}},
                            "Hash" -> 8824024375246586329
                           |>
                          ]
                         },
                         "MessageParameters" -> {"SamplePublisher`MyPaclet`"},
                         "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Kernel\\AddOne.wl",
                         "Editor" -> Automatic
                        |>,
                        "CodeInspectLevel" -> "Fatal",
                        "Hash" -> 6308105214813299588
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 185169331
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"CodeInspect found 1 error\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"CodeInspectionIssues\"",
                          "\":\"",
                          "76478523",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 76478523,
                         "Level" -> "Warning",
                         "Tag" -> "CodeInspectionIssues",
                         "Parameters" -> <|
                          "Issues" -> "1 error",
                          "Key" -> Key[{7590840479290891073, "Submit", None}],
                          "Type" -> File
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "CodeInspect found 1 error",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "CodeInspectionIssues", ":", 76478523, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 76478523,
                       "Level" -> "Warning",
                       "Tag" -> "CodeInspectionIssues",
                       "Parameters" -> <|
                        "Issues" -> "1 error",
                        "Key" -> Key[{7590840479290891073, "Submit", None}],
                        "Type" -> File
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 124771255
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"CodeInspect found 1 error and 1 warning\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"CodeInspectionIssues\"",
                          "\":\"",
                          "351143504",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 351143504,
                         "Level" -> "Warning",
                         "Tag" -> "CodeInspectionIssues",
                         "Parameters" -> <|
                          "Issues" -> "1 error and 1 warning",
                          "Key" -> Key[{3889468743964391510, "Submit", None}],
                          "Type" -> File
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "CodeInspect found 1 error and 1 warning",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "CodeInspectionIssues", ":", 351143504, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 351143504,
                       "Level" -> "Warning",
                       "Tag" -> "CodeInspectionIssues",
                       "Parameters" -> <|
                        "Issues" -> "1 error and 1 warning",
                        "Key" -> Key[{3889468743964391510, "Submit", None}],
                        "Type" -> File
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 42659414
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"DocumentationWrongPacletName\"",
                          "\":\"",
                          "268995717",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 268995717,
                         "Level" -> "Warning",
                         "Tag" -> "DocumentationWrongPacletName",
                         "Parameters" -> <|
                          "CellID" -> 268995717,
                          "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb",
                          "Excluded" -> False,
                          "DocumentationNotebook" -> True,
                          "DocumentFlag" -> None,
                          "ObjectName" -> "AddOne",
                          "FullName" -> "SamplePublisher`MyPaclet`AddOne",
                          "Type" -> "Function",
                          "FileHash" -> 9062897167568967930,
                          "EntityType" -> "Symbol",
                          "PacletName" -> "SamplePublisher/WrongPacletName",
                          "Context" -> "SamplePublisher`MyPaclet`",
                          "URI" -> "SamplePublisher/MyPaclet/ref/AddOne",
                          "ExpectedPacletName" -> "SamplePublisher/MyPaclet"
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[
                        {"(", "DocumentationWrongPacletName", ":", 268995717, ")"}
                       ],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 268995717,
                       "Level" -> "Warning",
                       "Tag" -> "DocumentationWrongPacletName",
                       "Parameters" -> <|
                        "CellID" -> 268995717,
                        "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb",
                        "Excluded" -> False,
                        "DocumentationNotebook" -> True,
                        "DocumentFlag" -> None,
                        "ObjectName" -> "AddOne",
                        "FullName" -> "SamplePublisher`MyPaclet`AddOne",
                        "Type" -> "Function",
                        "FileHash" -> 9062897167568967930,
                        "EntityType" -> "Symbol",
                        "PacletName" -> "SamplePublisher/WrongPacletName",
                        "Context" -> "SamplePublisher`MyPaclet`",
                        "URI" -> "SamplePublisher/MyPaclet/ref/AddOne",
                        "ExpectedPacletName" -> "SamplePublisher/MyPaclet"
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 40217654
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"The paclet creator and the resource creator are expected to match\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"PacletCreatorMismatch\"",
                          "\":\"",
                          "312969925",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 312969925,
                         "Level" -> "Warning",
                         "Tag" -> "PacletCreatorMismatch",
                         "Parameters" -> <|
                          "PacletCreator" -> "Example Creator",
                          "ResourceCreator" -> "Example Author",
                          "PacletDirectory" ->
                           File[
                            "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\"
                           ]
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "The paclet creator and the resource creator are expected to match",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "PacletCreatorMismatch", ":", 312969925, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 312969925,
                       "Level" -> "Warning",
                       "Tag" -> "PacletCreatorMismatch",
                       "Parameters" -> <|
                        "PacletCreator" -> "Example Creator",
                        "ResourceCreator" -> "Example Author",
                        "PacletDirectory" ->
                         File[
                          "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\"
                         ]
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 1555519
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Example captions should usually end in a colon when appearing before input\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"ExampleTextLastCharacter\"",
                          "\":\"",
                          "319073343",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 319073343,
                         "Level" -> "Suggestion",
                         "Tag" -> "ExampleTextLastCharacter",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Example captions should usually end in a colon when appearing before input",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "ExampleTextLastCharacter", ":", 319073343, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 319073343,
                       "Level" -> "Suggestion",
                       "Tag" -> "ExampleTextLastCharacter",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 76642670
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Inputs should be separated so they each generate at most a single output\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"MultipleOutputs\"",
                          "\":\"",
                          "55333842",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 55333842,
                         "Level" -> "Suggestion",
                         "Tag" -> "MultipleOutputs",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Inputs should be separated so they each generate at most a single output",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "MultipleOutputs", ":", 55333842, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 55333842,
                       "Level" -> "Suggestion",
                       "Tag" -> "MultipleOutputs",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 35456942
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Related links should usually be given as a labeled hyperlink instead of a raw URL\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {"\"(\"", "\"StringLink\"", "\":\"", "437199519", "\")\""},
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 437199519,
                         "Level" -> "Suggestion",
                         "Tag" -> "StringLink",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "StringLink", ":", 437199519, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 437199519,
                       "Level" -> "Suggestion",
                       "Tag" -> "StringLink",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 55862889
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.96471, 0.16863, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Error\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Error", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.80784, 0.80392],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Error"
                      ],
                      Background -> RGBColor[1.0, 0.80784, 0.80392],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   "\"Scraping failed due to the specified failure conditions.\""
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Error"
                    ],
                    Background -> RGBColor[1.0, 0.80784, 0.80392],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  "Scraping failed due to the specified failure conditions."
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 34917520
              ]
             },
             Open
            ]
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               "CheckPaclet",
               "errors",
               "\"Errors encountered while checking paclet.\"",
               2,
               1,
               4,
               33997430240731871973,
               "Local",
               "Wolfram`PacletCICD`CheckPaclet"
              },
              "MessageTemplate2"
             ]
            ],
            "Message",
            "MSG",
            CellLabel -> "During evaluation of In[1]:=",
            CellID -> 5960907
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Failure", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[WarningSign]\"",
                           Directive["Message", 35],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Message: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"Errors encountered while checking paclet.\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Tag: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"CheckPaclet::errors\"", "SummaryItem"]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[WarningSign]\"",
                           Directive["Message", 35],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Message: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"Errors encountered while checking paclet.\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Tag: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"CheckPaclet::errors\"", "SummaryItem"]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"FailureCondition\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[TagBox["\"Error\"", HoldForm], "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Source\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                RowBox[
                                 {
                                  "File",
                                  "[",
                                  TemplateBox[
                                   {
                                    "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb\""
                                   },
                                   "FileArgument"
                                  ],
                                  "]"
                                 }
                                ],
                                HoldForm
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"BuildResult\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                RowBox[{"Missing", "[", "\"CheckFailed\"", "]"}],
                                HoldForm
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"CheckResult\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                TagBox[
                                 TagBox[
                                  DynamicModuleBox[
                                   {
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                     "InitialData" -> {
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                                       "Tag" -> "DocumentationWrongPacletName",
                                       "CellID" -> 268995717
                                      |>,
                                      <|
                                       "Level" -> "Error",
                                       "Message" -> "CodeInspect found 1 fatal error",
                                       "Tag" -> "CodeInspectionIssues",
                                       "CellID" -> 57873694
                                      |>,
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "CodeInspect found 1 error",
                                       "Tag" -> "CodeInspectionIssues",
                                       "CellID" -> 76478523
                                      |>,
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "CodeInspect found 1 error and 1 warning",
                                       "Tag" -> "CodeInspectionIssues",
                                       "CellID" -> 351143504
                                      |>,
                                      <|
                                       "Level" -> "Suggestion",
                                       "Message" -> "Example captions should usually end in a colon when appearing before input",
                                       "Tag" -> "ExampleTextLastCharacter",
                                       "CellID" -> 319073343
                                      |>,
                                      <|
                                       "Level" -> "Suggestion",
                                       "Message" -> "Inputs should be separated so they each generate at most a single output",
                                       "Tag" -> "MultipleOutputs",
                                       "CellID" -> 55333842
                                      |>,
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "The paclet creator and the resource creator are expected to match",
                                       "Tag" -> "PacletCreatorMismatch",
                                       "CellID" -> 312969925
                                      |>,
                                      <|
                                       "Level" -> "Suggestion",
                                       "Message" -> "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                                       "Tag" -> "StringLink",
                                       "CellID" -> 437199519
                                      |>
                                     },
                                     "AllowEmbedding" -> True,
                                     "InitialShape" ->
                                      TypeSystem`PackageScope`HeaderShape[
                                       <|
                                        {All, "Level"} -> 1,
                                        {All, "Message"} -> 1,
                                        {All, "Tag"} -> 1,
                                        {All, "CellID"} -> 1
                                       |>,
                                       TypeSystem`PackageScope`Limited[
                                        TypeSystem`PackageScope`ColumnShape[
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`RowShape[
                                           <|
                                            "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                                            "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                                            "Tag" -> TypeSystem`PackageScope`AtomShape[294.0],
                                            "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                                           |>
                                          ],
                                          Infinity,
                                          4,
                                          {All}
                                         ]
                                        ],
                                        8,
                                        Infinity,
                                        { }
                                       ]
                                      ],
                                     "InitialType" ->
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"Level", "Message", "Tag", "CellID"},
                                        {
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration["Error", "Suggestion", "Warning"]
                                         ],
                                         TypeSystem`Atom[String],
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration[
                                           "CodeInspectionIssues",
                                           "DocumentationWrongPacletName",
                                           "ExampleTextLastCharacter",
                                           "MultipleOutputs",
                                           "PacletCreatorMismatch",
                                           "StringLink"
                                          ]
                                         ],
                                         TypeSystem`Atom[Integer]
                                        }
                                       ],
                                       8
                                      ],
                                     "Meta" -> <| |>,
                                     "RowTarget" -> 20,
                                     "ColumnTarget" -> 10,
                                     "Shape" ->
                                      TypeSystem`PackageScope`HeaderShape[
                                       <|
                                        {All, "Level"} -> 1,
                                        {All, "Message"} -> 1,
                                        {All, "Tag"} -> 1,
                                        {All, "CellID"} -> 1
                                       |>,
                                       TypeSystem`PackageScope`Limited[
                                        TypeSystem`PackageScope`ColumnShape[
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`RowShape[
                                           <|
                                            "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                                            "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                                            "Tag" -> TypeSystem`PackageScope`AtomShape[294.0],
                                            "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                                           |>
                                          ],
                                          Infinity,
                                          4,
                                          {All}
                                         ]
                                        ],
                                        8,
                                        Infinity,
                                        { }
                                       ]
                                      ],
                                     "Type" ->
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"Level", "Message", "Tag", "CellID"},
                                        {
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration["Error", "Suggestion", "Warning"]
                                         ],
                                         TypeSystem`Atom[String],
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration[
                                           "CodeInspectionIssues",
                                           "DocumentationWrongPacletName",
                                           "ExampleTextLastCharacter",
                                           "MultipleOutputs",
                                           "PacletCreatorMismatch",
                                           "StringLink"
                                          ]
                                         ],
                                         TypeSystem`Atom[Integer]
                                        }
                                       ],
                                       8
                                      ],
                                     "Path" -> { },
                                     "DisplayedRowCount" -> 8,
                                     "DisplayedColumnCount" -> 4,
                                     "DataRowCount" -> 8,
                                     "DataColumnCount" -> 4,
                                     "SortPaths" -> { },
                                     "SortDirections" -> { },
                                     "HiddenItemsMap" -> Null,
                                     "UpdateType" -> 1
                                    |>,
                                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                     DynamicModule[
                                      {
                                       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                        Deploy[
                                         Style[
                                          Grid[
                                           {
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "Level",
                                                   Style[
                                                    "Level",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "Level"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "Level"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "Message",
                                                   Style[
                                                    "Message",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "Message"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "Message"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "Tag",
                                                   Style[
                                                    "Tag",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "Tag"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "Tag"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "CellID",
                                                   Style[
                                                    "CellID",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "CellID"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "CellID"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "DocumentationWrongPacletName",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["268995717"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Error",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspect found 1 fatal error",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspectionIssues",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["57873694"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspect found 1 error",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspectionIssues",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["76478523"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspect found 1 error and 1 warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspectionIssues",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["351143504"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Suggestion",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Example captions should usually end in a colon when appearing before input",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "ExampleTextLastCharacter",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["319073343"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Suggestion",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {6, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Inputs should be separated so they each generate at most a single output",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {6, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "MultipleOutputs",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {6, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["55333842"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {6, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {7, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "The paclet creator and the resource creator are expected to match",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {7, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "PacletCreatorMismatch",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {7, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["312969925"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {7, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Suggestion",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {8, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {8, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "StringLink",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {8, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["437199519"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {8, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            }
                                           },
                                           BaseStyle -> {
                                            ContextMenu ->
                                             Dynamic[
                                              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                              Which[
                                               UnsameQ[
                                                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                                TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                                ]
                                               ],
                                               { },
                                               SameQ[
                                                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                               True,
                                               
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                                Block[
                                                 {
                                                  TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                  }
                                                 },
                                                 With[
                                                  {
                                                   TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                   TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                    And[
                                                     MatchQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                      Alternatives["RowHeader", "ColumnHeader"]
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ]
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                      "SortDirections"
                                                     ]
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                    Not[
                                                     FailureQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ]
                                                     ]
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                    Not[
                                                     FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                    ]
                                                  },
                                                  Join[
                                                   {
                                                    If[ Or[
                                                      Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                      Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                      TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                     ],
                                                     Nothing,
                                                     MenuItem[
                                                      StringJoin[
                                                       "Show ",
                                                       Which[
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "Item"
                                                        ],
                                                        "",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "RowHeader"
                                                        ],
                                                        "Row",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "ColumnHeader"
                                                        ],
                                                        "Column",
                                                        True,
                                                        ""
                                                       ]
                                                      ],
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "remove"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ]
                                                    ],
                                                    If[ Or[
                                                      Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                      TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ],
                                                      TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                      And[
                                                       TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                       TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                      ]
                                                     ],
                                                     Nothing,
                                                     MenuItem[
                                                      StringJoin[
                                                       "Hide ",
                                                       Which[
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "Item"
                                                        ],
                                                        "",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "RowHeader"
                                                        ],
                                                        "Row",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "ColumnHeader"
                                                        ],
                                                        "Column",
                                                        True,
                                                        ""
                                                       ]
                                                      ],
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "add"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ]
                                                    ],
                                                    Delimiter
                                                   },
                                                   If[ And[
                                                     TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                     MatchQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                      Alternatives["ColumnHeader", "KeyDummy"]
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                    ],
                                                    {
                                                     If[ UnsameQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                       "Ascending"
                                                      ],
                                                      MenuItem[
                                                       "Sort",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                         "Ascending"
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      Nothing
                                                     ],
                                                     If[ UnsameQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                       "Descending"
                                                      ],
                                                      MenuItem[
                                                       "Reverse Sort",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                         "Descending"
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      Nothing
                                                     ],
                                                     If[ UnsameQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                       None
                                                      ],
                                                      MenuItem[
                                                       "Unsort",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                         None
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      Nothing
                                                     ],
                                                     Delimiter
                                                    },
                                                    { }
                                                   ],
                                                   {
                                                    MenuItem[
                                                     "Copy Position to Clipboard",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                       TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                     MenuItem[
                                                      "Copy Data to Clipboard",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                        TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    Delimiter,
                                                    MenuItem[
                                                     "Paste Position in New Cell",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                       TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                     MenuItem[
                                                      "Paste Data in New Cell",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                        TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ]
                                                   }
                                                  ]
                                                 ]
                                                ]
                                              ]
                                             ],
                                            FontFamily -> "Source Sans Pro",
                                            FontSize -> 14,
                                            FontWeight -> Plain
                                           },
                                           Dividers -> All,
                                           FrameStyle -> GrayLevel[0.74902],
                                           Spacings -> {0, 0},
                                           Alignment -> Left,
                                           BaseStyle -> {
                                            FontFamily -> "Source Sans Pro",
                                            FontSize -> 14,
                                            FontWeight -> Plain
                                           }
                                          ],
                                          LineBreakWithin -> False,
                                          ContextMenu -> { },
                                          NumberMarks -> False,
                                          ShowAutoStyles -> False
                                         ]
                                        ],
                                       TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                      },
                                      Dynamic[
                                       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        
                                        If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                         Module[
                                          {
                                           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                            TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                             TypeSystem`NestedGrid`PackagePrivate`$state$$
                                            ]
                                          },
                                          
                                          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                           If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                            TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                            TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                             TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                            ]
                                           ];

                                          If[ Not[
                                            FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                           ],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                          ];
                                         ]
                                        ];

                                        TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                         TypeSystem`SparseGrid[
                                          TypeSystem`H["(data no longer present)"]
                                         ],
                                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                        ]
                                       ],
                                       TrackedSymbols :> {
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                       }
                                      ],
                                      DynamicModuleValues :> { }
                                     ],
                                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                     Dynamic[
                                      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                       TypeSystem`PackageScope`SubViewPathbar[
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`updateState[
                                         TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                         ]
                                        ]
                                       ]
                                      ],
                                      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                     ],
                                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                     Style[
                                      Framed[
                                       Dynamic[
                                        Replace[
                                         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                         {
                                          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                           Null,
                                           Blank[]
                                          ] -> "",
                                          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                           Pattern[
                                            TypeSystem`NestedGrid`PackagePrivate`path$,
                                            Blank[]
                                           ],
                                           Pattern[
                                            TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                            Blank[]
                                           ],
                                           Pattern[
                                            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                            Blank[]
                                           ]
                                          ] :>
                                           (
                                           Increment[
                                            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                           ];

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                            TypeSystem`NestedGrid`PackagePrivate`path$;

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                            TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                            TypeSystem`NestedGrid`PackagePrivate`localHold[
                                             TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                            ];

                                           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                            TypeSystem`NestedGrid`PackagePrivate`path$,
                                            TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                           ]),
                                          Null :> Spacer[10],
                                          Blank[] :> Spacer[10]
                                         }
                                        ],
                                        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                       ],
                                       FrameStyle -> None,
                                       ImageMargins -> 0,
                                       FrameMargins -> 0,
                                       Alignment -> Top,
                                       ImageSize -> {Automatic, 15}
                                      ],
                                      FontSize -> 1
                                     ],
                                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                   },
                                   DynamicWrapperBox[
                                    DynamicBox[
                                     ToBoxes[
                                      Dataset`DatasetContent[
                                       2,
                                       "Path" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                       "Grid" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                       "State" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                       "VPos" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                       "HPos" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                       "TopBar" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                       "BottomBar" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                       "OutputID" ->
                                        Hold[
                                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                         ]
                                        ]
                                      ],
                                      StandardForm
                                     ],
                                     TrackedSymbols :> {
                                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                      TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                     }
                                    ],
                                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                     MouseAnnotation[]
                                   ],
                                   Initialization :>
                                    (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                     CreateUUID[]),
                                   DynamicModuleValues :> { },
                                   BaseStyle -> {LineBreakWithin -> False},
                                   UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                  ],
                                  Deploy,
                                  DefaultBaseStyle -> "Deploy"
                                 ],
                                 Dataset`InterpretDataset[1],
                                 Selectable -> False,
                                 Editable -> False,
                                 SelectWithContents -> True
                                ],
                                HoldForm
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Failure[
               "CheckPaclet::errors",
               <|
                "MessageTemplate" ->
                 MessageName[Wolfram`PacletCICD`CheckPaclet, "errors"],
                "MessageParameters" -> { },
                "FailureCondition" -> "Error",
                "Source" ->
                 File[
                  "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                 ],
                "BuildResult" -> Missing["CheckFailed"],
                "CheckResult" ->
                 Dataset[
                  {
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                    "Tag" -> "DocumentationWrongPacletName",
                    "CellID" -> 268995717
                   |>,
                   <|
                    "Level" -> "Error",
                    "Message" -> "CodeInspect found 1 fatal error",
                    "Tag" -> "CodeInspectionIssues",
                    "CellID" -> 57873694
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "CodeInspect found 1 error",
                    "Tag" -> "CodeInspectionIssues",
                    "CellID" -> 76478523
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "CodeInspect found 1 error and 1 warning",
                    "Tag" -> "CodeInspectionIssues",
                    "CellID" -> 351143504
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Example captions should usually end in a colon when appearing before input",
                    "Tag" -> "ExampleTextLastCharacter",
                    "CellID" -> 319073343
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Inputs should be separated so they each generate at most a single output",
                    "Tag" -> "MultipleOutputs",
                    "CellID" -> 55333842
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The paclet creator and the resource creator are expected to match",
                    "Tag" -> "PacletCreatorMismatch",
                    "CellID" -> 312969925
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                    "Tag" -> "StringLink",
                    "CellID" -> 437199519
                   |>
                  },
                  TypeSystem`Vector[
                   TypeSystem`Struct[
                    {"Level", "Message", "Tag", "CellID"},
                    {
                     TypeSystem`Atom[
                      TypeSystem`Enumeration["Error", "Suggestion", "Warning"]
                     ],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[
                      TypeSystem`Enumeration[
                       "CodeInspectionIssues",
                       "DocumentationWrongPacletName",
                       "ExampleTextLastCharacter",
                       "MultipleOutputs",
                       "PacletCreatorMismatch",
                       "StringLink"
                      ]
                     ],
                     TypeSystem`Atom[Integer]
                    }
                   ],
                   8
                  ],
                  <| |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 80525516
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           "Get a ",
           Cell[
            BoxData[ButtonBox["Dataset", BaseStyle -> "Link"]],
            "InlineFormula"
           ],
           " of the reported issues:"
          }
         ],
         "ExampleText",
         CellID -> 201843020
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"built", "[", "\"CheckResult\"", "]"}]],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 463657487
           ],
           Cell[
            BoxData[
             TagBox[
              TagBox[
               DynamicModuleBox[
                {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                  "InitialData" -> {
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                    "Tag" -> "DocumentationWrongPacletName",
                    "CellID" -> 268995717
                   |>,
                   <|
                    "Level" -> "Error",
                    "Message" -> "CodeInspect found 1 fatal error",
                    "Tag" -> "CodeInspectionIssues",
                    "CellID" -> 57873694
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "CodeInspect found 1 error",
                    "Tag" -> "CodeInspectionIssues",
                    "CellID" -> 76478523
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "CodeInspect found 1 error and 1 warning",
                    "Tag" -> "CodeInspectionIssues",
                    "CellID" -> 351143504
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Example captions should usually end in a colon when appearing before input",
                    "Tag" -> "ExampleTextLastCharacter",
                    "CellID" -> 319073343
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Inputs should be separated so they each generate at most a single output",
                    "Tag" -> "MultipleOutputs",
                    "CellID" -> 55333842
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The paclet creator and the resource creator are expected to match",
                    "Tag" -> "PacletCreatorMismatch",
                    "CellID" -> 312969925
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                    "Tag" -> "StringLink",
                    "CellID" -> 437199519
                   |>
                  },
                  "AllowEmbedding" -> True,
                  "InitialShape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, "Level"} -> 1,
                     {All, "Message"} -> 1,
                     {All, "Tag"} -> 1,
                     {All, "CellID"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`Limited[
                       TypeSystem`PackageScope`RowShape[
                        <|
                         "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                         "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                         "Tag" -> TypeSystem`PackageScope`AtomShape[294.0],
                         "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                        |>
                       ],
                       Infinity,
                       4,
                       {All}
                      ]
                     ],
                     8,
                     Infinity,
                     { }
                    ]
                   ],
                  "InitialType" ->
                   TypeSystem`Vector[
                    TypeSystem`Struct[
                     {"Level", "Message", "Tag", "CellID"},
                     {
                      TypeSystem`Atom[
                       TypeSystem`Enumeration["Error", "Suggestion", "Warning"]
                      ],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[
                       TypeSystem`Enumeration[
                        "CodeInspectionIssues",
                        "DocumentationWrongPacletName",
                        "ExampleTextLastCharacter",
                        "MultipleOutputs",
                        "PacletCreatorMismatch",
                        "StringLink"
                       ]
                      ],
                      TypeSystem`Atom[Integer]
                     }
                    ],
                    8
                   ],
                  "Meta" -> <| |>,
                  "RowTarget" -> 20,
                  "ColumnTarget" -> 10,
                  "Shape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, "Level"} -> 1,
                     {All, "Message"} -> 1,
                     {All, "Tag"} -> 1,
                     {All, "CellID"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`Limited[
                       TypeSystem`PackageScope`RowShape[
                        <|
                         "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                         "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                         "Tag" -> TypeSystem`PackageScope`AtomShape[294.0],
                         "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                        |>
                       ],
                       Infinity,
                       4,
                       {All}
                      ]
                     ],
                     8,
                     Infinity,
                     { }
                    ]
                   ],
                  "Type" ->
                   TypeSystem`Vector[
                    TypeSystem`Struct[
                     {"Level", "Message", "Tag", "CellID"},
                     {
                      TypeSystem`Atom[
                       TypeSystem`Enumeration["Error", "Suggestion", "Warning"]
                      ],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[
                       TypeSystem`Enumeration[
                        "CodeInspectionIssues",
                        "DocumentationWrongPacletName",
                        "ExampleTextLastCharacter",
                        "MultipleOutputs",
                        "PacletCreatorMismatch",
                        "StringLink"
                       ]
                      ],
                      TypeSystem`Atom[Integer]
                     }
                    ],
                    8
                   ],
                  "Path" -> { },
                  "DisplayedRowCount" -> 8,
                  "DisplayedColumnCount" -> 4,
                  "DataRowCount" -> 8,
                  "DataColumnCount" -> 4,
                  "SortPaths" -> { },
                  "SortDirections" -> { },
                  "HiddenItemsMap" -> Null,
                  "UpdateType" -> 1
                 |>,
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                 TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                  DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                     Deploy[
                      Style[
                       Grid[
                        {
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Level",
                                Style[
                                 "Level",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Level"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Level"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Message",
                                Style[
                                 "Message",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Message"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Message"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Tag",
                                Style[
                                 "Tag",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Tag"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Tag"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "CellID",
                                Style[
                                 "CellID",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "CellID"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "CellID"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             "Warning",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {1, Key["Level"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{105.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {1, Key["Message"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "DocumentationWrongPacletName",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {1, Key["Tag"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{294.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["268995717"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {1, Key["CellID"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             "Error",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {2, Key["Level"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{105.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "CodeInspect found 1 fatal error",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {2, Key["Message"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "CodeInspectionIssues",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {2, Key["Tag"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{294.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["57873694"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {2, Key["CellID"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             "Warning",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {3, Key["Level"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{105.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "CodeInspect found 1 error",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {3, Key["Message"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "CodeInspectionIssues",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {3, Key["Tag"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{294.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["76478523"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {3, Key["CellID"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             "Warning",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {4, Key["Level"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{105.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "CodeInspect found 1 error and 1 warning",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {4, Key["Message"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "CodeInspectionIssues",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {4, Key["Tag"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{294.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["351143504"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {4, Key["CellID"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             "Suggestion",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {5, Key["Level"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{105.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "Example captions should usually end in a colon when appearing before input",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {5, Key["Message"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "ExampleTextLastCharacter",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {5, Key["Tag"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{294.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["319073343"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {5, Key["CellID"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             "Suggestion",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {6, Key["Level"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{105.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "Inputs should be separated so they each generate at most a single output",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {6, Key["Message"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "MultipleOutputs",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {6, Key["Tag"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{294.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["55333842"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {6, Key["CellID"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             "Warning",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {7, Key["Level"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{105.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "The paclet creator and the resource creator are expected to match",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {7, Key["Message"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "PacletCreatorMismatch",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {7, Key["Tag"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{294.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["312969925"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {7, Key["CellID"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             "Suggestion",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {8, Key["Level"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{105.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {8, Key["Message"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "StringLink",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {8, Key["Tag"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{294.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["437199519"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {8, Key["CellID"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         }
                        },
                        BaseStyle -> {
                         ContextMenu ->
                          Dynamic[
                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                           Which[
                            UnsameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                             TypeSystem`NestedGrid`PackagePrivate`localHold[
                              TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                             ]
                            ],
                            { },
                            SameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                             TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                            True,
                            
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                             Block[
                              {
                               TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                               }
                              },
                              With[
                               {
                                TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                 And[
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                   Alternatives["RowHeader", "ColumnHeader"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                   "SortDirections"
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                 Not[
                                  FailureQ[
                                   TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ]
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                 Not[
                                  FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                 ]
                               },
                               Join[
                                {
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Show ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "remove"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                   And[
                                    TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                   ]
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Hide ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "add"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 Delimiter
                                },
                                If[ And[
                                  TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                   Alternatives["ColumnHeader", "KeyDummy"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                  Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                 ],
                                 {
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Ascending"
                                   ],
                                   MenuItem[
                                    "Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Ascending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Descending"
                                   ],
                                   MenuItem[
                                    "Reverse Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Descending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    None
                                   ],
                                   MenuItem[
                                    "Unsort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      None
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  Delimiter
                                 },
                                 { }
                                ],
                                {
                                 MenuItem[
                                  "Copy Position to Clipboard",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`copyClip
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Copy Data to Clipboard",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`copyClip
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ],
                                 Delimiter,
                                 MenuItem[
                                  "Paste Position in New Cell",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Paste Data in New Cell",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ]
                                }
                               ]
                              ]
                             ]
                           ]
                          ],
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        },
                        Dividers -> All,
                        FrameStyle -> GrayLevel[0.74902],
                        Spacings -> {0, 0},
                        Alignment -> Left,
                        BaseStyle -> {
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        }
                       ],
                       LineBreakWithin -> False,
                       ContextMenu -> { },
                       NumberMarks -> False,
                       ShowAutoStyles -> False
                      ]
                     ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                         TypeSystem`NestedGrid`PackagePrivate`datasetData[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$
                         ]
                       },
                       
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                          TypeSystem`NestedGrid`PackagePrivate`tmpData$
                         ]
                        ];

                       If[ Not[
                         FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                        ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                      ]
                     ];

                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                     ]
                    ],
                    TrackedSymbols :> {
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                    }
                   ],
                   DynamicModuleValues :> { }
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     TypeSystem`NestedGrid`PackagePrivate`updateState[
                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                  Style[
                   Framed[
                    Dynamic[
                     Replace[
                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                      {
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Null,
                        Blank[]
                       ] -> "",
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`pathType$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                         Blank[]
                        ]
                       ] :>
                        (
                        Increment[
                         TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                        ];

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                         TypeSystem`NestedGrid`PackagePrivate`path$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                         TypeSystem`NestedGrid`PackagePrivate`pathType$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                         ];

                        TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         TypeSystem`NestedGrid`PackagePrivate`makePathElements
                        ]),
                       Null :> Spacer[10],
                       Blank[] :> Spacer[10]
                      }
                     ],
                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                    ],
                    FrameStyle -> None,
                    ImageMargins -> 0,
                    FrameMargins -> 0,
                    Alignment -> Top,
                    ImageSize -> {Automatic, 15}
                   ],
                   FontSize -> 1
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  Null
                },
                DynamicWrapperBox[
                 DynamicBox[
                  ToBoxes[
                   Dataset`DatasetContent[
                    2,
                    "Path" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                    "Grid" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                    "State" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                    "VPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                    "HPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                    "TopBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                    "BottomBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                    "OutputID" ->
                     Hold[
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {0.0, {0.0, 0.0}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  MouseAnnotation[],
                 ImageSizeCache -> {0.0, {0.0, 0.0}}
                ],
                BaseStyle -> {LineBreakWithin -> False},
                DynamicModuleValues :> { },
                Initialization :>
                 (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                  CreateUUID[]),
                UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
               ],
               Deploy,
               DefaultBaseStyle -> "Deploy"
              ],
              Dataset`InterpretDataset[1],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 219303210
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 11324980
        ],
        Cell[
         "Suppress some inspections:",
         "ExampleText",
         CellID -> 60184598
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "BuildPaclet",
               "[",
               RowBox[
                {
                 RowBox[{"ExampleDirectory", "[", "\"MoreIssues\"", "]"}],
                 ",",
                 RowBox[{"\"Check\"", "\[Rule]", "True"}],
                 ",",
                 RowBox[
                  {
                   "\"DisabledHints\"",
                   "\[Rule]",
                   RowBox[
                    {
                     "{",
                     RowBox[{"Inherited", ",", "\"CodeInspectionIssues\""}],
                     "}"
                    }
                   ]
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 372865075
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"DocumentationWrongPacletName\"",
                          "\":\"",
                          "268995717",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 268995717,
                         "Level" -> "Warning",
                         "Tag" -> "DocumentationWrongPacletName",
                         "Parameters" -> <|
                          "CellID" -> 268995717,
                          "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb",
                          "Excluded" -> False,
                          "DocumentationNotebook" -> True,
                          "DocumentFlag" -> None,
                          "ObjectName" -> "AddOne",
                          "FullName" -> "SamplePublisher`MyPaclet`AddOne",
                          "Type" -> "Function",
                          "FileHash" -> 9062897167568967930,
                          "EntityType" -> "Symbol",
                          "PacletName" -> "SamplePublisher/WrongPacletName",
                          "Context" -> "SamplePublisher`MyPaclet`",
                          "URI" -> "SamplePublisher/MyPaclet/ref/AddOne",
                          "ExpectedPacletName" -> "SamplePublisher/MyPaclet"
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[
                        {"(", "DocumentationWrongPacletName", ":", 268995717, ")"}
                       ],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 268995717,
                       "Level" -> "Warning",
                       "Tag" -> "DocumentationWrongPacletName",
                       "Parameters" -> <|
                        "CellID" -> 268995717,
                        "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb",
                        "Excluded" -> False,
                        "DocumentationNotebook" -> True,
                        "DocumentFlag" -> None,
                        "ObjectName" -> "AddOne",
                        "FullName" -> "SamplePublisher`MyPaclet`AddOne",
                        "Type" -> "Function",
                        "FileHash" -> 9062897167568967930,
                        "EntityType" -> "Symbol",
                        "PacletName" -> "SamplePublisher/WrongPacletName",
                        "Context" -> "SamplePublisher`MyPaclet`",
                        "URI" -> "SamplePublisher/MyPaclet/ref/AddOne",
                        "ExpectedPacletName" -> "SamplePublisher/MyPaclet"
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 107965957
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"The paclet creator and the resource creator are expected to match\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"PacletCreatorMismatch\"",
                          "\":\"",
                          "312969925",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 312969925,
                         "Level" -> "Warning",
                         "Tag" -> "PacletCreatorMismatch",
                         "Parameters" -> <|
                          "PacletCreator" -> "Example Creator",
                          "ResourceCreator" -> "Example Author",
                          "PacletDirectory" ->
                           File[
                            "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\"
                           ]
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "The paclet creator and the resource creator are expected to match",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "PacletCreatorMismatch", ":", 312969925, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 312969925,
                       "Level" -> "Warning",
                       "Tag" -> "PacletCreatorMismatch",
                       "Parameters" -> <|
                        "PacletCreator" -> "Example Creator",
                        "ResourceCreator" -> "Example Author",
                        "PacletDirectory" ->
                         File[
                          "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\"
                         ]
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 18081156
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Example captions should usually end in a colon when appearing before input\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"ExampleTextLastCharacter\"",
                          "\":\"",
                          "319073343",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 319073343,
                         "Level" -> "Suggestion",
                         "Tag" -> "ExampleTextLastCharacter",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Example captions should usually end in a colon when appearing before input",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "ExampleTextLastCharacter", ":", 319073343, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 319073343,
                       "Level" -> "Suggestion",
                       "Tag" -> "ExampleTextLastCharacter",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 69997569
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Inputs should be separated so they each generate at most a single output\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"MultipleOutputs\"",
                          "\":\"",
                          "55333842",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 55333842,
                         "Level" -> "Suggestion",
                         "Tag" -> "MultipleOutputs",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Inputs should be separated so they each generate at most a single output",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "MultipleOutputs", ":", 55333842, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 55333842,
                       "Level" -> "Suggestion",
                       "Tag" -> "MultipleOutputs",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 75474286
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Related links should usually be given as a labeled hyperlink instead of a raw URL\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {"\"(\"", "\"StringLink\"", "\":\"", "437199519", "\")\""},
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 437199519,
                         "Level" -> "Suggestion",
                         "Tag" -> "StringLink",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "StringLink", ":", 437199519, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 437199519,
                       "Level" -> "Suggestion",
                       "Tag" -> "StringLink",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 705423642
              ]
             },
             Open
            ]
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\MoreIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"3.8899591`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\MoreIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"3.8899591`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                TagBox[
                                 DynamicModuleBox[
                                  {
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                    "InitialData" -> <|
                                     "Files" -> {
                                      <|
                                       "File" -> File["Kernel\\AddOne.wl"],
                                       "Hash" -> "5efc1d99405a616b7d9d9bc4445d0fb9d268d95c2a9ee657bf6c7fd3c876e7c9"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\AddTwo.wl"],
                                       "Hash" -> "c84b6b0f9c1d96fb82010282c1729d0b2ca28556e29ca7ad779cea4ac28e6755"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\MyPaclet.wl"],
                                       "Hash" -> "db6ad332284c4612dc21a36bb6ac07d15d6c1b7b4bf47409f089dfcccd247231"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                        ],
                                       "Hash" -> "64d109f11b00ad797fae013601c03a5d4b3135a06d5b5f22fead23e1c917147a"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                        ],
                                       "Hash" -> "3416c608a3c6a2a1a3366fa56764c50ae870524ee0657de18b666c517f3a85cd"
                                      |>,
                                      <|
                                       "File" -> File["LICENSE"],
                                       "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                                      |>
                                     }
                                    |>,
                                    "AllowEmbedding" -> True,
                                    "InitialShape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[2]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "InitialType" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Meta" -> <| |>,
                                    "RowTarget" -> 20,
                                    "ColumnTarget" -> 10,
                                    "Shape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[2]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "Type" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Path" -> { },
                                    "DisplayedRowCount" -> 1,
                                    "DisplayedColumnCount" -> 2,
                                    "DataRowCount" -> 1,
                                    "DataColumnCount" -> 2,
                                    "SortPaths" -> { },
                                    "SortDirections" -> { },
                                    "HiddenItemsMap" -> Null,
                                    "UpdateType" -> 1
                                   |>,
                                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                   TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                    DynamicModule[
                                     {
                                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                       Deploy[
                                        Style[
                                         Grid[
                                          {
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               Mouseover[
                                                Graphics[
                                                 { },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ],
                                                Graphics[
                                                 {
                                                  GrayLevel[0.6],
                                                  Polygon[
                                                   {
                                                    {1/Sqrt[2], -(1/Sqrt[2])},
                                                    {1/Sqrt[2], 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                                   }
                                                  ]
                                                 },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, Keys},
                                                "KeyDummy",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "File",
                                                  Style[
                                                   "File",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "File"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "File"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Hash",
                                                  Style[
                                                   "Hash",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "Hash"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "Hash"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Files",
                                                  Style[
                                                   "Files",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {Key["Files"]},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"]},
                                                "RowHeader",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{56.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddOne.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "5efc1d99405a616b7d9d9bc4445d0fb9d268d95c2a9ee657bf6c7fd3c876e7c9",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddTwo.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "c84b6b0f9c1d96fb82010282c1729d0b2ca28556e29ca7ad779cea4ac28e6755",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\MyPaclet.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "db6ad332284c4612dc21a36bb6ac07d15d6c1b7b4bf47409f089dfcccd247231",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "64d109f11b00ad797fae013601c03a5d4b3135a06d5b5f22fead23e1c917147a",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "3416c608a3c6a2a1a3366fa56764c50ae870524ee0657de18b666c517f3a85cd",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["LICENSE"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           }
                                          },
                                          BaseStyle -> {
                                           ContextMenu ->
                                            Dynamic[
                                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                             Which[
                                              UnsameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                               TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                               ]
                                              ],
                                              { },
                                              SameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                              ],
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                              True,
                                              
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                               Block[
                                                {
                                                 TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                 }
                                                },
                                                With[
                                                 {
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                  TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                   And[
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                     Alternatives["RowHeader", "ColumnHeader"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                     "SortDirections"
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                   Not[
                                                    FailureQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ]
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                   Not[
                                                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                   ]
                                                 },
                                                 Join[
                                                  {
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Show ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "remove"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                     And[
                                                      TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                      TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                     ]
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Hide ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "add"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   Delimiter
                                                  },
                                                  If[ And[
                                                    TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                     Alternatives["ColumnHeader", "KeyDummy"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                   ],
                                                   {
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Ascending"
                                                     ],
                                                     MenuItem[
                                                      "Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Ascending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Descending"
                                                     ],
                                                     MenuItem[
                                                      "Reverse Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Descending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      None
                                                     ],
                                                     MenuItem[
                                                      "Unsort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        None
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    Delimiter
                                                   },
                                                   { }
                                                  ],
                                                  {
                                                   MenuItem[
                                                    "Copy Position to Clipboard",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Copy Data to Clipboard",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ],
                                                   Delimiter,
                                                   MenuItem[
                                                    "Paste Position in New Cell",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Paste Data in New Cell",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ]
                                                  }
                                                 ]
                                                ]
                                               ]
                                             ]
                                            ],
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          },
                                          Dividers -> All,
                                          FrameStyle -> GrayLevel[0.74902],
                                          Spacings -> {0, 0},
                                          Alignment -> Left,
                                          BaseStyle -> {
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          }
                                         ],
                                         LineBreakWithin -> False,
                                         ContextMenu -> { },
                                         NumberMarks -> False,
                                         ShowAutoStyles -> False
                                        ]
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                     },
                                     Dynamic[
                                      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       
                                       If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                        Module[
                                         {
                                          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                          TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                           TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                            TypeSystem`NestedGrid`PackagePrivate`$state$$
                                           ]
                                         },
                                         
                                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                          If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                           TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                            TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                           ]
                                          ];

                                         If[ Not[
                                           FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                          ],
                                          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                         ];
                                        ]
                                       ];

                                       TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                       If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                        TypeSystem`SparseGrid[
                                         TypeSystem`H["(data no longer present)"]
                                        ],
                                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                       ]
                                      ],
                                      TrackedSymbols :> {
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                      }
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                    Dynamic[
                                     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                      TypeSystem`PackageScope`SubViewPathbar[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       TypeSystem`NestedGrid`PackagePrivate`updateState[
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                      ]
                                     ],
                                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                    Style[
                                     Framed[
                                      Dynamic[
                                       Replace[
                                        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                        {
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Null,
                                          Blank[]
                                         ] -> "",
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                           Blank[]
                                          ]
                                         ] :>
                                          (
                                          Increment[
                                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                          ];

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                           TypeSystem`NestedGrid`PackagePrivate`path$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ];

                                          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                          ]),
                                         Null :> Spacer[10],
                                         Blank[] :> Spacer[10]
                                        }
                                       ],
                                       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                      ],
                                      FrameStyle -> None,
                                      ImageMargins -> 0,
                                      FrameMargins -> 0,
                                      Alignment -> Top,
                                      ImageSize -> {Automatic, 15}
                                     ],
                                     FontSize -> 1
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                  },
                                  DynamicWrapperBox[
                                   DynamicBox[
                                    ToBoxes[
                                     Dataset`DatasetContent[
                                      2,
                                      "Path" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                      "Grid" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                      "State" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                      "VPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                      "HPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                      "TopBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                      "BottomBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                      "OutputID" ->
                                       Hold[
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                     ],
                                     StandardForm
                                    ],
                                    TrackedSymbols :> {
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                    }
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                    MouseAnnotation[]
                                  ],
                                  Initialization :>
                                   (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                    CreateUUID[]),
                                  DynamicModuleValues :> { },
                                  BaseStyle -> {LineBreakWithin -> False},
                                  UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                 ],
                                 Deploy,
                                 DefaultBaseStyle -> "Deploy"
                                ],
                                Dataset`InterpretDataset[1],
                                Selectable -> False,
                                Editable -> False,
                                SelectWithContents -> True
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"DocumentationBuildResults\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "{",
                                 InterpretationBox[
                                  RowBox[
                                   {
                                    TagBox["Success", "SummaryHead"],
                                    "[",
                                    DynamicModuleBox[
                                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                     TemplateBox[
                                      {
                                       PaneSelectorBox[
                                        {
                                         False ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = True),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.2421574`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ],
                                         True ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = False),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.2421574`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"MaximumFileTime\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "{",
                                                     RowBox[
                                                      {
                                                       TemplateBox[
                                                        {"0.6214262`", "\"s\"", "seconds", "\"Seconds\""},
                                                        "Quantity",
                                                        SyntaxForm -> Mod
                                                       ],
                                                       ",",
                                                       "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\MoreIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\""
                                                      }
                                                     ],
                                                     "}"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"ProcessedFiles\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "\[LeftAssociation]",
                                                     RowBox[
                                                      {
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\MoreIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.6214262`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.6214262`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.62143, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ],
                                                       ",",
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\MoreIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddTwo.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5925837`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5925837`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.59258, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ]
                                                      }
                                                     ],
                                                     "\[RightAssociation]"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"FailedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"PercentSucceeded\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"100.`", "\"%\"", "percent", "\"Percent\""},
                                                    "QuantityPostfix",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"ProcessedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SuccessfulFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SkippedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["\"DocumentationBuild\"", "SummaryItem"]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ]
                                        },
                                        Dynamic[Typeset`open$$],
                                        ImageSize -> Automatic
                                       ]
                                      },
                                      "SummaryPanel"
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                    "]"
                                   }
                                  ],
                                  Success[
                                   "DocumentationBuild",
                                   <|
                                    "TotalTime" -> Quantity[1.2422, "Seconds"],
                                    "MaximumFileTime" -> {
                                     Quantity[0.62143, "Seconds"],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                    },
                                    "ProcessedFiles" -> <|
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.62143, "Seconds"]]
                                      ],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.59258, "Seconds"]]
                                      ]
                                    |>,
                                    "FailedFilesCount" -> 0,
                                    "PercentSucceeded" -> Quantity[100.0, "Percent"],
                                    "ProcessedFilesCount" -> 2,
                                    "SuccessfulFilesCount" -> 2,
                                    "SkippedFilesCount" -> 0,
                                    "MessageTemplate" -> "Documentation build completed successfully."
                                   |>
                                  ],
                                  Selectable -> False,
                                  Editable -> False,
                                  SelectWithContents -> True
                                 ],
                                 "}"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Source\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"CheckResult\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                TagBox[
                                 DynamicModuleBox[
                                  {
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                    "InitialData" -> {
                                     <|
                                      "Level" -> "Warning",
                                      "Message" -> "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                                      "Tag" -> "DocumentationWrongPacletName",
                                      "CellID" -> 268995717
                                     |>,
                                     <|
                                      "Level" -> "Suggestion",
                                      "Message" -> "Example captions should usually end in a colon when appearing before input",
                                      "Tag" -> "ExampleTextLastCharacter",
                                      "CellID" -> 319073343
                                     |>,
                                     <|
                                      "Level" -> "Suggestion",
                                      "Message" -> "Inputs should be separated so they each generate at most a single output",
                                      "Tag" -> "MultipleOutputs",
                                      "CellID" -> 55333842
                                     |>,
                                     <|
                                      "Level" -> "Warning",
                                      "Message" -> "The paclet creator and the resource creator are expected to match",
                                      "Tag" -> "PacletCreatorMismatch",
                                      "CellID" -> 312969925
                                     |>,
                                     <|
                                      "Level" -> "Suggestion",
                                      "Message" -> "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                                      "Tag" -> "StringLink",
                                      "CellID" -> 437199519
                                     |>
                                    },
                                    "AllowEmbedding" -> True,
                                    "InitialShape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, "Level"} -> 1,
                                       {All, "Message"} -> 1,
                                       {All, "Tag"} -> 1,
                                       {All, "CellID"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`Limited[
                                         TypeSystem`PackageScope`RowShape[
                                          <|
                                           "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                                           "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                                           "Tag" -> TypeSystem`PackageScope`AtomShape[313.6],
                                           "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                                          |>
                                         ],
                                         Infinity,
                                         4,
                                         {All}
                                        ]
                                       ],
                                       5,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "InitialType" ->
                                     TypeSystem`Vector[
                                      TypeSystem`Struct[
                                       {"Level", "Message", "Tag", "CellID"},
                                       {
                                        TypeSystem`Atom[
                                         TypeSystem`Enumeration["Suggestion", "Warning"]
                                        ],
                                        TypeSystem`Atom[String],
                                        TypeSystem`Atom[String],
                                        TypeSystem`Atom[Integer]
                                       }
                                      ],
                                      5
                                     ],
                                    "Meta" -> <| |>,
                                    "RowTarget" -> 20,
                                    "ColumnTarget" -> 10,
                                    "Shape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, "Level"} -> 1,
                                       {All, "Message"} -> 1,
                                       {All, "Tag"} -> 1,
                                       {All, "CellID"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`Limited[
                                         TypeSystem`PackageScope`RowShape[
                                          <|
                                           "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                                           "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                                           "Tag" -> TypeSystem`PackageScope`AtomShape[313.6],
                                           "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                                          |>
                                         ],
                                         Infinity,
                                         4,
                                         {All}
                                        ]
                                       ],
                                       5,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "Type" ->
                                     TypeSystem`Vector[
                                      TypeSystem`Struct[
                                       {"Level", "Message", "Tag", "CellID"},
                                       {
                                        TypeSystem`Atom[
                                         TypeSystem`Enumeration["Suggestion", "Warning"]
                                        ],
                                        TypeSystem`Atom[String],
                                        TypeSystem`Atom[String],
                                        TypeSystem`Atom[Integer]
                                       }
                                      ],
                                      5
                                     ],
                                    "Path" -> { },
                                    "DisplayedRowCount" -> 5,
                                    "DisplayedColumnCount" -> 4,
                                    "DataRowCount" -> 5,
                                    "DataColumnCount" -> 4,
                                    "SortPaths" -> { },
                                    "SortDirections" -> { },
                                    "HiddenItemsMap" -> Null,
                                    "UpdateType" -> 1
                                   |>,
                                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                   TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                    DynamicModule[
                                     {
                                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                       Deploy[
                                        Style[
                                         Grid[
                                          {
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Level",
                                                  Style[
                                                   "Level",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, "Level"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, "Level"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Message",
                                                  Style[
                                                   "Message",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, "Message"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, "Message"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Tag",
                                                  Style[
                                                   "Tag",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, "Tag"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, "Tag"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "CellID",
                                                  Style[
                                                   "CellID",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, "CellID"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, "CellID"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               "Warning",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {1, Key["Level"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{105.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {1, Key["Message"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "DocumentationWrongPacletName",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {1, Key["Tag"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{313.6, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               RawBoxes["268995717"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {1, Key["CellID"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{34, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               "Suggestion",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {2, Key["Level"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{105.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "Example captions should usually end in a colon when appearing before input",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {2, Key["Message"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "ExampleTextLastCharacter",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {2, Key["Tag"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{313.6, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               RawBoxes["319073343"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {2, Key["CellID"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{34, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               "Suggestion",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {3, Key["Level"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{105.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "Inputs should be separated so they each generate at most a single output",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {3, Key["Message"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "MultipleOutputs",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {3, Key["Tag"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{313.6, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               RawBoxes["55333842"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {3, Key["CellID"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{34, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               "Warning",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {4, Key["Level"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{105.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "The paclet creator and the resource creator are expected to match",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {4, Key["Message"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "PacletCreatorMismatch",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {4, Key["Tag"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{313.6, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               RawBoxes["312969925"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {4, Key["CellID"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{34, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               "Suggestion",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {5, Key["Level"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{105.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {5, Key["Message"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "StringLink",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {5, Key["Tag"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{313.6, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               RawBoxes["437199519"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {5, Key["CellID"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{34, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           }
                                          },
                                          BaseStyle -> {
                                           ContextMenu ->
                                            Dynamic[
                                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                             Which[
                                              UnsameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                               TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                               ]
                                              ],
                                              { },
                                              SameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                              ],
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                              True,
                                              
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                               Block[
                                                {
                                                 TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                 }
                                                },
                                                With[
                                                 {
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                  TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                   And[
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                     Alternatives["RowHeader", "ColumnHeader"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                     "SortDirections"
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                   Not[
                                                    FailureQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ]
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                   Not[
                                                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                   ]
                                                 },
                                                 Join[
                                                  {
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Show ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "remove"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                     And[
                                                      TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                      TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                     ]
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Hide ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "add"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   Delimiter
                                                  },
                                                  If[ And[
                                                    TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                     Alternatives["ColumnHeader", "KeyDummy"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                   ],
                                                   {
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Ascending"
                                                     ],
                                                     MenuItem[
                                                      "Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Ascending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Descending"
                                                     ],
                                                     MenuItem[
                                                      "Reverse Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Descending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      None
                                                     ],
                                                     MenuItem[
                                                      "Unsort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        None
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    Delimiter
                                                   },
                                                   { }
                                                  ],
                                                  {
                                                   MenuItem[
                                                    "Copy Position to Clipboard",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Copy Data to Clipboard",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ],
                                                   Delimiter,
                                                   MenuItem[
                                                    "Paste Position in New Cell",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Paste Data in New Cell",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ]
                                                  }
                                                 ]
                                                ]
                                               ]
                                             ]
                                            ],
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          },
                                          Dividers -> All,
                                          FrameStyle -> GrayLevel[0.74902],
                                          Spacings -> {0, 0},
                                          Alignment -> Left,
                                          BaseStyle -> {
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          }
                                         ],
                                         LineBreakWithin -> False,
                                         ContextMenu -> { },
                                         NumberMarks -> False,
                                         ShowAutoStyles -> False
                                        ]
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                     },
                                     Dynamic[
                                      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       
                                       If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                        Module[
                                         {
                                          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                          TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                           TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                            TypeSystem`NestedGrid`PackagePrivate`$state$$
                                           ]
                                         },
                                         
                                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                          If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                           TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                            TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                           ]
                                          ];

                                         If[ Not[
                                           FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                          ],
                                          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                         ];
                                        ]
                                       ];

                                       TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                       If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                        TypeSystem`SparseGrid[
                                         TypeSystem`H["(data no longer present)"]
                                        ],
                                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                       ]
                                      ],
                                      TrackedSymbols :> {
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                      }
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                    Dynamic[
                                     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                      TypeSystem`PackageScope`SubViewPathbar[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       TypeSystem`NestedGrid`PackagePrivate`updateState[
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                      ]
                                     ],
                                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                    Style[
                                     Framed[
                                      Dynamic[
                                       Replace[
                                        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                        {
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Null,
                                          Blank[]
                                         ] -> "",
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                           Blank[]
                                          ]
                                         ] :>
                                          (
                                          Increment[
                                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                          ];

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                           TypeSystem`NestedGrid`PackagePrivate`path$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ];

                                          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                          ]),
                                         Null :> Spacer[10],
                                         Blank[] :> Spacer[10]
                                        }
                                       ],
                                       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                      ],
                                      FrameStyle -> None,
                                      ImageMargins -> 0,
                                      FrameMargins -> 0,
                                      Alignment -> Top,
                                      ImageSize -> {Automatic, 15}
                                     ],
                                     FontSize -> 1
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                  },
                                  DynamicWrapperBox[
                                   DynamicBox[
                                    ToBoxes[
                                     Dataset`DatasetContent[
                                      2,
                                      "Path" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                      "Grid" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                      "State" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                      "VPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                      "HPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                      "TopBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                      "BottomBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                      "OutputID" ->
                                       Hold[
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                     ],
                                     StandardForm
                                    ],
                                    TrackedSymbols :> {
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                    }
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                    MouseAnnotation[]
                                  ],
                                  Initialization :>
                                   (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                    CreateUUID[]),
                                  DynamicModuleValues :> { },
                                  BaseStyle -> {LineBreakWithin -> False},
                                  UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                 ],
                                 Deploy,
                                 DefaultBaseStyle -> "Deploy"
                                ],
                                Dataset`InterpretDataset[1],
                                Selectable -> False,
                                Editable -> False,
                                SelectWithContents -> True
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"PacletBuild\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "PacletBuild",
               <|
                "PacletArchive" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\build\\MyPublisher__MyPaclet-1.0.0",
                "TotalTime" -> Quantity[3.89, "Seconds"],
                "PacletManifest" ->
                 Dataset[
                  <|
                   "Files" -> {
                    <|
                     "File" -> File["Kernel\\AddOne.wl"],
                     "Hash" -> "5efc1d99405a616b7d9d9bc4445d0fb9d268d95c2a9ee657bf6c7fd3c876e7c9"
                    |>,
                    <|
                     "File" -> File["Kernel\\AddTwo.wl"],
                     "Hash" -> "c84b6b0f9c1d96fb82010282c1729d0b2ca28556e29ca7ad779cea4ac28e6755"
                    |>,
                    <|
                     "File" -> File["Kernel\\MyPaclet.wl"],
                     "Hash" -> "db6ad332284c4612dc21a36bb6ac07d15d6c1b7b4bf47409f089dfcccd247231"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                      ],
                     "Hash" -> "64d109f11b00ad797fae013601c03a5d4b3135a06d5b5f22fead23e1c917147a"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                      ],
                     "Hash" -> "3416c608a3c6a2a1a3366fa56764c50ae870524ee0657de18b666c517f3a85cd"
                    |>,
                    <|
                     "File" -> File["LICENSE"],
                     "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                    |>
                   }
                  |>,
                  TypeSystem`Assoc[
                   TypeSystem`Atom[String],
                   TypeSystem`Vector[
                    TypeSystem`Struct[
                     {"File", "Hash"},
                     {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                    ],
                    6
                   ],
                   1
                  ],
                  <| |>
                 ],
                "DocumentationBuildResults" -> {
                 Success[
                  "DocumentationBuild",
                  <|
                   "TotalTime" -> Quantity[1.2422, "Seconds"],
                   "MaximumFileTime" -> {
                    Quantity[0.62143, "Seconds"],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                   },
                   "ProcessedFiles" -> <|
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.62143, "Seconds"]]
                     ],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.59258, "Seconds"]]
                     ]
                   |>,
                   "FailedFilesCount" -> 0,
                   "PercentSucceeded" -> Quantity[100.0, "Percent"],
                   "ProcessedFilesCount" -> 2,
                   "SuccessfulFilesCount" -> 2,
                   "SkippedFilesCount" -> 0,
                   "MessageTemplate" -> "Documentation build completed successfully."
                  |>
                 ]
                },
                "Source" ->
                 File[
                  "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                 ],
                "CheckResult" ->
                 Dataset[
                  {
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                    "Tag" -> "DocumentationWrongPacletName",
                    "CellID" -> 268995717
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Example captions should usually end in a colon when appearing before input",
                    "Tag" -> "ExampleTextLastCharacter",
                    "CellID" -> 319073343
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Inputs should be separated so they each generate at most a single output",
                    "Tag" -> "MultipleOutputs",
                    "CellID" -> 55333842
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The paclet creator and the resource creator are expected to match",
                    "Tag" -> "PacletCreatorMismatch",
                    "CellID" -> 312969925
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                    "Tag" -> "StringLink",
                    "CellID" -> 437199519
                   |>
                  },
                  TypeSystem`Vector[
                   TypeSystem`Struct[
                    {"Level", "Message", "Tag", "CellID"},
                    {
                     TypeSystem`Atom[
                      TypeSystem`Enumeration["Suggestion", "Warning"]
                     ],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[Integer]
                    }
                   ],
                   5
                  ],
                  <| |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 220975904
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 152909942
        ],
        Cell[
         "Specify the conditions that will trigger an inspection failure:",
         "ExampleText",
         CellID -> 194785720
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "BuildPaclet",
               "[",
               RowBox[
                {
                 RowBox[{"ExampleDirectory", "[", "\"MoreIssues\"", "]"}],
                 ",",
                 RowBox[{"\"Check\"", "\[Rule]", "True"}],
                 ",",
                 "\[IndentingNewLine]",
                 RowBox[
                  {
                   "\"DisabledHints\"",
                   "\[Rule]",
                   RowBox[
                    {
                     "{",
                     RowBox[{"Inherited", ",", "\"CodeInspectionIssues\""}],
                     "}"
                    }
                   ]
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "\"FailureCondition\"",
                   "\[Rule]",
                   RowBox[
                    {"{", RowBox[{"\"Warning\"", ",", "\"Error\""}], "}"}
                   ]
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 156825305
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"DocumentationWrongPacletName\"",
                          "\":\"",
                          "268995717",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 268995717,
                         "Level" -> "Warning",
                         "Tag" -> "DocumentationWrongPacletName",
                         "Parameters" -> <|
                          "CellID" -> 268995717,
                          "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb",
                          "Excluded" -> False,
                          "DocumentationNotebook" -> True,
                          "DocumentFlag" -> None,
                          "ObjectName" -> "AddOne",
                          "FullName" -> "SamplePublisher`MyPaclet`AddOne",
                          "Type" -> "Function",
                          "FileHash" -> 9062897167568967930,
                          "EntityType" -> "Symbol",
                          "PacletName" -> "SamplePublisher/WrongPacletName",
                          "Context" -> "SamplePublisher`MyPaclet`",
                          "URI" -> "SamplePublisher/MyPaclet/ref/AddOne",
                          "ExpectedPacletName" -> "SamplePublisher/MyPaclet"
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[
                        {"(", "DocumentationWrongPacletName", ":", 268995717, ")"}
                       ],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 268995717,
                       "Level" -> "Warning",
                       "Tag" -> "DocumentationWrongPacletName",
                       "Parameters" -> <|
                        "CellID" -> 268995717,
                        "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb",
                        "Excluded" -> False,
                        "DocumentationNotebook" -> True,
                        "DocumentFlag" -> None,
                        "ObjectName" -> "AddOne",
                        "FullName" -> "SamplePublisher`MyPaclet`AddOne",
                        "Type" -> "Function",
                        "FileHash" -> 9062897167568967930,
                        "EntityType" -> "Symbol",
                        "PacletName" -> "SamplePublisher/WrongPacletName",
                        "Context" -> "SamplePublisher`MyPaclet`",
                        "URI" -> "SamplePublisher/MyPaclet/ref/AddOne",
                        "ExpectedPacletName" -> "SamplePublisher/MyPaclet"
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 480911235
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"The paclet creator and the resource creator are expected to match\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"PacletCreatorMismatch\"",
                          "\":\"",
                          "312969925",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 312969925,
                         "Level" -> "Warning",
                         "Tag" -> "PacletCreatorMismatch",
                         "Parameters" -> <|
                          "PacletCreator" -> "Example Creator",
                          "ResourceCreator" -> "Example Author",
                          "PacletDirectory" ->
                           File[
                            "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\"
                           ]
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "The paclet creator and the resource creator are expected to match",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "PacletCreatorMismatch", ":", 312969925, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 312969925,
                       "Level" -> "Warning",
                       "Tag" -> "PacletCreatorMismatch",
                       "Parameters" -> <|
                        "PacletCreator" -> "Example Creator",
                        "ResourceCreator" -> "Example Author",
                        "PacletDirectory" ->
                         File[
                          "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\"
                         ]
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 6185877
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Example captions should usually end in a colon when appearing before input\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"ExampleTextLastCharacter\"",
                          "\":\"",
                          "319073343",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 319073343,
                         "Level" -> "Suggestion",
                         "Tag" -> "ExampleTextLastCharacter",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Example captions should usually end in a colon when appearing before input",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "ExampleTextLastCharacter", ":", 319073343, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 319073343,
                       "Level" -> "Suggestion",
                       "Tag" -> "ExampleTextLastCharacter",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 70348908
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Inputs should be separated so they each generate at most a single output\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"MultipleOutputs\"",
                          "\":\"",
                          "55333842",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 55333842,
                         "Level" -> "Suggestion",
                         "Tag" -> "MultipleOutputs",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Inputs should be separated so they each generate at most a single output",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "MultipleOutputs", ":", 55333842, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 55333842,
                       "Level" -> "Suggestion",
                       "Tag" -> "MultipleOutputs",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 719654295
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Related links should usually be given as a labeled hyperlink instead of a raw URL\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {"\"(\"", "\"StringLink\"", "\":\"", "437199519", "\")\""},
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 437199519,
                         "Level" -> "Suggestion",
                         "Tag" -> "StringLink",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "StringLink", ":", 437199519, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 437199519,
                       "Level" -> "Suggestion",
                       "Tag" -> "StringLink",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 253932037
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.96471, 0.16863, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Error\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Error", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.80784, 0.80392],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Error"
                      ],
                      Background -> RGBColor[1.0, 0.80784, 0.80392],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   "\"Scraping failed due to the specified failure conditions.\""
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Error"
                    ],
                    Background -> RGBColor[1.0, 0.80784, 0.80392],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  "Scraping failed due to the specified failure conditions."
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[1]:=",
               CellID -> 135634109
              ]
             },
             Open
            ]
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               "CheckPaclet",
               "errors",
               "\"Errors encountered while checking paclet.\"",
               2,
               1,
               5,
               33997430240731871973,
               "Local",
               "Wolfram`PacletCICD`CheckPaclet"
              },
              "MessageTemplate2"
             ]
            ],
            "Message",
            "MSG",
            CellLabel -> "During evaluation of In[1]:=",
            CellID -> 24683073
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Failure", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[WarningSign]\"",
                           Directive["Message", 35],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Message: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"Errors encountered while checking paclet.\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Tag: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"CheckPaclet::errors\"", "SummaryItem"]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[WarningSign]\"",
                           Directive["Message", 35],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Message: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"Errors encountered while checking paclet.\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Tag: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"CheckPaclet::errors\"", "SummaryItem"]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"FailureCondition\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                RowBox[
                                 {"{", RowBox[{"\"Warning\"", ",", "\"Error\""}], "}"}
                                ],
                                HoldForm
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Source\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                RowBox[
                                 {
                                  "File",
                                  "[",
                                  TemplateBox[
                                   {
                                    "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb\""
                                   },
                                   "FileArgument"
                                  ],
                                  "]"
                                 }
                                ],
                                HoldForm
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"BuildResult\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                RowBox[{"Missing", "[", "\"CheckFailed\"", "]"}],
                                HoldForm
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"CheckResult\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                TagBox[
                                 TagBox[
                                  DynamicModuleBox[
                                   {
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                     "InitialData" -> {
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                                       "Tag" -> "DocumentationWrongPacletName",
                                       "CellID" -> 268995717
                                      |>,
                                      <|
                                       "Level" -> "Suggestion",
                                       "Message" -> "Example captions should usually end in a colon when appearing before input",
                                       "Tag" -> "ExampleTextLastCharacter",
                                       "CellID" -> 319073343
                                      |>,
                                      <|
                                       "Level" -> "Suggestion",
                                       "Message" -> "Inputs should be separated so they each generate at most a single output",
                                       "Tag" -> "MultipleOutputs",
                                       "CellID" -> 55333842
                                      |>,
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "The paclet creator and the resource creator are expected to match",
                                       "Tag" -> "PacletCreatorMismatch",
                                       "CellID" -> 312969925
                                      |>,
                                      <|
                                       "Level" -> "Suggestion",
                                       "Message" -> "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                                       "Tag" -> "StringLink",
                                       "CellID" -> 437199519
                                      |>
                                     },
                                     "AllowEmbedding" -> True,
                                     "InitialShape" ->
                                      TypeSystem`PackageScope`HeaderShape[
                                       <|
                                        {All, "Level"} -> 1,
                                        {All, "Message"} -> 1,
                                        {All, "Tag"} -> 1,
                                        {All, "CellID"} -> 1
                                       |>,
                                       TypeSystem`PackageScope`Limited[
                                        TypeSystem`PackageScope`ColumnShape[
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`RowShape[
                                           <|
                                            "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                                            "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                                            "Tag" -> TypeSystem`PackageScope`AtomShape[313.6],
                                            "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                                           |>
                                          ],
                                          Infinity,
                                          4,
                                          {All}
                                         ]
                                        ],
                                        5,
                                        Infinity,
                                        { }
                                       ]
                                      ],
                                     "InitialType" ->
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"Level", "Message", "Tag", "CellID"},
                                        {
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration["Suggestion", "Warning"]
                                         ],
                                         TypeSystem`Atom[String],
                                         TypeSystem`Atom[String],
                                         TypeSystem`Atom[Integer]
                                        }
                                       ],
                                       5
                                      ],
                                     "Meta" -> <| |>,
                                     "RowTarget" -> 20,
                                     "ColumnTarget" -> 10,
                                     "Shape" ->
                                      TypeSystem`PackageScope`HeaderShape[
                                       <|
                                        {All, "Level"} -> 1,
                                        {All, "Message"} -> 1,
                                        {All, "Tag"} -> 1,
                                        {All, "CellID"} -> 1
                                       |>,
                                       TypeSystem`PackageScope`Limited[
                                        TypeSystem`PackageScope`ColumnShape[
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`RowShape[
                                           <|
                                            "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                                            "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                                            "Tag" -> TypeSystem`PackageScope`AtomShape[313.6],
                                            "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                                           |>
                                          ],
                                          Infinity,
                                          4,
                                          {All}
                                         ]
                                        ],
                                        5,
                                        Infinity,
                                        { }
                                       ]
                                      ],
                                     "Type" ->
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"Level", "Message", "Tag", "CellID"},
                                        {
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration["Suggestion", "Warning"]
                                         ],
                                         TypeSystem`Atom[String],
                                         TypeSystem`Atom[String],
                                         TypeSystem`Atom[Integer]
                                        }
                                       ],
                                       5
                                      ],
                                     "Path" -> { },
                                     "DisplayedRowCount" -> 5,
                                     "DisplayedColumnCount" -> 4,
                                     "DataRowCount" -> 5,
                                     "DataColumnCount" -> 4,
                                     "SortPaths" -> { },
                                     "SortDirections" -> { },
                                     "HiddenItemsMap" -> Null,
                                     "UpdateType" -> 1
                                    |>,
                                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                     DynamicModule[
                                      {
                                       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                        Deploy[
                                         Style[
                                          Grid[
                                           {
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "Level",
                                                   Style[
                                                    "Level",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "Level"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "Level"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "Message",
                                                   Style[
                                                    "Message",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "Message"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "Message"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "Tag",
                                                   Style[
                                                    "Tag",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "Tag"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "Tag"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "CellID",
                                                   Style[
                                                    "CellID",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "CellID"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "CellID"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "DocumentationWrongPacletName",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{313.6, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["268995717"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Suggestion",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Example captions should usually end in a colon when appearing before input",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "ExampleTextLastCharacter",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{313.6, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["319073343"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Suggestion",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Inputs should be separated so they each generate at most a single output",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "MultipleOutputs",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{313.6, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["55333842"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "The paclet creator and the resource creator are expected to match",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "PacletCreatorMismatch",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{313.6, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["312969925"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Suggestion",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "StringLink",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{313.6, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["437199519"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            }
                                           },
                                           BaseStyle -> {
                                            ContextMenu ->
                                             Dynamic[
                                              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                              Which[
                                               UnsameQ[
                                                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                                TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                                ]
                                               ],
                                               { },
                                               SameQ[
                                                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                               True,
                                               
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                                Block[
                                                 {
                                                  TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                  }
                                                 },
                                                 With[
                                                  {
                                                   TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                   TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                    And[
                                                     MatchQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                      Alternatives["RowHeader", "ColumnHeader"]
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ]
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                      "SortDirections"
                                                     ]
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                    Not[
                                                     FailureQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ]
                                                     ]
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                    Not[
                                                     FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                    ]
                                                  },
                                                  Join[
                                                   {
                                                    If[ Or[
                                                      Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                      Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                      TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                     ],
                                                     Nothing,
                                                     MenuItem[
                                                      StringJoin[
                                                       "Show ",
                                                       Which[
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "Item"
                                                        ],
                                                        "",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "RowHeader"
                                                        ],
                                                        "Row",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "ColumnHeader"
                                                        ],
                                                        "Column",
                                                        True,
                                                        ""
                                                       ]
                                                      ],
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "remove"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ]
                                                    ],
                                                    If[ Or[
                                                      Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                      TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ],
                                                      TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                      And[
                                                       TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                       TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                      ]
                                                     ],
                                                     Nothing,
                                                     MenuItem[
                                                      StringJoin[
                                                       "Hide ",
                                                       Which[
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "Item"
                                                        ],
                                                        "",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "RowHeader"
                                                        ],
                                                        "Row",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "ColumnHeader"
                                                        ],
                                                        "Column",
                                                        True,
                                                        ""
                                                       ]
                                                      ],
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "add"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ]
                                                    ],
                                                    Delimiter
                                                   },
                                                   If[ And[
                                                     TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                     MatchQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                      Alternatives["ColumnHeader", "KeyDummy"]
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                    ],
                                                    {
                                                     If[ UnsameQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                       "Ascending"
                                                      ],
                                                      MenuItem[
                                                       "Sort",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                         "Ascending"
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      Nothing
                                                     ],
                                                     If[ UnsameQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                       "Descending"
                                                      ],
                                                      MenuItem[
                                                       "Reverse Sort",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                         "Descending"
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      Nothing
                                                     ],
                                                     If[ UnsameQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                       None
                                                      ],
                                                      MenuItem[
                                                       "Unsort",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                         None
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      Nothing
                                                     ],
                                                     Delimiter
                                                    },
                                                    { }
                                                   ],
                                                   {
                                                    MenuItem[
                                                     "Copy Position to Clipboard",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                       TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                     MenuItem[
                                                      "Copy Data to Clipboard",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                        TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    Delimiter,
                                                    MenuItem[
                                                     "Paste Position in New Cell",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                       TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                     MenuItem[
                                                      "Paste Data in New Cell",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                        TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ]
                                                   }
                                                  ]
                                                 ]
                                                ]
                                              ]
                                             ],
                                            FontFamily -> "Source Sans Pro",
                                            FontSize -> 14,
                                            FontWeight -> Plain
                                           },
                                           Dividers -> All,
                                           FrameStyle -> GrayLevel[0.74902],
                                           Spacings -> {0, 0},
                                           Alignment -> Left,
                                           BaseStyle -> {
                                            FontFamily -> "Source Sans Pro",
                                            FontSize -> 14,
                                            FontWeight -> Plain
                                           }
                                          ],
                                          LineBreakWithin -> False,
                                          ContextMenu -> { },
                                          NumberMarks -> False,
                                          ShowAutoStyles -> False
                                         ]
                                        ],
                                       TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                      },
                                      Dynamic[
                                       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        
                                        If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                         Module[
                                          {
                                           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                            TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                             TypeSystem`NestedGrid`PackagePrivate`$state$$
                                            ]
                                          },
                                          
                                          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                           If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                            TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                            TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                             TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                            ]
                                           ];

                                          If[ Not[
                                            FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                           ],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                          ];
                                         ]
                                        ];

                                        TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                         TypeSystem`SparseGrid[
                                          TypeSystem`H["(data no longer present)"]
                                         ],
                                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                        ]
                                       ],
                                       TrackedSymbols :> {
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                       }
                                      ],
                                      DynamicModuleValues :> { }
                                     ],
                                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                     Dynamic[
                                      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                       TypeSystem`PackageScope`SubViewPathbar[
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`updateState[
                                         TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                         ]
                                        ]
                                       ]
                                      ],
                                      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                     ],
                                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                     Style[
                                      Framed[
                                       Dynamic[
                                        Replace[
                                         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                         {
                                          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                           Null,
                                           Blank[]
                                          ] -> "",
                                          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                           Pattern[
                                            TypeSystem`NestedGrid`PackagePrivate`path$,
                                            Blank[]
                                           ],
                                           Pattern[
                                            TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                            Blank[]
                                           ],
                                           Pattern[
                                            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                            Blank[]
                                           ]
                                          ] :>
                                           (
                                           Increment[
                                            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                           ];

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                            TypeSystem`NestedGrid`PackagePrivate`path$;

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                            TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                            TypeSystem`NestedGrid`PackagePrivate`localHold[
                                             TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                            ];

                                           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                            TypeSystem`NestedGrid`PackagePrivate`path$,
                                            TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                           ]),
                                          Null :> Spacer[10],
                                          Blank[] :> Spacer[10]
                                         }
                                        ],
                                        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                       ],
                                       FrameStyle -> None,
                                       ImageMargins -> 0,
                                       FrameMargins -> 0,
                                       Alignment -> Top,
                                       ImageSize -> {Automatic, 15}
                                      ],
                                      FontSize -> 1
                                     ],
                                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                   },
                                   DynamicWrapperBox[
                                    DynamicBox[
                                     ToBoxes[
                                      Dataset`DatasetContent[
                                       2,
                                       "Path" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                       "Grid" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                       "State" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                       "VPos" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                       "HPos" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                       "TopBar" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                       "BottomBar" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                       "OutputID" ->
                                        Hold[
                                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                         ]
                                        ]
                                      ],
                                      StandardForm
                                     ],
                                     TrackedSymbols :> {
                                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                      TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                     }
                                    ],
                                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                     MouseAnnotation[]
                                   ],
                                   Initialization :>
                                    (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                     CreateUUID[]),
                                   DynamicModuleValues :> { },
                                   BaseStyle -> {LineBreakWithin -> False},
                                   UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                  ],
                                  Deploy,
                                  DefaultBaseStyle -> "Deploy"
                                 ],
                                 Dataset`InterpretDataset[1],
                                 Selectable -> False,
                                 Editable -> False,
                                 SelectWithContents -> True
                                ],
                                HoldForm
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Failure[
               "CheckPaclet::errors",
               <|
                "MessageTemplate" ->
                 MessageName[Wolfram`PacletCICD`CheckPaclet, "errors"],
                "MessageParameters" -> { },
                "FailureCondition" -> {"Warning", "Error"},
                "Source" ->
                 File[
                  "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                 ],
                "BuildResult" -> Missing["CheckFailed"],
                "CheckResult" ->
                 Dataset[
                  {
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                    "Tag" -> "DocumentationWrongPacletName",
                    "CellID" -> 268995717
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Example captions should usually end in a colon when appearing before input",
                    "Tag" -> "ExampleTextLastCharacter",
                    "CellID" -> 319073343
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Inputs should be separated so they each generate at most a single output",
                    "Tag" -> "MultipleOutputs",
                    "CellID" -> 55333842
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The paclet creator and the resource creator are expected to match",
                    "Tag" -> "PacletCreatorMismatch",
                    "CellID" -> 312969925
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                    "Tag" -> "StringLink",
                    "CellID" -> 437199519
                   |>
                  },
                  TypeSystem`Vector[
                   TypeSystem`Struct[
                    {"Level", "Message", "Tag", "CellID"},
                    {
                     TypeSystem`Atom[
                      TypeSystem`Enumeration["Suggestion", "Warning"]
                     ],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[Integer]
                    }
                   ],
                   5
                  ],
                  <| |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 194785734
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "More Examples",
        Cell[
         BoxData[
          TemplateBox[
           {
            "MoreExamples",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Extended examples in standardized sections.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExtendedExamplesSection",
      CellTags -> "ExtendedExamples",
      CellID -> 55686900
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Scope", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 28765612
        ],
        Cell[
         TextData[
          {
           "With no arguments, ",
           Cell[
            BoxData[
             ButtonBox[
              "BuildPaclet",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/PacletCICD/ref/BuildPaclet"
             ]
            ],
            "InlineFormula"
           ],
           " will look in the current working directory:"
          }
         ],
         "ExampleText",
         CellID -> 346693520
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SetDirectory",
               "[",
               RowBox[{"ExampleDirectory", "[", "\"FewIssues\"", "]"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 467276392
           ],
           Cell[
            BoxData[
             "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\""
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 311894950
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"BuildPaclet", "[", "]"}]],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 505709326
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"3.8891348`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"3.8891348`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                TagBox[
                                 DynamicModuleBox[
                                  {
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                    "InitialData" -> <|
                                     "Files" -> {
                                      <|
                                       "File" -> File["Kernel\\AddOne.wl"],
                                       "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\AddTwo.wl"],
                                       "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\MyPaclet.wl"],
                                       "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                        ],
                                       "Hash" -> "674e36057b4663f80ea0af5284427c41fc61d598fa0bce238062f761a148059b"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                        ],
                                       "Hash" -> "7c6cf277351972b84ff39e60c171dcc58a88f5acb9488e6db03599784a45e27f"
                                      |>,
                                      <|
                                       "File" -> File["LICENSE"],
                                       "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                                      |>
                                     }
                                    |>,
                                    "AllowEmbedding" -> True,
                                    "InitialShape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[3]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "InitialType" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Meta" -> <| |>,
                                    "RowTarget" -> 20,
                                    "ColumnTarget" -> 10,
                                    "Shape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[3]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "Type" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Path" -> { },
                                    "DisplayedRowCount" -> 1,
                                    "DisplayedColumnCount" -> 2,
                                    "DataRowCount" -> 1,
                                    "DataColumnCount" -> 2,
                                    "SortPaths" -> { },
                                    "SortDirections" -> { },
                                    "HiddenItemsMap" -> Null,
                                    "UpdateType" -> 1
                                   |>,
                                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                   TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                    DynamicModule[
                                     {
                                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                       Deploy[
                                        Style[
                                         Grid[
                                          {
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               Mouseover[
                                                Graphics[
                                                 { },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ],
                                                Graphics[
                                                 {
                                                  GrayLevel[0.6],
                                                  Polygon[
                                                   {
                                                    {1/Sqrt[2], -(1/Sqrt[2])},
                                                    {1/Sqrt[2], 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                                   }
                                                  ]
                                                 },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, Keys},
                                                "KeyDummy",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "File",
                                                  Style[
                                                   "File",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "File"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "File"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Hash",
                                                  Style[
                                                   "Hash",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "Hash"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "Hash"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Files",
                                                  Style[
                                                   "Files",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {Key["Files"]},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"]},
                                                "RowHeader",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{56.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddOne.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddTwo.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\MyPaclet.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "674e36057b4663f80ea0af5284427c41fc61d598fa0bce238062f761a148059b",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "7c6cf277351972b84ff39e60c171dcc58a88f5acb9488e6db03599784a45e27f",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["LICENSE"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           }
                                          },
                                          BaseStyle -> {
                                           ContextMenu ->
                                            Dynamic[
                                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                             Which[
                                              UnsameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                               TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                               ]
                                              ],
                                              { },
                                              SameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                              ],
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                              True,
                                              
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                               Block[
                                                {
                                                 TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                 }
                                                },
                                                With[
                                                 {
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                  TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                   And[
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                     Alternatives["RowHeader", "ColumnHeader"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                     "SortDirections"
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                   Not[
                                                    FailureQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ]
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                   Not[
                                                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                   ]
                                                 },
                                                 Join[
                                                  {
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Show ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "remove"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                     And[
                                                      TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                      TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                     ]
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Hide ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "add"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   Delimiter
                                                  },
                                                  If[ And[
                                                    TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                     Alternatives["ColumnHeader", "KeyDummy"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                   ],
                                                   {
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Ascending"
                                                     ],
                                                     MenuItem[
                                                      "Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Ascending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Descending"
                                                     ],
                                                     MenuItem[
                                                      "Reverse Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Descending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      None
                                                     ],
                                                     MenuItem[
                                                      "Unsort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        None
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    Delimiter
                                                   },
                                                   { }
                                                  ],
                                                  {
                                                   MenuItem[
                                                    "Copy Position to Clipboard",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Copy Data to Clipboard",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ],
                                                   Delimiter,
                                                   MenuItem[
                                                    "Paste Position in New Cell",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Paste Data in New Cell",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ]
                                                  }
                                                 ]
                                                ]
                                               ]
                                             ]
                                            ],
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          },
                                          Dividers -> All,
                                          FrameStyle -> GrayLevel[0.74902],
                                          Spacings -> {0, 0},
                                          Alignment -> Left,
                                          BaseStyle -> {
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          }
                                         ],
                                         LineBreakWithin -> False,
                                         ContextMenu -> { },
                                         NumberMarks -> False,
                                         ShowAutoStyles -> False
                                        ]
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                     },
                                     Dynamic[
                                      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       
                                       If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                        Module[
                                         {
                                          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                          TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                           TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                            TypeSystem`NestedGrid`PackagePrivate`$state$$
                                           ]
                                         },
                                         
                                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                          If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                           TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                            TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                           ]
                                          ];

                                         If[ Not[
                                           FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                          ],
                                          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                         ];
                                        ]
                                       ];

                                       TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                       If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                        TypeSystem`SparseGrid[
                                         TypeSystem`H["(data no longer present)"]
                                        ],
                                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                       ]
                                      ],
                                      TrackedSymbols :> {
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                      }
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                    Dynamic[
                                     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                      TypeSystem`PackageScope`SubViewPathbar[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       TypeSystem`NestedGrid`PackagePrivate`updateState[
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                      ]
                                     ],
                                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                    Style[
                                     Framed[
                                      Dynamic[
                                       Replace[
                                        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                        {
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Null,
                                          Blank[]
                                         ] -> "",
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                           Blank[]
                                          ]
                                         ] :>
                                          (
                                          Increment[
                                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                          ];

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                           TypeSystem`NestedGrid`PackagePrivate`path$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ];

                                          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                          ]),
                                         Null :> Spacer[10],
                                         Blank[] :> Spacer[10]
                                        }
                                       ],
                                       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                      ],
                                      FrameStyle -> None,
                                      ImageMargins -> 0,
                                      FrameMargins -> 0,
                                      Alignment -> Top,
                                      ImageSize -> {Automatic, 15}
                                     ],
                                     FontSize -> 1
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                  },
                                  DynamicWrapperBox[
                                   DynamicBox[
                                    ToBoxes[
                                     Dataset`DatasetContent[
                                      2,
                                      "Path" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                      "Grid" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                      "State" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                      "VPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                      "HPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                      "TopBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                      "BottomBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                      "OutputID" ->
                                       Hold[
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                     ],
                                     StandardForm
                                    ],
                                    TrackedSymbols :> {
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                    }
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                    MouseAnnotation[]
                                  ],
                                  Initialization :>
                                   (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                    CreateUUID[]),
                                  DynamicModuleValues :> { },
                                  BaseStyle -> {LineBreakWithin -> False},
                                  UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                 ],
                                 Deploy,
                                 DefaultBaseStyle -> "Deploy"
                                ],
                                Dataset`InterpretDataset[1],
                                Selectable -> False,
                                Editable -> False,
                                SelectWithContents -> True
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"DocumentationBuildResults\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "{",
                                 InterpretationBox[
                                  RowBox[
                                   {
                                    TagBox["Success", "SummaryHead"],
                                    "[",
                                    DynamicModuleBox[
                                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                     TemplateBox[
                                      {
                                       PaneSelectorBox[
                                        {
                                         False ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = True),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.2146404`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ],
                                         True ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = False),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.2146404`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"MaximumFileTime\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "{",
                                                     RowBox[
                                                      {
                                                       TemplateBox[
                                                        {"0.6367448`", "\"s\"", "seconds", "\"Seconds\""},
                                                        "Quantity",
                                                        SyntaxForm -> Mod
                                                       ],
                                                       ",",
                                                       "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\""
                                                      }
                                                     ],
                                                     "}"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"ProcessedFiles\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "\[LeftAssociation]",
                                                     RowBox[
                                                      {
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.6367448`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.6367448`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.63674, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ],
                                                       ",",
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddTwo.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5500417`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5500417`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.55004, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ]
                                                      }
                                                     ],
                                                     "\[RightAssociation]"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"FailedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"PercentSucceeded\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"100.`", "\"%\"", "percent", "\"Percent\""},
                                                    "QuantityPostfix",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"ProcessedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SuccessfulFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SkippedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["\"DocumentationBuild\"", "SummaryItem"]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ]
                                        },
                                        Dynamic[Typeset`open$$],
                                        ImageSize -> Automatic
                                       ]
                                      },
                                      "SummaryPanel"
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                    "]"
                                   }
                                  ],
                                  Success[
                                   "DocumentationBuild",
                                   <|
                                    "TotalTime" -> Quantity[1.2146, "Seconds"],
                                    "MaximumFileTime" -> {
                                     Quantity[0.63674, "Seconds"],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                    },
                                    "ProcessedFiles" -> <|
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.63674, "Seconds"]]
                                      ],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.55004, "Seconds"]]
                                      ]
                                    |>,
                                    "FailedFilesCount" -> 0,
                                    "PercentSucceeded" -> Quantity[100.0, "Percent"],
                                    "ProcessedFilesCount" -> 2,
                                    "SuccessfulFilesCount" -> 2,
                                    "SkippedFilesCount" -> 0,
                                    "MessageTemplate" -> "Documentation build completed successfully."
                                   |>
                                  ],
                                  Selectable -> False,
                                  Editable -> False,
                                  SelectWithContents -> True
                                 ],
                                 "}"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Source\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues/ResourceDefinition.nb\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"CheckResult\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"PacletBuild\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "PacletBuild",
               <|
                "PacletArchive" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\build\\MyPublisher__MyPaclet-1.0.0",
                "TotalTime" -> Quantity[3.8891, "Seconds"],
                "PacletManifest" ->
                 Dataset[
                  <|
                   "Files" -> {
                    <|
                     "File" -> File["Kernel\\AddOne.wl"],
                     "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                    |>,
                    <|
                     "File" -> File["Kernel\\AddTwo.wl"],
                     "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                    |>,
                    <|
                     "File" -> File["Kernel\\MyPaclet.wl"],
                     "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                      ],
                     "Hash" -> "674e36057b4663f80ea0af5284427c41fc61d598fa0bce238062f761a148059b"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                      ],
                     "Hash" -> "7c6cf277351972b84ff39e60c171dcc58a88f5acb9488e6db03599784a45e27f"
                    |>,
                    <|
                     "File" -> File["LICENSE"],
                     "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                    |>
                   }
                  |>,
                  TypeSystem`Assoc[
                   TypeSystem`Atom[String],
                   TypeSystem`Vector[
                    TypeSystem`Struct[
                     {"File", "Hash"},
                     {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                    ],
                    6
                   ],
                   1
                  ],
                  <| |>
                 ],
                "DocumentationBuildResults" -> {
                 Success[
                  "DocumentationBuild",
                  <|
                   "TotalTime" -> Quantity[1.2146, "Seconds"],
                   "MaximumFileTime" -> {
                    Quantity[0.63674, "Seconds"],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                   },
                   "ProcessedFiles" -> <|
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.63674, "Seconds"]]
                     ],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.55004, "Seconds"]]
                     ]
                   |>,
                   "FailedFilesCount" -> 0,
                   "PercentSucceeded" -> Quantity[100.0, "Percent"],
                   "ProcessedFilesCount" -> 2,
                   "SuccessfulFilesCount" -> 2,
                   "SkippedFilesCount" -> 0,
                   "MessageTemplate" -> "Documentation build completed successfully."
                  |>
                 ]
                },
                "Source" ->
                 File[
                  "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues/ResourceDefinition.nb"
                 ],
                "CheckResult" -> Missing["NotAvailable"]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 236877544
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"ResetDirectory", "[", "]"}]],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 25160559
           ],
           Cell[
            BoxData["\"H:\\\\Documents\""],
            "Output",
            CellLabel -> "Out[3]=",
            CellID -> 68838445
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             InterpretationBox[
              Cell["\t", "ExampleDelimiter"],
              $Line = 0;
             ]
            ],
            "ExampleDelimiter",
            CellID -> 571106012
           ],
           Cell[
            "Give a path to the definition notebook:",
            "ExampleText",
            CellID -> 518231038
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "path",
                  "=",
                  RowBox[
                   {
                    "FileNameJoin",
                    "[",
                    RowBox[
                     {
                      "{",
                      RowBox[
                       {
                        RowBox[
                         {
                          "First",
                          "[",
                          RowBox[{"ExampleDirectory", "[", "\"FewIssues\"", "]"}],
                          "]"
                         }
                        ],
                        ",",
                        "\"ResourceDefinition.nb\""
                       }
                      ],
                      "}"
                     }
                    ],
                    "]"
                   }
                  ]
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[1]:=",
               CellID -> 100989622
              ],
              Cell[
               BoxData[
                "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\ResourceDefinition.nb\""
               ],
               "Output",
               CellLabel -> "Out[1]=",
               CellID -> 4279128
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "BuildPaclet",
                  "[",
                  RowBox[{"File", "[", "path", "]"}],
                  "]"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[2]:=",
               CellID -> 320582640
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["Success", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = True),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                              StripOnInput -> False
                             ],
                             ContentPadding -> False,
                             FrameStyle -> None,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TemplateBox[
                                   {"3.9589394`", "\"s\"", "seconds", "\"Seconds\""},
                                   "Quantity",
                                   SyntaxForm -> Mod
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = False),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                              StripOnInput -> False
                             ],
                             ContentPadding -> False,
                             FrameStyle -> None,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TemplateBox[
                                   {"3.9589394`", "\"s\"", "seconds", "\"Seconds\""},
                                   "Quantity",
                                   SyntaxForm -> Mod
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TagBox[
                                   TagBox[
                                    DynamicModuleBox[
                                     {
                                      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                       "InitialData" -> <|
                                        "Files" -> {
                                         <|
                                          "File" -> File["Kernel\\AddOne.wl"],
                                          "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                                         |>,
                                         <|
                                          "File" -> File["Kernel\\AddTwo.wl"],
                                          "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                                         |>,
                                         <|
                                          "File" -> File["Kernel\\MyPaclet.wl"],
                                          "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                                         |>,
                                         <|
                                          "File" ->
                                           File[
                                            "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                           ],
                                          "Hash" -> "200d469e8188ad0d17603478f83a0364ba6402bdde339837e6595224c6acb71e"
                                         |>,
                                         <|
                                          "File" ->
                                           File[
                                            "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                           ],
                                          "Hash" -> "0d9b55bd0fe519db90abac9bb151a8996b593b8f3f399cb2606c9ed7df807614"
                                         |>,
                                         <|
                                          "File" -> File["LICENSE"],
                                          "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                                         |>
                                        }
                                       |>,
                                       "AllowEmbedding" -> True,
                                       "InitialShape" ->
                                        TypeSystem`PackageScope`HeaderShape[
                                         <|
                                          {All, All, TypeSystem`PackageScope`KeyDummy[4]} -> 1,
                                          {All, All, "File"} -> 1,
                                          {All, All, "Hash"} -> 1
                                         |>,
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`KeyValueShape[
                                            TypeSystem`PackageScope`AtomShape[56.0],
                                            TypeSystem`PackageScope`Limited[
                                             TypeSystem`PackageScope`ColumnShape[
                                              TypeSystem`PackageScope`Limited[
                                               TypeSystem`PackageScope`RowShape[
                                                <|
                                                 "File" -> TypeSystem`PackageScope`AtomShape[60],
                                                 "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                                |>
                                               ],
                                               Infinity,
                                               2,
                                               {All, All}
                                              ]
                                             ],
                                             6,
                                             Infinity,
                                             {All}
                                            ]
                                           ]
                                          ],
                                          1,
                                          Infinity,
                                          { }
                                         ]
                                        ],
                                       "InitialType" ->
                                        TypeSystem`Assoc[
                                         TypeSystem`Atom[String],
                                         TypeSystem`Vector[
                                          TypeSystem`Struct[
                                           {"File", "Hash"},
                                           {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                          ],
                                          6
                                         ],
                                         1
                                        ],
                                       "Meta" -> <| |>,
                                       "RowTarget" -> 20,
                                       "ColumnTarget" -> 10,
                                       "Shape" ->
                                        TypeSystem`PackageScope`HeaderShape[
                                         <|
                                          {All, All, TypeSystem`PackageScope`KeyDummy[4]} -> 1,
                                          {All, All, "File"} -> 1,
                                          {All, All, "Hash"} -> 1
                                         |>,
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`KeyValueShape[
                                            TypeSystem`PackageScope`AtomShape[56.0],
                                            TypeSystem`PackageScope`Limited[
                                             TypeSystem`PackageScope`ColumnShape[
                                              TypeSystem`PackageScope`Limited[
                                               TypeSystem`PackageScope`RowShape[
                                                <|
                                                 "File" -> TypeSystem`PackageScope`AtomShape[60],
                                                 "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                                |>
                                               ],
                                               Infinity,
                                               2,
                                               {All, All}
                                              ]
                                             ],
                                             6,
                                             Infinity,
                                             {All}
                                            ]
                                           ]
                                          ],
                                          1,
                                          Infinity,
                                          { }
                                         ]
                                        ],
                                       "Type" ->
                                        TypeSystem`Assoc[
                                         TypeSystem`Atom[String],
                                         TypeSystem`Vector[
                                          TypeSystem`Struct[
                                           {"File", "Hash"},
                                           {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                          ],
                                          6
                                         ],
                                         1
                                        ],
                                       "Path" -> { },
                                       "DisplayedRowCount" -> 1,
                                       "DisplayedColumnCount" -> 2,
                                       "DataRowCount" -> 1,
                                       "DataColumnCount" -> 2,
                                       "SortPaths" -> { },
                                       "SortDirections" -> { },
                                       "HiddenItemsMap" -> Null,
                                       "UpdateType" -> 1
                                      |>,
                                      TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                      TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                       DynamicModule[
                                        {
                                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                          Deploy[
                                           Style[
                                            Grid[
                                             {
                                              {
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  Mouseover[
                                                   Graphics[
                                                    { },
                                                    ImageSize -> 6,
                                                    BaselinePosition -> Scaled[-0.15]
                                                   ],
                                                   Graphics[
                                                    {
                                                     GrayLevel[0.6],
                                                     Polygon[
                                                      {
                                                       {1/Sqrt[2], -(1/Sqrt[2])},
                                                       {1/Sqrt[2], 1/Sqrt[2]},
                                                       {-(1/Sqrt[2]), 1/Sqrt[2]},
                                                       {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                                      }
                                                     ]
                                                    },
                                                    ImageSize -> 6,
                                                    BaselinePosition -> Scaled[-0.15]
                                                   ]
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {All, All, Keys},
                                                   "KeyDummy",
                                                   True
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{1, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                Background -> GrayLevel[0.95],
                                                Alignment -> {Left, Baseline}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  EventHandler[
                                                   MouseAppearance[
                                                    Mouseover[
                                                     "File",
                                                     Style[
                                                      "File",
                                                      FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                     ]
                                                    ],
                                                    "LinkHand"
                                                   ],
                                                   {"MouseClicked", 1} :>
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                      {All, All, "File"},
                                                      1
                                                     ]
                                                    ]
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {All, All, "File"},
                                                   "ColumnHeader",
                                                   True
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{1, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                Background -> GrayLevel[0.95],
                                                Alignment -> {Left, Baseline}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  EventHandler[
                                                   MouseAppearance[
                                                    Mouseover[
                                                     "Hash",
                                                     Style[
                                                      "Hash",
                                                      FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                     ]
                                                    ],
                                                    "LinkHand"
                                                   ],
                                                   {"MouseClicked", 1} :>
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                      {All, All, "Hash"},
                                                      1
                                                     ]
                                                    ]
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {All, All, "Hash"},
                                                   "ColumnHeader",
                                                   True
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{1, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                Background -> GrayLevel[0.95],
                                                Alignment -> {Left, Baseline}
                                               ]
                                              },
                                              {
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  EventHandler[
                                                   MouseAppearance[
                                                    Mouseover[
                                                     "Files",
                                                     Style[
                                                      "Files",
                                                      FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                     ]
                                                    ],
                                                    "LinkHand"
                                                   ],
                                                   {"MouseClicked", 1} :>
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                      {Key["Files"]},
                                                      1
                                                     ]
                                                    ]
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"]},
                                                   "RowHeader",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{56.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                Background -> GrayLevel[0.95],
                                                Alignment -> {Left, Baseline}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File["Kernel\\AddOne.wl"],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 1, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 1, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File["Kernel\\AddTwo.wl"],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 2, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 2, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File["Kernel\\MyPaclet.wl"],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 3, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 3, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File[
                                                   "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 4, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "200d469e8188ad0d17603478f83a0364ba6402bdde339837e6595224c6acb71e",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 4, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File[
                                                   "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 5, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "0d9b55bd0fe519db90abac9bb151a8996b593b8f3f399cb2606c9ed7df807614",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 5, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File["LICENSE"],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 6, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 6, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              }
                                             },
                                             BaseStyle -> {
                                              ContextMenu ->
                                               Dynamic[
                                                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                                Which[
                                                 UnsameQ[
                                                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                                  ]
                                                 ],
                                                 { },
                                                 SameQ[
                                                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                                 ],
                                                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                                 True,
                                                 
                                                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                                  Block[
                                                   {
                                                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                    }
                                                   },
                                                   With[
                                                    {
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                     TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                     TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                      And[
                                                       MatchQ[
                                                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                        Alternatives["RowHeader", "ColumnHeader"]
                                                       ],
                                                       TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                        TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                        TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                       ]
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                       TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                        "SortDirections"
                                                       ]
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                      Not[
                                                       FailureQ[
                                                        TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                         TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                        ]
                                                       ]
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                      Not[
                                                       FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                      ]
                                                    },
                                                    Join[
                                                     {
                                                      If[ Or[
                                                        Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                        Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                        TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                       ],
                                                       Nothing,
                                                       MenuItem[
                                                        StringJoin[
                                                         "Show ",
                                                         Which[
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "Item"
                                                          ],
                                                          "",
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "RowHeader"
                                                          ],
                                                          "Row",
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "ColumnHeader"
                                                          ],
                                                          "Column",
                                                          True,
                                                          ""
                                                         ]
                                                        ],
                                                        KernelExecute[
                                                         TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                          TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                          "remove"
                                                         ]
                                                        ],
                                                        MenuEvaluator -> Automatic
                                                       ]
                                                      ],
                                                      If[ Or[
                                                        Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                        TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                         TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                         TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                        ],
                                                        TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                        And[
                                                         TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                         TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                        ]
                                                       ],
                                                       Nothing,
                                                       MenuItem[
                                                        StringJoin[
                                                         "Hide ",
                                                         Which[
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "Item"
                                                          ],
                                                          "",
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "RowHeader"
                                                          ],
                                                          "Row",
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "ColumnHeader"
                                                          ],
                                                          "Column",
                                                          True,
                                                          ""
                                                         ]
                                                        ],
                                                        KernelExecute[
                                                         TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                          TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                          "add"
                                                         ]
                                                        ],
                                                        MenuEvaluator -> Automatic
                                                       ]
                                                      ],
                                                      Delimiter
                                                     },
                                                     If[ And[
                                                       TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                       MatchQ[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        Alternatives["ColumnHeader", "KeyDummy"]
                                                       ],
                                                       TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                       Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                      ],
                                                      {
                                                       If[ UnsameQ[
                                                         TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                         "Ascending"
                                                        ],
                                                        MenuItem[
                                                         "Sort",
                                                         KernelExecute[
                                                          TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                           "Ascending"
                                                          ]
                                                         ],
                                                         MenuEvaluator -> Automatic
                                                        ],
                                                        Nothing
                                                       ],
                                                       If[ UnsameQ[
                                                         TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                         "Descending"
                                                        ],
                                                        MenuItem[
                                                         "Reverse Sort",
                                                         KernelExecute[
                                                          TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                           "Descending"
                                                          ]
                                                         ],
                                                         MenuEvaluator -> Automatic
                                                        ],
                                                        Nothing
                                                       ],
                                                       If[ UnsameQ[
                                                         TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                         None
                                                        ],
                                                        MenuItem[
                                                         "Unsort",
                                                         KernelExecute[
                                                          TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                           None
                                                          ]
                                                         ],
                                                         MenuEvaluator -> Automatic
                                                        ],
                                                        Nothing
                                                       ],
                                                       Delimiter
                                                      },
                                                      { }
                                                     ],
                                                     {
                                                      MenuItem[
                                                       "Copy Position to Clipboard",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                         TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                       MenuItem[
                                                        "Copy Data to Clipboard",
                                                        KernelExecute[
                                                         TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                          TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                          TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                         ]
                                                        ],
                                                        MenuEvaluator -> Automatic
                                                       ],
                                                       Nothing
                                                      ],
                                                      Delimiter,
                                                      MenuItem[
                                                       "Paste Position in New Cell",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                         TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                       MenuItem[
                                                        "Paste Data in New Cell",
                                                        KernelExecute[
                                                         TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                          TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                          TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                         ]
                                                        ],
                                                        MenuEvaluator -> Automatic
                                                       ],
                                                       Nothing
                                                      ]
                                                     }
                                                    ]
                                                   ]
                                                  ]
                                                ]
                                               ],
                                              FontFamily -> "Source Sans Pro",
                                              FontSize -> 14,
                                              FontWeight -> Plain
                                             },
                                             Dividers -> All,
                                             FrameStyle -> GrayLevel[0.74902],
                                             Spacings -> {0, 0},
                                             Alignment -> Left,
                                             BaseStyle -> {
                                              FontFamily -> "Source Sans Pro",
                                              FontSize -> 14,
                                              FontWeight -> Plain
                                             }
                                            ],
                                            LineBreakWithin -> False,
                                            ContextMenu -> { },
                                            NumberMarks -> False,
                                            ShowAutoStyles -> False
                                           ]
                                          ],
                                         TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                        },
                                        Dynamic[
                                         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                          TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                          
                                          If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                           Module[
                                            {
                                             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                              TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                               TypeSystem`NestedGrid`PackagePrivate`$state$$
                                              ]
                                            },
                                            
                                            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                             If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                              TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                              TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                               TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                              ]
                                             ];

                                            If[ Not[
                                              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                             ],
                                             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                            ];
                                           ]
                                          ];

                                          TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                          TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                          TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                          If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                           TypeSystem`SparseGrid[
                                            TypeSystem`H["(data no longer present)"]
                                           ],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                          ]
                                         ],
                                         TrackedSymbols :> {
                                          TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                          TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                         }
                                        ],
                                        DynamicModuleValues :> { }
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                       Dynamic[
                                        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                         TypeSystem`PackageScope`SubViewPathbar[
                                          TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                          TypeSystem`NestedGrid`PackagePrivate`updateState[
                                           TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                           TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                           TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                           TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                           TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ]
                                          ]
                                         ]
                                        ],
                                        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                       Style[
                                        Framed[
                                         Dynamic[
                                          Replace[
                                           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                           {
                                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                             Null,
                                             Blank[]
                                            ] -> "",
                                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                             Pattern[
                                              TypeSystem`NestedGrid`PackagePrivate`path$,
                                              Blank[]
                                             ],
                                             Pattern[
                                              TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                              Blank[]
                                             ],
                                             Pattern[
                                              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                              Blank[]
                                             ]
                                            ] :>
                                             (
                                             Increment[
                                              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                             ];

                                             
                                             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                              TypeSystem`NestedGrid`PackagePrivate`path$;

                                             
                                             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                              TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                             
                                             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                             
                                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                              TypeSystem`NestedGrid`PackagePrivate`localHold[
                                               TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                              ];

                                             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                              TypeSystem`NestedGrid`PackagePrivate`path$,
                                              TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                             ]),
                                            Null :> Spacer[10],
                                            Blank[] :> Spacer[10]
                                           }
                                          ],
                                          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                         ],
                                         FrameStyle -> None,
                                         ImageMargins -> 0,
                                         FrameMargins -> 0,
                                         Alignment -> Top,
                                         ImageSize -> {Automatic, 15}
                                        ],
                                        FontSize -> 1
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                     },
                                     DynamicWrapperBox[
                                      DynamicBox[
                                       ToBoxes[
                                        Dataset`DatasetContent[
                                         2,
                                         "Path" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                         "Grid" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                         "State" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                         "VPos" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                         "HPos" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                         "TopBar" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                         "BottomBar" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                         "OutputID" ->
                                          Hold[
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ]
                                          ]
                                        ],
                                        StandardForm
                                       ],
                                       TrackedSymbols :> {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                       }
                                      ],
                                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                       MouseAnnotation[]
                                     ],
                                     Initialization :>
                                      (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                       CreateUUID[]),
                                     DynamicModuleValues :> { },
                                     BaseStyle -> {LineBreakWithin -> False},
                                     UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                    ],
                                    Deploy,
                                    DefaultBaseStyle -> "Deploy"
                                   ],
                                   Dataset`InterpretDataset[1],
                                   Selectable -> False,
                                   Editable -> False,
                                   SelectWithContents -> True
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[
                                   {"\"DocumentationBuildResults\"", "\": \""},
                                   "RowDefault"
                                  ],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "{",
                                    InterpretationBox[
                                     RowBox[
                                      {
                                       TagBox["Success", "SummaryHead"],
                                       "[",
                                       DynamicModuleBox[
                                        {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                        TemplateBox[
                                         {
                                          PaneSelectorBox[
                                           {
                                            False ->
                                             GridBox[
                                              {
                                               {
                                                PaneBox[
                                                 ButtonBox[
                                                  DynamicBox[
                                                   FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                  ],
                                                  ButtonFunction :> (Typeset`open$$ = True),
                                                  Appearance -> None,
                                                  BaseStyle -> { },
                                                  Evaluator -> Automatic,
                                                  Method -> "Preemptive"
                                                 ],
                                                 Alignment -> {Center, Center},
                                                 ImageSize ->
                                                  Dynamic[
                                                   {
                                                    Automatic,
                                                    Times[
                                                     3.5,
                                                     Times[
                                                      CurrentValue["FontCapHeight"],
                                                      AbsoluteCurrentValue[Magnification]^(-1)
                                                     ]
                                                    ]
                                                   }
                                                  ]
                                                ],
                                                FrameBox[
                                                 StyleBox[
                                                  "\"\[Checkmark]\"",
                                                  Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                  StripOnInput -> False
                                                 ],
                                                 ContentPadding -> False,
                                                 FrameStyle -> None,
                                                 FrameMargins -> {{0, 0}, {0, 0}},
                                                 StripOnInput -> False
                                                ],
                                                GridBox[
                                                 {
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      "\"Documentation build completed successfully.\"",
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      TemplateBox[
                                                       {"1.2631549`", "\"s\"", "seconds", "\"Seconds\""},
                                                       "Quantity",
                                                       SyntaxForm -> Mod
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  }
                                                 },
                                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                 AutoDelete -> False,
                                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                 GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                 BaseStyle -> {
                                                  ShowStringCharacters -> False,
                                                  NumberMarks -> False,
                                                  PrintPrecision -> 3,
                                                  ShowSyntaxStyles -> False
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              BaselinePosition -> {1, 1}
                                             ],
                                            True ->
                                             GridBox[
                                              {
                                               {
                                                PaneBox[
                                                 ButtonBox[
                                                  DynamicBox[
                                                   FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                  ],
                                                  ButtonFunction :> (Typeset`open$$ = False),
                                                  Appearance -> None,
                                                  BaseStyle -> { },
                                                  Evaluator -> Automatic,
                                                  Method -> "Preemptive"
                                                 ],
                                                 Alignment -> {Center, Center},
                                                 ImageSize ->
                                                  Dynamic[
                                                   {
                                                    Automatic,
                                                    Times[
                                                     3.5,
                                                     Times[
                                                      CurrentValue["FontCapHeight"],
                                                      AbsoluteCurrentValue[Magnification]^(-1)
                                                     ]
                                                    ]
                                                   }
                                                  ]
                                                ],
                                                FrameBox[
                                                 StyleBox[
                                                  "\"\[Checkmark]\"",
                                                  Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                  StripOnInput -> False
                                                 ],
                                                 ContentPadding -> False,
                                                 FrameStyle -> None,
                                                 FrameMargins -> {{0, 0}, {0, 0}},
                                                 StripOnInput -> False
                                                ],
                                                GridBox[
                                                 {
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      "\"Documentation build completed successfully.\"",
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      TemplateBox[
                                                       {"1.2631549`", "\"s\"", "seconds", "\"Seconds\""},
                                                       "Quantity",
                                                       SyntaxForm -> Mod
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"MaximumFileTime\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      RowBox[
                                                       {
                                                        "{",
                                                        RowBox[
                                                         {
                                                          TemplateBox[
                                                           {"0.6335391`", "\"s\"", "seconds", "\"Seconds\""},
                                                           "Quantity",
                                                           SyntaxForm -> Mod
                                                          ],
                                                          ",",
                                                          "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\""
                                                         }
                                                        ],
                                                        "}"
                                                       }
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"ProcessedFiles\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      RowBox[
                                                       {
                                                        "\[LeftAssociation]",
                                                        RowBox[
                                                         {
                                                          RowBox[
                                                           {
                                                            "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\"",
                                                            "\[Rule]",
                                                            InterpretationBox[
                                                             RowBox[
                                                              {
                                                               TagBox["Success", "SummaryHead"],
                                                               "[",
                                                               DynamicModuleBox[
                                                                {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                                TemplateBox[
                                                                 {
                                                                  PaneSelectorBox[
                                                                   {
                                                                    False ->
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        FrameBox[
                                                                         StyleBox[
                                                                          "\"\[Checkmark]\"",
                                                                          Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                          StripOnInput -> False
                                                                         ],
                                                                         ContentPadding -> False,
                                                                         FrameStyle -> None,
                                                                         FrameMargins -> {{0, 0}, {0, 0}},
                                                                         StripOnInput -> False
                                                                        ],
                                                                        GridBox[
                                                                         {
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox[
                                                                              TemplateBox[
                                                                               {"0.6335391`", "\"s\"", "seconds", "\"Seconds\""},
                                                                               "Quantity",
                                                                               SyntaxForm -> Mod
                                                                              ],
                                                                              "SummaryItem"
                                                                             ]
                                                                            }
                                                                           ]
                                                                          },
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                            }
                                                                           ]
                                                                          }
                                                                         },
                                                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                         AutoDelete -> False,
                                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                         BaseStyle -> {
                                                                          ShowStringCharacters -> False,
                                                                          NumberMarks -> False,
                                                                          PrintPrecision -> 3,
                                                                          ShowSyntaxStyles -> False
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      BaselinePosition -> {1, 1}
                                                                     ],
                                                                    True ->
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        FrameBox[
                                                                         StyleBox[
                                                                          "\"\[Checkmark]\"",
                                                                          Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                          StripOnInput -> False
                                                                         ],
                                                                         ContentPadding -> False,
                                                                         FrameStyle -> None,
                                                                         FrameMargins -> {{0, 0}, {0, 0}},
                                                                         StripOnInput -> False
                                                                        ],
                                                                        GridBox[
                                                                         {
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox[
                                                                              TemplateBox[
                                                                               {"0.6335391`", "\"s\"", "seconds", "\"Seconds\""},
                                                                               "Quantity",
                                                                               SyntaxForm -> Mod
                                                                              ],
                                                                              "SummaryItem"
                                                                             ]
                                                                            }
                                                                           ]
                                                                          },
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                            }
                                                                           ]
                                                                          }
                                                                         },
                                                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                         AutoDelete -> False,
                                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                         BaseStyle -> {
                                                                          ShowStringCharacters -> False,
                                                                          NumberMarks -> False,
                                                                          PrintPrecision -> 3,
                                                                          ShowSyntaxStyles -> False
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      BaselinePosition -> {1, 1}
                                                                     ]
                                                                   },
                                                                   Dynamic[Typeset`open$$],
                                                                   ImageSize -> Automatic
                                                                  ]
                                                                 },
                                                                 "SummaryPanel"
                                                                ],
                                                                DynamicModuleValues :> { }
                                                               ],
                                                               "]"
                                                              }
                                                             ],
                                                             Success[
                                                              "BuildDocumentationNotebook",
                                                              Association["Time" -> Quantity[0.63354, "Seconds"]]
                                                             ],
                                                             Selectable -> False,
                                                             Editable -> False,
                                                             SelectWithContents -> True
                                                            ]
                                                           }
                                                          ],
                                                          ",",
                                                          RowBox[
                                                           {
                                                            "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddTwo.nb\"",
                                                            "\[Rule]",
                                                            InterpretationBox[
                                                             RowBox[
                                                              {
                                                               TagBox["Success", "SummaryHead"],
                                                               "[",
                                                               DynamicModuleBox[
                                                                {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                                TemplateBox[
                                                                 {
                                                                  PaneSelectorBox[
                                                                   {
                                                                    False ->
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        FrameBox[
                                                                         StyleBox[
                                                                          "\"\[Checkmark]\"",
                                                                          Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                          StripOnInput -> False
                                                                         ],
                                                                         ContentPadding -> False,
                                                                         FrameStyle -> None,
                                                                         FrameMargins -> {{0, 0}, {0, 0}},
                                                                         StripOnInput -> False
                                                                        ],
                                                                        GridBox[
                                                                         {
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox[
                                                                              TemplateBox[
                                                                               {"0.603701`", "\"s\"", "seconds", "\"Seconds\""},
                                                                               "Quantity",
                                                                               SyntaxForm -> Mod
                                                                              ],
                                                                              "SummaryItem"
                                                                             ]
                                                                            }
                                                                           ]
                                                                          },
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                            }
                                                                           ]
                                                                          }
                                                                         },
                                                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                         AutoDelete -> False,
                                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                         BaseStyle -> {
                                                                          ShowStringCharacters -> False,
                                                                          NumberMarks -> False,
                                                                          PrintPrecision -> 3,
                                                                          ShowSyntaxStyles -> False
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      BaselinePosition -> {1, 1}
                                                                     ],
                                                                    True ->
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        FrameBox[
                                                                         StyleBox[
                                                                          "\"\[Checkmark]\"",
                                                                          Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                          StripOnInput -> False
                                                                         ],
                                                                         ContentPadding -> False,
                                                                         FrameStyle -> None,
                                                                         FrameMargins -> {{0, 0}, {0, 0}},
                                                                         StripOnInput -> False
                                                                        ],
                                                                        GridBox[
                                                                         {
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox[
                                                                              TemplateBox[
                                                                               {"0.603701`", "\"s\"", "seconds", "\"Seconds\""},
                                                                               "Quantity",
                                                                               SyntaxForm -> Mod
                                                                              ],
                                                                              "SummaryItem"
                                                                             ]
                                                                            }
                                                                           ]
                                                                          },
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                            }
                                                                           ]
                                                                          }
                                                                         },
                                                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                         AutoDelete -> False,
                                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                         BaseStyle -> {
                                                                          ShowStringCharacters -> False,
                                                                          NumberMarks -> False,
                                                                          PrintPrecision -> 3,
                                                                          ShowSyntaxStyles -> False
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      BaselinePosition -> {1, 1}
                                                                     ]
                                                                   },
                                                                   Dynamic[Typeset`open$$],
                                                                   ImageSize -> Automatic
                                                                  ]
                                                                 },
                                                                 "SummaryPanel"
                                                                ],
                                                                DynamicModuleValues :> { }
                                                               ],
                                                               "]"
                                                              }
                                                             ],
                                                             Success[
                                                              "BuildDocumentationNotebook",
                                                              Association["Time" -> Quantity[0.6037, "Seconds"]]
                                                             ],
                                                             Selectable -> False,
                                                             Editable -> False,
                                                             SelectWithContents -> True
                                                            ]
                                                           }
                                                          ]
                                                         }
                                                        ],
                                                        "\[RightAssociation]"
                                                       }
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"FailedFilesCount\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["0", "SummaryItem"]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"PercentSucceeded\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      TemplateBox[
                                                       {"100.`", "\"%\"", "percent", "\"Percent\""},
                                                       "QuantityPostfix",
                                                       SyntaxForm -> Mod
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"ProcessedFilesCount\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["2", "SummaryItem"]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"SuccessfulFilesCount\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["2", "SummaryItem"]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"SkippedFilesCount\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["0", "SummaryItem"]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["\"DocumentationBuild\"", "SummaryItem"]
                                                    }
                                                   ]
                                                  }
                                                 },
                                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                 AutoDelete -> False,
                                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                 GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                 BaseStyle -> {
                                                  ShowStringCharacters -> False,
                                                  NumberMarks -> False,
                                                  PrintPrecision -> 3,
                                                  ShowSyntaxStyles -> False
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              BaselinePosition -> {1, 1}
                                             ]
                                           },
                                           Dynamic[Typeset`open$$],
                                           ImageSize -> Automatic
                                          ]
                                         },
                                         "SummaryPanel"
                                        ],
                                        DynamicModuleValues :> { }
                                       ],
                                       "]"
                                      }
                                     ],
                                     Success[
                                      "DocumentationBuild",
                                      <|
                                       "TotalTime" -> Quantity[1.2632, "Seconds"],
                                       "MaximumFileTime" -> {
                                        Quantity[0.63354, "Seconds"],
                                        "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                       },
                                       "ProcessedFiles" -> <|
                                        "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                                         Success[
                                          "BuildDocumentationNotebook",
                                          Association["Time" -> Quantity[0.63354, "Seconds"]]
                                         ],
                                        "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                                         Success[
                                          "BuildDocumentationNotebook",
                                          Association["Time" -> Quantity[0.6037, "Seconds"]]
                                         ]
                                       |>,
                                       "FailedFilesCount" -> 0,
                                       "PercentSucceeded" -> Quantity[100.0, "Percent"],
                                       "ProcessedFilesCount" -> 2,
                                       "SuccessfulFilesCount" -> 2,
                                       "SkippedFilesCount" -> 0,
                                       "MessageTemplate" -> "Documentation build completed successfully."
                                      |>
                                     ],
                                     Selectable -> False,
                                     Editable -> False,
                                     SelectWithContents -> True
                                    ],
                                    "}"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Source\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {
                                      "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\ResourceDefinition.nb\""
                                     },
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"CheckResult\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox["\"PacletBuild\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 Success[
                  "PacletBuild",
                  <|
                   "PacletArchive" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\build\\MyPublisher__MyPaclet-1.0.0",
                   "TotalTime" -> Quantity[3.9589, "Seconds"],
                   "PacletManifest" ->
                    Dataset[
                     <|
                      "Files" -> {
                       <|
                        "File" -> File["Kernel\\AddOne.wl"],
                        "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                       |>,
                       <|
                        "File" -> File["Kernel\\AddTwo.wl"],
                        "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                       |>,
                       <|
                        "File" -> File["Kernel\\MyPaclet.wl"],
                        "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                       |>,
                       <|
                        "File" ->
                         File[
                          "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                         ],
                        "Hash" -> "200d469e8188ad0d17603478f83a0364ba6402bdde339837e6595224c6acb71e"
                       |>,
                       <|
                        "File" ->
                         File[
                          "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                         ],
                        "Hash" -> "0d9b55bd0fe519db90abac9bb151a8996b593b8f3f399cb2606c9ed7df807614"
                       |>,
                       <|
                        "File" -> File["LICENSE"],
                        "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                       |>
                      }
                     |>,
                     TypeSystem`Assoc[
                      TypeSystem`Atom[String],
                      TypeSystem`Vector[
                       TypeSystem`Struct[
                        {"File", "Hash"},
                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                       ],
                       6
                      ],
                      1
                     ],
                     <| |>
                    ],
                   "DocumentationBuildResults" -> {
                    Success[
                     "DocumentationBuild",
                     <|
                      "TotalTime" -> Quantity[1.2632, "Seconds"],
                      "MaximumFileTime" -> {
                       Quantity[0.63354, "Seconds"],
                       "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                      },
                      "ProcessedFiles" -> <|
                       "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                        Success[
                         "BuildDocumentationNotebook",
                         Association["Time" -> Quantity[0.63354, "Seconds"]]
                        ],
                       "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                        Success[
                         "BuildDocumentationNotebook",
                         Association["Time" -> Quantity[0.6037, "Seconds"]]
                        ]
                      |>,
                      "FailedFilesCount" -> 0,
                      "PercentSucceeded" -> Quantity[100.0, "Percent"],
                      "ProcessedFilesCount" -> 2,
                      "SuccessfulFilesCount" -> 2,
                      "SkippedFilesCount" -> 0,
                      "MessageTemplate" -> "Documentation build completed successfully."
                     |>
                    ]
                   },
                   "Source" ->
                    File[
                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\ResourceDefinition.nb"
                    ],
                   "CheckResult" -> Missing["NotAvailable"]
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[2]=",
               CellID -> 116881966
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Generalizations & Extensions", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 18497728
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Options", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 127034151
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 155617652
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 124133832
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Applications", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 20485312
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Properties & Relations", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 18079905
        ],
        Cell[
         TextData[
          {
           "In a desktop session, ",
           Cell[
            BoxData[
             ButtonBox[
              "BuildPaclet",
              BaseStyle -> "Link",
              ButtonData -> "paclet:PacletTools/ref/PacletBuild"
             ]
            ],
            "InlineFormula"
           ],
           " is typically equivalent to ",
           Cell[
            BoxData[
             ButtonBox[
              "PacletTools`PacletBuild",
              BaseStyle -> "Link",
              ButtonData -> "paclet:PacletTools/ref/PacletBuild"
             ]
            ],
            "InlineFormula"
           ],
           ":"
          }
         ],
         "ExampleText",
         CellID -> 228165891
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "BuildPaclet",
               "[",
               RowBox[{"ExampleDirectory", "[", "\"FewIssues\"", "]"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 365487462
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"4.0132762`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"4.0132762`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                TagBox[
                                 DynamicModuleBox[
                                  {
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                    "InitialData" -> <|
                                     "Files" -> {
                                      <|
                                       "File" -> File["Kernel\\AddOne.wl"],
                                       "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\AddTwo.wl"],
                                       "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\MyPaclet.wl"],
                                       "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                        ],
                                       "Hash" -> "a99ae06414e804d979ed2cb0640b5b58cdcbfd481ef990b1a5ac596c7fc00e7d"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                        ],
                                       "Hash" -> "47edd2fce6538c480d2184d440442e7e6f798b0ea9058839b3d69efff5ff50a6"
                                      |>,
                                      <|
                                       "File" -> File["LICENSE"],
                                       "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                                      |>
                                     }
                                    |>,
                                    "AllowEmbedding" -> True,
                                    "InitialShape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[5]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "InitialType" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Meta" -> <| |>,
                                    "RowTarget" -> 20,
                                    "ColumnTarget" -> 10,
                                    "Shape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[5]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "Type" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Path" -> { },
                                    "DisplayedRowCount" -> 1,
                                    "DisplayedColumnCount" -> 2,
                                    "DataRowCount" -> 1,
                                    "DataColumnCount" -> 2,
                                    "SortPaths" -> { },
                                    "SortDirections" -> { },
                                    "HiddenItemsMap" -> Null,
                                    "UpdateType" -> 1
                                   |>,
                                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                   TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                    DynamicModule[
                                     {
                                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                       Deploy[
                                        Style[
                                         Grid[
                                          {
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               Mouseover[
                                                Graphics[
                                                 { },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ],
                                                Graphics[
                                                 {
                                                  GrayLevel[0.6],
                                                  Polygon[
                                                   {
                                                    {1/Sqrt[2], -(1/Sqrt[2])},
                                                    {1/Sqrt[2], 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                                   }
                                                  ]
                                                 },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, Keys},
                                                "KeyDummy",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "File",
                                                  Style[
                                                   "File",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "File"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "File"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Hash",
                                                  Style[
                                                   "Hash",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "Hash"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "Hash"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Files",
                                                  Style[
                                                   "Files",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {Key["Files"]},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"]},
                                                "RowHeader",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{56.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddOne.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddTwo.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\MyPaclet.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "a99ae06414e804d979ed2cb0640b5b58cdcbfd481ef990b1a5ac596c7fc00e7d",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "47edd2fce6538c480d2184d440442e7e6f798b0ea9058839b3d69efff5ff50a6",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["LICENSE"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           }
                                          },
                                          BaseStyle -> {
                                           ContextMenu ->
                                            Dynamic[
                                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                             Which[
                                              UnsameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                               TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                               ]
                                              ],
                                              { },
                                              SameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                              ],
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                              True,
                                              
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                               Block[
                                                {
                                                 TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                 }
                                                },
                                                With[
                                                 {
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                  TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                   And[
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                     Alternatives["RowHeader", "ColumnHeader"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                     "SortDirections"
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                   Not[
                                                    FailureQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ]
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                   Not[
                                                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                   ]
                                                 },
                                                 Join[
                                                  {
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Show ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "remove"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                     And[
                                                      TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                      TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                     ]
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Hide ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "add"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   Delimiter
                                                  },
                                                  If[ And[
                                                    TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                     Alternatives["ColumnHeader", "KeyDummy"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                   ],
                                                   {
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Ascending"
                                                     ],
                                                     MenuItem[
                                                      "Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Ascending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Descending"
                                                     ],
                                                     MenuItem[
                                                      "Reverse Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Descending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      None
                                                     ],
                                                     MenuItem[
                                                      "Unsort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        None
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    Delimiter
                                                   },
                                                   { }
                                                  ],
                                                  {
                                                   MenuItem[
                                                    "Copy Position to Clipboard",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Copy Data to Clipboard",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ],
                                                   Delimiter,
                                                   MenuItem[
                                                    "Paste Position in New Cell",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Paste Data in New Cell",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ]
                                                  }
                                                 ]
                                                ]
                                               ]
                                             ]
                                            ],
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          },
                                          Dividers -> All,
                                          FrameStyle -> GrayLevel[0.74902],
                                          Spacings -> {0, 0},
                                          Alignment -> Left,
                                          BaseStyle -> {
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          }
                                         ],
                                         LineBreakWithin -> False,
                                         ContextMenu -> { },
                                         NumberMarks -> False,
                                         ShowAutoStyles -> False
                                        ]
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                     },
                                     Dynamic[
                                      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       
                                       If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                        Module[
                                         {
                                          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                          TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                           TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                            TypeSystem`NestedGrid`PackagePrivate`$state$$
                                           ]
                                         },
                                         
                                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                          If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                           TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                            TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                           ]
                                          ];

                                         If[ Not[
                                           FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                          ],
                                          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                         ];
                                        ]
                                       ];

                                       TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                       If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                        TypeSystem`SparseGrid[
                                         TypeSystem`H["(data no longer present)"]
                                        ],
                                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                       ]
                                      ],
                                      TrackedSymbols :> {
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                      }
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                    Dynamic[
                                     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                      TypeSystem`PackageScope`SubViewPathbar[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       TypeSystem`NestedGrid`PackagePrivate`updateState[
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                      ]
                                     ],
                                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                    Style[
                                     Framed[
                                      Dynamic[
                                       Replace[
                                        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                        {
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Null,
                                          Blank[]
                                         ] -> "",
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                           Blank[]
                                          ]
                                         ] :>
                                          (
                                          Increment[
                                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                          ];

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                           TypeSystem`NestedGrid`PackagePrivate`path$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ];

                                          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                          ]),
                                         Null :> Spacer[10],
                                         Blank[] :> Spacer[10]
                                        }
                                       ],
                                       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                      ],
                                      FrameStyle -> None,
                                      ImageMargins -> 0,
                                      FrameMargins -> 0,
                                      Alignment -> Top,
                                      ImageSize -> {Automatic, 15}
                                     ],
                                     FontSize -> 1
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                  },
                                  DynamicWrapperBox[
                                   DynamicBox[
                                    ToBoxes[
                                     Dataset`DatasetContent[
                                      2,
                                      "Path" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                      "Grid" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                      "State" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                      "VPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                      "HPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                      "TopBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                      "BottomBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                      "OutputID" ->
                                       Hold[
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                     ],
                                     StandardForm
                                    ],
                                    TrackedSymbols :> {
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                    }
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                    MouseAnnotation[]
                                  ],
                                  Initialization :>
                                   (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                    CreateUUID[]),
                                  DynamicModuleValues :> { },
                                  BaseStyle -> {LineBreakWithin -> False},
                                  UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                 ],
                                 Deploy,
                                 DefaultBaseStyle -> "Deploy"
                                ],
                                Dataset`InterpretDataset[1],
                                Selectable -> False,
                                Editable -> False,
                                SelectWithContents -> True
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"DocumentationBuildResults\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "{",
                                 InterpretationBox[
                                  RowBox[
                                   {
                                    TagBox["Success", "SummaryHead"],
                                    "[",
                                    DynamicModuleBox[
                                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                     TemplateBox[
                                      {
                                       PaneSelectorBox[
                                        {
                                         False ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = True),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.3053143`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ],
                                         True ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = False),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.3053143`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"MaximumFileTime\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "{",
                                                     RowBox[
                                                      {
                                                       TemplateBox[
                                                        {"0.6468345`", "\"s\"", "seconds", "\"Seconds\""},
                                                        "Quantity",
                                                        SyntaxForm -> Mod
                                                       ],
                                                       ",",
                                                       "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\""
                                                      }
                                                     ],
                                                     "}"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"ProcessedFiles\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "\[LeftAssociation]",
                                                     RowBox[
                                                      {
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.6468345`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.6468345`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.64683, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ],
                                                       ",",
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddTwo.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5989718`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5989718`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.59897, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ]
                                                      }
                                                     ],
                                                     "\[RightAssociation]"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"FailedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"PercentSucceeded\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"100.`", "\"%\"", "percent", "\"Percent\""},
                                                    "QuantityPostfix",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"ProcessedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SuccessfulFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SkippedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["\"DocumentationBuild\"", "SummaryItem"]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ]
                                        },
                                        Dynamic[Typeset`open$$],
                                        ImageSize -> Automatic
                                       ]
                                      },
                                      "SummaryPanel"
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                    "]"
                                   }
                                  ],
                                  Success[
                                   "DocumentationBuild",
                                   <|
                                    "TotalTime" -> Quantity[1.3053, "Seconds"],
                                    "MaximumFileTime" -> {
                                     Quantity[0.64683, "Seconds"],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                    },
                                    "ProcessedFiles" -> <|
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.64683, "Seconds"]]
                                      ],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.59897, "Seconds"]]
                                      ]
                                    |>,
                                    "FailedFilesCount" -> 0,
                                    "PercentSucceeded" -> Quantity[100.0, "Percent"],
                                    "ProcessedFilesCount" -> 2,
                                    "SuccessfulFilesCount" -> 2,
                                    "SkippedFilesCount" -> 0,
                                    "MessageTemplate" -> "Documentation build completed successfully."
                                   |>
                                  ],
                                  Selectable -> False,
                                  Editable -> False,
                                  SelectWithContents -> True
                                 ],
                                 "}"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Source\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues/ResourceDefinition.nb\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"CheckResult\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"PacletBuild\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "PacletBuild",
               <|
                "PacletArchive" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\build\\MyPublisher__MyPaclet-1.0.0",
                "TotalTime" -> Quantity[4.0133, "Seconds"],
                "PacletManifest" ->
                 Dataset[
                  <|
                   "Files" -> {
                    <|
                     "File" -> File["Kernel\\AddOne.wl"],
                     "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                    |>,
                    <|
                     "File" -> File["Kernel\\AddTwo.wl"],
                     "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                    |>,
                    <|
                     "File" -> File["Kernel\\MyPaclet.wl"],
                     "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                      ],
                     "Hash" -> "a99ae06414e804d979ed2cb0640b5b58cdcbfd481ef990b1a5ac596c7fc00e7d"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                      ],
                     "Hash" -> "47edd2fce6538c480d2184d440442e7e6f798b0ea9058839b3d69efff5ff50a6"
                    |>,
                    <|
                     "File" -> File["LICENSE"],
                     "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                    |>
                   }
                  |>,
                  TypeSystem`Assoc[
                   TypeSystem`Atom[String],
                   TypeSystem`Vector[
                    TypeSystem`Struct[
                     {"File", "Hash"},
                     {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                    ],
                    6
                   ],
                   1
                  ],
                  <| |>
                 ],
                "DocumentationBuildResults" -> {
                 Success[
                  "DocumentationBuild",
                  <|
                   "TotalTime" -> Quantity[1.3053, "Seconds"],
                   "MaximumFileTime" -> {
                    Quantity[0.64683, "Seconds"],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                   },
                   "ProcessedFiles" -> <|
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.64683, "Seconds"]]
                     ],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.59897, "Seconds"]]
                     ]
                   |>,
                   "FailedFilesCount" -> 0,
                   "PercentSucceeded" -> Quantity[100.0, "Percent"],
                   "ProcessedFilesCount" -> 2,
                   "SuccessfulFilesCount" -> 2,
                   "SkippedFilesCount" -> 0,
                   "MessageTemplate" -> "Documentation build completed successfully."
                  |>
                 ]
                },
                "Source" ->
                 File[
                  "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues/ResourceDefinition.nb"
                 ],
                "CheckResult" -> Missing["NotAvailable"]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 164131687
           ]
          },
          Open
         ]
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "Needs",
            "[",
            RowBox[{"\"PacletTools`\"", "\[Rule]", "\"pt`\""}],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[2]:=",
         CellID -> 32313746
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "pt`PacletBuild",
               "[",
               RowBox[{"ExampleDirectory", "[", "\"FewIssues\"", "]"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 516545092
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"3.8225451`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\build\\\\MyPublisher__MyPaclet-1.0.0\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TemplateBox[
                                {"3.8225451`", "\"s\"", "seconds", "\"Seconds\""},
                                "Quantity",
                                SyntaxForm -> Mod
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                TagBox[
                                 DynamicModuleBox[
                                  {
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                    "InitialData" -> <|
                                     "Files" -> {
                                      <|
                                       "File" -> File["Kernel\\AddOne.wl"],
                                       "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\AddTwo.wl"],
                                       "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                                      |>,
                                      <|
                                       "File" -> File["Kernel\\MyPaclet.wl"],
                                       "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                        ],
                                       "Hash" -> "61114979929b64e3383def1acbb0640af6efccdf58985ec505b6df9e88586d7c"
                                      |>,
                                      <|
                                       "File" ->
                                        File[
                                         "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                        ],
                                       "Hash" -> "926eb26bfbe7d19cd006b37a1872db829c3862c19f0975de9fec8b953ddfd80c"
                                      |>,
                                      <|
                                       "File" -> File["LICENSE"],
                                       "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                                      |>
                                     }
                                    |>,
                                    "AllowEmbedding" -> True,
                                    "InitialShape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[6]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "InitialType" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Meta" -> <| |>,
                                    "RowTarget" -> 20,
                                    "ColumnTarget" -> 10,
                                    "Shape" ->
                                     TypeSystem`PackageScope`HeaderShape[
                                      <|
                                       {All, All, TypeSystem`PackageScope`KeyDummy[6]} -> 1,
                                       {All, All, "File"} -> 1,
                                       {All, All, "Hash"} -> 1
                                      |>,
                                      TypeSystem`PackageScope`Limited[
                                       TypeSystem`PackageScope`ColumnShape[
                                        TypeSystem`PackageScope`KeyValueShape[
                                         TypeSystem`PackageScope`AtomShape[56.0],
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`Limited[
                                            TypeSystem`PackageScope`RowShape[
                                             <|
                                              "File" -> TypeSystem`PackageScope`AtomShape[60],
                                              "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                             |>
                                            ],
                                            Infinity,
                                            2,
                                            {All, All}
                                           ]
                                          ],
                                          6,
                                          Infinity,
                                          {All}
                                         ]
                                        ]
                                       ],
                                       1,
                                       Infinity,
                                       { }
                                      ]
                                     ],
                                    "Type" ->
                                     TypeSystem`Assoc[
                                      TypeSystem`Atom[String],
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"File", "Hash"},
                                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                       ],
                                       6
                                      ],
                                      1
                                     ],
                                    "Path" -> { },
                                    "DisplayedRowCount" -> 1,
                                    "DisplayedColumnCount" -> 2,
                                    "DataRowCount" -> 1,
                                    "DataColumnCount" -> 2,
                                    "SortPaths" -> { },
                                    "SortDirections" -> { },
                                    "HiddenItemsMap" -> Null,
                                    "UpdateType" -> 1
                                   |>,
                                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                   TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                   TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                    DynamicModule[
                                     {
                                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                       Deploy[
                                        Style[
                                         Grid[
                                          {
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               Mouseover[
                                                Graphics[
                                                 { },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ],
                                                Graphics[
                                                 {
                                                  GrayLevel[0.6],
                                                  Polygon[
                                                   {
                                                    {1/Sqrt[2], -(1/Sqrt[2])},
                                                    {1/Sqrt[2], 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), 1/Sqrt[2]},
                                                    {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                                   }
                                                  ]
                                                 },
                                                 ImageSize -> 6,
                                                 BaselinePosition -> Scaled[-0.15]
                                                ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, Keys},
                                                "KeyDummy",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "File",
                                                  Style[
                                                   "File",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "File"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "File"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Hash",
                                                  Style[
                                                   "Hash",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {All, All, "Hash"},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {All, All, "Hash"},
                                                "ColumnHeader",
                                                True
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{1, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ]
                                           },
                                           {
                                            Item[
                                             Pane[
                                              Annotation[
                                               EventHandler[
                                                MouseAppearance[
                                                 Mouseover[
                                                  "Files",
                                                  Style[
                                                   "Files",
                                                   FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                  ]
                                                 ],
                                                 "LinkHand"
                                                ],
                                                {"MouseClicked", 1} :>
                                                 If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                   {Key["Files"]},
                                                   1
                                                  ]
                                                 ]
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"]},
                                                "RowHeader",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{56.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             Background -> GrayLevel[0.95],
                                             Alignment -> {Left, Baseline}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddOne.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 1, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\AddTwo.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 2, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["Kernel\\MyPaclet.wl"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 3, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "61114979929b64e3383def1acbb0640af6efccdf58985ec505b6df9e88586d7c",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 4, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File[
                                                "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "926eb26bfbe7d19cd006b37a1872db829c3862c19f0975de9fec8b953ddfd80c",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 5, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           },
                                           {
                                            SpanFromAbove,
                                            Item[
                                             Pane[
                                              Annotation[
                                               File["LICENSE"],
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["File"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{60, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ],
                                            Item[
                                             Pane[
                                              Annotation[
                                               "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70",
                                               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                {Key["Files"], 6, Key["Hash"]},
                                                "Item",
                                                False
                                               ],
                                               "Mouse"
                                              ],
                                              ImageSize -> {{560.0, Full}, Automatic},
                                              ImageMargins -> {{5, 3}, {4, 5}}
                                             ],
                                             ItemSize -> {Full, Automatic}
                                            ]
                                           }
                                          },
                                          BaseStyle -> {
                                           ContextMenu ->
                                            Dynamic[
                                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                             Which[
                                              UnsameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                               TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                               ]
                                              ],
                                              { },
                                              SameQ[
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                              ],
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                              True,
                                              
                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                              TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                               Block[
                                                {
                                                 TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                 }
                                                },
                                                With[
                                                 {
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                  TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                  TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                   And[
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                     Alternatives["RowHeader", "ColumnHeader"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                   TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                     "SortDirections"
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                   Not[
                                                    FailureQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ]
                                                    ]
                                                   ],
                                                  TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                   Not[
                                                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                   ]
                                                 },
                                                 Join[
                                                  {
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Show ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "remove"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   If[ Or[
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                     TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                     And[
                                                      TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                      TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                     ]
                                                    ],
                                                    Nothing,
                                                    MenuItem[
                                                     StringJoin[
                                                      "Hide ",
                                                      Which[
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "Item"
                                                       ],
                                                       "",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "RowHeader"
                                                       ],
                                                       "Row",
                                                       Equal[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        "ColumnHeader"
                                                       ],
                                                       "Column",
                                                       True,
                                                       ""
                                                      ]
                                                     ],
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                       TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                       "add"
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ]
                                                   ],
                                                   Delimiter
                                                  },
                                                  If[ And[
                                                    TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MatchQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                     Alternatives["ColumnHeader", "KeyDummy"]
                                                    ],
                                                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                   ],
                                                   {
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Ascending"
                                                     ],
                                                     MenuItem[
                                                      "Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Ascending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      "Descending"
                                                     ],
                                                     MenuItem[
                                                      "Reverse Sort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "Descending"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    If[ UnsameQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                      None
                                                     ],
                                                     MenuItem[
                                                      "Unsort",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        None
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    Delimiter
                                                   },
                                                   { }
                                                  ],
                                                  {
                                                   MenuItem[
                                                    "Copy Position to Clipboard",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Copy Data to Clipboard",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ],
                                                   Delimiter,
                                                   MenuItem[
                                                    "Paste Position in New Cell",
                                                    KernelExecute[
                                                     TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                      TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                     ]
                                                    ],
                                                    MenuEvaluator -> Automatic
                                                   ],
                                                   If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                    MenuItem[
                                                     "Paste Data in New Cell",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                       TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    Nothing
                                                   ]
                                                  }
                                                 ]
                                                ]
                                               ]
                                             ]
                                            ],
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          },
                                          Dividers -> All,
                                          FrameStyle -> GrayLevel[0.74902],
                                          Spacings -> {0, 0},
                                          Alignment -> Left,
                                          BaseStyle -> {
                                           FontFamily -> "Source Sans Pro",
                                           FontSize -> 14,
                                           FontWeight -> Plain
                                          }
                                         ],
                                         LineBreakWithin -> False,
                                         ContextMenu -> { },
                                         NumberMarks -> False,
                                         ShowAutoStyles -> False
                                        ]
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                     },
                                     Dynamic[
                                      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       
                                       If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                        Module[
                                         {
                                          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                          TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                           TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                            TypeSystem`NestedGrid`PackagePrivate`$state$$
                                           ]
                                         },
                                         
                                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                          If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                           TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                            TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                           ]
                                          ];

                                         If[ Not[
                                           FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                          ],
                                          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                         ];
                                        ]
                                       ];

                                       TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                       If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                        TypeSystem`SparseGrid[
                                         TypeSystem`H["(data no longer present)"]
                                        ],
                                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                       ]
                                      ],
                                      TrackedSymbols :> {
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                      }
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                    Dynamic[
                                     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                      TypeSystem`PackageScope`SubViewPathbar[
                                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                       TypeSystem`NestedGrid`PackagePrivate`updateState[
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                      ]
                                     ],
                                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                    Style[
                                     Framed[
                                      Dynamic[
                                       Replace[
                                        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                        {
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Null,
                                          Blank[]
                                         ] -> "",
                                         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                           Blank[]
                                          ],
                                          Pattern[
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                           Blank[]
                                          ]
                                         ] :>
                                          (
                                          Increment[
                                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                          ];

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                           TypeSystem`NestedGrid`PackagePrivate`path$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                           TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                          
                                          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ];

                                          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                           TypeSystem`NestedGrid`PackagePrivate`path$,
                                           TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                          ]),
                                         Null :> Spacer[10],
                                         Blank[] :> Spacer[10]
                                        }
                                       ],
                                       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                      ],
                                      FrameStyle -> None,
                                      ImageMargins -> 0,
                                      FrameMargins -> 0,
                                      Alignment -> Top,
                                      ImageSize -> {Automatic, 15}
                                     ],
                                     FontSize -> 1
                                    ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                  },
                                  DynamicWrapperBox[
                                   DynamicBox[
                                    ToBoxes[
                                     Dataset`DatasetContent[
                                      2,
                                      "Path" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                      "Grid" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                      "State" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                      "VPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                      "HPos" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                      "TopBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                      "BottomBar" ->
                                       Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                      "OutputID" ->
                                       Hold[
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       ]
                                     ],
                                     StandardForm
                                    ],
                                    TrackedSymbols :> {
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                    }
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                    MouseAnnotation[]
                                  ],
                                  Initialization :>
                                   (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                    CreateUUID[]),
                                  DynamicModuleValues :> { },
                                  BaseStyle -> {LineBreakWithin -> False},
                                  UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                 ],
                                 Deploy,
                                 DefaultBaseStyle -> "Deploy"
                                ],
                                Dataset`InterpretDataset[1],
                                Selectable -> False,
                                Editable -> False,
                                SelectWithContents -> True
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"DocumentationBuildResults\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "{",
                                 InterpretationBox[
                                  RowBox[
                                   {
                                    TagBox["Success", "SummaryHead"],
                                    "[",
                                    DynamicModuleBox[
                                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                     TemplateBox[
                                      {
                                       PaneSelectorBox[
                                        {
                                         False ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = True),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.0279084`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ],
                                         True ->
                                          GridBox[
                                           {
                                            {
                                             PaneBox[
                                              ButtonBox[
                                               DynamicBox[
                                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                               ],
                                               ButtonFunction :> (Typeset`open$$ = False),
                                               Appearance -> None,
                                               BaseStyle -> { },
                                               Evaluator -> Automatic,
                                               Method -> "Preemptive"
                                              ],
                                              Alignment -> {Center, Center},
                                              ImageSize ->
                                               Dynamic[
                                                {
                                                 Automatic,
                                                 Times[
                                                  3.5,
                                                  Times[
                                                   CurrentValue["FontCapHeight"],
                                                   AbsoluteCurrentValue[Magnification]^(-1)
                                                  ]
                                                 ]
                                                }
                                               ]
                                             ],
                                             FrameBox[
                                              StyleBox[
                                               "\"\[Checkmark]\"",
                                               Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                               StripOnInput -> False
                                              ],
                                              ContentPadding -> False,
                                              FrameStyle -> None,
                                              FrameMargins -> {{0, 0}, {0, 0}},
                                              StripOnInput -> False
                                             ],
                                             GridBox[
                                              {
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   "\"Documentation build completed successfully.\"",
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"1.0279084`", "\"s\"", "seconds", "\"Seconds\""},
                                                    "Quantity",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"MaximumFileTime\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "{",
                                                     RowBox[
                                                      {
                                                       TemplateBox[
                                                        {"0.5095619`", "\"s\"", "seconds", "\"Seconds\""},
                                                        "Quantity",
                                                        SyntaxForm -> Mod
                                                       ],
                                                       ",",
                                                       "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\""
                                                      }
                                                     ],
                                                     "}"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"ProcessedFiles\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   RowBox[
                                                    {
                                                     "\[LeftAssociation]",
                                                     RowBox[
                                                      {
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5095619`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.5095619`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.50956, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ],
                                                       ",",
                                                       RowBox[
                                                        {
                                                         "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddTwo.nb\"",
                                                         "\[Rule]",
                                                         InterpretationBox[
                                                          RowBox[
                                                           {
                                                            TagBox["Success", "SummaryHead"],
                                                            "[",
                                                            DynamicModuleBox[
                                                             {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                             TemplateBox[
                                                              {
                                                               PaneSelectorBox[
                                                                {
                                                                 False ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.4888239`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ],
                                                                 True ->
                                                                  GridBox[
                                                                   {
                                                                    {
                                                                     FrameBox[
                                                                      StyleBox[
                                                                       "\"\[Checkmark]\"",
                                                                       Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                       StripOnInput -> False
                                                                      ],
                                                                      ContentPadding -> False,
                                                                      FrameStyle -> None,
                                                                      FrameMargins -> {{0, 0}, {0, 0}},
                                                                      StripOnInput -> False
                                                                     ],
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox[
                                                                           TemplateBox[
                                                                            {"0.4888239`", "\"s\"", "seconds", "\"Seconds\""},
                                                                            "Quantity",
                                                                            SyntaxForm -> Mod
                                                                           ],
                                                                           "SummaryItem"
                                                                          ]
                                                                         }
                                                                        ]
                                                                       },
                                                                       {
                                                                        RowBox[
                                                                         {
                                                                          TagBox[
                                                                           TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                           "SummaryItemAnnotation"
                                                                          ],
                                                                          "\[InvisibleSpace]",
                                                                          TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                      BaseStyle -> {
                                                                       ShowStringCharacters -> False,
                                                                       NumberMarks -> False,
                                                                       PrintPrecision -> 3,
                                                                       ShowSyntaxStyles -> False
                                                                      }
                                                                     ]
                                                                    }
                                                                   },
                                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                   AutoDelete -> False,
                                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                   BaselinePosition -> {1, 1}
                                                                  ]
                                                                },
                                                                Dynamic[Typeset`open$$],
                                                                ImageSize -> Automatic
                                                               ]
                                                              },
                                                              "SummaryPanel"
                                                             ],
                                                             DynamicModuleValues :> { }
                                                            ],
                                                            "]"
                                                           }
                                                          ],
                                                          Success[
                                                           "BuildDocumentationNotebook",
                                                           Association["Time" -> Quantity[0.48882, "Seconds"]]
                                                          ],
                                                          Selectable -> False,
                                                          Editable -> False,
                                                          SelectWithContents -> True
                                                         ]
                                                        }
                                                       ]
                                                      }
                                                     ],
                                                     "\[RightAssociation]"
                                                    }
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"FailedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"PercentSucceeded\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox[
                                                   TemplateBox[
                                                    {"100.`", "\"%\"", "percent", "\"Percent\""},
                                                    "QuantityPostfix",
                                                    SyntaxForm -> Mod
                                                   ],
                                                   "SummaryItem"
                                                  ]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"ProcessedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SuccessfulFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["2", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[
                                                    {"\"SkippedFilesCount\"", "\": \""},
                                                    "RowDefault"
                                                   ],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["0", "SummaryItem"]
                                                 }
                                                ]
                                               },
                                               {
                                                RowBox[
                                                 {
                                                  TagBox[
                                                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                   "SummaryItemAnnotation"
                                                  ],
                                                  "\[InvisibleSpace]",
                                                  TagBox["\"DocumentationBuild\"", "SummaryItem"]
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                              BaseStyle -> {
                                               ShowStringCharacters -> False,
                                               NumberMarks -> False,
                                               PrintPrecision -> 3,
                                               ShowSyntaxStyles -> False
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           BaselinePosition -> {1, 1}
                                          ]
                                        },
                                        Dynamic[Typeset`open$$],
                                        ImageSize -> Automatic
                                       ]
                                      },
                                      "SummaryPanel"
                                     ],
                                     DynamicModuleValues :> { }
                                    ],
                                    "]"
                                   }
                                  ],
                                  Success[
                                   "DocumentationBuild",
                                   <|
                                    "TotalTime" -> Quantity[1.0279, "Seconds"],
                                    "MaximumFileTime" -> {
                                     Quantity[0.50956, "Seconds"],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                    },
                                    "ProcessedFiles" -> <|
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.50956, "Seconds"]]
                                      ],
                                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                                      Success[
                                       "BuildDocumentationNotebook",
                                       Association["Time" -> Quantity[0.48882, "Seconds"]]
                                      ]
                                    |>,
                                    "FailedFilesCount" -> 0,
                                    "PercentSucceeded" -> Quantity[100.0, "Percent"],
                                    "ProcessedFilesCount" -> 2,
                                    "SuccessfulFilesCount" -> 2,
                                    "SkippedFilesCount" -> 0,
                                    "MessageTemplate" -> "Documentation build completed successfully."
                                   |>
                                  ],
                                  Selectable -> False,
                                  Editable -> False,
                                  SelectWithContents -> True
                                 ],
                                 "}"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"PacletBuild\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "PacletBuild",
               <|
                "PacletArchive" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\build\\MyPublisher__MyPaclet-1.0.0",
                "TotalTime" -> Quantity[3.8225, "Seconds"],
                "PacletManifest" ->
                 Dataset[
                  <|
                   "Files" -> {
                    <|
                     "File" -> File["Kernel\\AddOne.wl"],
                     "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                    |>,
                    <|
                     "File" -> File["Kernel\\AddTwo.wl"],
                     "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                    |>,
                    <|
                     "File" -> File["Kernel\\MyPaclet.wl"],
                     "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                      ],
                     "Hash" -> "61114979929b64e3383def1acbb0640af6efccdf58985ec505b6df9e88586d7c"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                      ],
                     "Hash" -> "926eb26bfbe7d19cd006b37a1872db829c3862c19f0975de9fec8b953ddfd80c"
                    |>,
                    <|
                     "File" -> File["LICENSE"],
                     "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                    |>
                   }
                  |>,
                  TypeSystem`Assoc[
                   TypeSystem`Atom[String],
                   TypeSystem`Vector[
                    TypeSystem`Struct[
                     {"File", "Hash"},
                     {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                    ],
                    6
                   ],
                   1
                  ],
                  <| |>
                 ],
                "DocumentationBuildResults" -> {
                 Success[
                  "DocumentationBuild",
                  <|
                   "TotalTime" -> Quantity[1.0279, "Seconds"],
                   "MaximumFileTime" -> {
                    Quantity[0.50956, "Seconds"],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                   },
                   "ProcessedFiles" -> <|
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.50956, "Seconds"]]
                     ],
                    "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\FewIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                     Success[
                      "BuildDocumentationNotebook",
                      Association["Time" -> Quantity[0.48882, "Seconds"]]
                     ]
                   |>,
                   "FailedFilesCount" -> 0,
                   "PercentSucceeded" -> Quantity[100.0, "Percent"],
                   "ProcessedFilesCount" -> 2,
                   "SuccessfulFilesCount" -> 2,
                   "SkippedFilesCount" -> 0,
                   "MessageTemplate" -> "Documentation build completed successfully."
                  |>
                 ]
                }
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[0]=",
            CellID -> 269247387
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           Cell[
            BoxData[
             ButtonBox[
              "BuildPaclet",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/PacletCICD/ref/BuildPaclet"
             ]
            ],
            "InlineFormula"
           ],
           " can utilize additional definition notebook information such as file exclusions. Open the following definition notebook:"
          }
         ],
         "ExampleText",
         CellID -> 259203909
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "NotebookOpen",
               "@",
               RowBox[
                {
                 "FileNameJoin",
                 "@",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[
                      {
                       "First",
                       "[",
                       RowBox[{"ExampleDirectory", "[", "\"FewIssues\"", "]"}],
                       "]"
                      }
                     ],
                     ",",
                     "\"ResourceDefinition.nb\""
                    }
                   ],
                   "}"
                  }
                 ]
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 77633553
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               FrontEndObject[LinkObject["fwtsc_shm", 3, 1]],
               245,
               "FrontEndObject[LinkObject[\"fwtsc_shm\", 3, 1]]",
               "245",
               "\"MyPaclet | Definition Notebook\"",
               "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\FewIssues\\\\ResourceDefinition.nb\""
              },
              "NotebookObject"
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 824186623
           ]
          },
          Open
         ]
        ],
        Cell[
         "Mark one of the files as excluded, then save and close the notebook:",
         "ExampleText",
         CellID -> 76225651
        ],
        Cell[
         BoxData[
          GraphicsBox[
           TagBox[
            RasterBox[
             CompressedData[
              "\n1:eJztvX1wFOeZ6Kt77x9za+tQ5VRZ548k1CHFTXHWYQu2sl5S7ClWu7fs48TJ\ngRtXtuINy3rZ6yTYrhX2shizCddlshUrOQY7LpOojJccuIg1BmyZDylGeMKX\n+LCELAkEGIg8viBsYQkMWo9x8NV5p5/u1jv9Nd0zo25p5verp1Sjnv54pzUz\n/vH4eZ/3S4vrv/39/7WmpuYf/3f149t/9/hfPPbY3z1x323ql+/8wz8u+cE/\nPPh/f/0flj34gwcf+9ri/01tfOB/qalpUg9yj0cBAAAAAAAAAAAAAMrK/w8A\nAAAAk5CkLXIykfTfCgAAAACKIWmLTIak7zoAAAAATHSSNtZSSfr+AQAAAMBE\nJ2ljDUvpr/QzAAAAAKggKs+EMV4AAAAA0JnsxjveTnsLAAAAACYh4+3DGC8A\nAAAAJEtlGG/pfhvmXv0eAAAAACYhpVjxxPFejBcAAAAA/Ji8xjsefut3lz4F\nAAAAgElOVB8uxYExXgAAAACIn8llvMW5bhi/dd+Zmz58AgAAAAATGD+LC2PC\nYex3vL0X4wUAAACAYCrVeMPUMIT3W/d9ywIAAABAonwciN9RwT4c7MCl1Dlg\nvAAAAAAQlWow3vCuG1zDEOy3wXf13wEAAAAgIUYCce8fbMXBDlyuOgeMFwAA\nAADCU9nGW5zr+tUwhLfcqPcZAAAAAMaPG4G49w924GD7La7OoRTvxXgBAAAA\nAOONWsPgtlw/s9Xv5HUAAAAASIiPAnHv7+fDbgd222/4OgeMFwAAAADKRbUZ\nb1TXddcw+Fmu22z1O3lN4yoAAAAAxM6wgd+zuq35+bDuwH7261fnUJz3YrwA\nAAAAEJ7KM95g19WNN9h13TUMbr/1s1m5q0MaHwIAAABA7FwJRN9TNzfdkN0m\n7Lbf4DoHP+8NM4sN4wUAAACAYKrTeN31DH6uq9cwyOvSqxTkDug2K/dt0OAD\ng/cNLhsMAAAAAEDsXApE31OcTfxNXE63Yt2B9ZoHsUS/PmZ+3lt6bQPGCwAA\nAABCtRlvVNfVaxjEcsVvdbOVe6Lfz4sG/5/BewYZg3cBAAAAIHb6A9H3FGcT\nfxOjE7sTExYH1u1X/NBvXltx3ovxAgAAAEBUMF4/49UrGeS1yKuTVyqvXZxW\n7ozcsd8ZXDA4b3DO4B2DswAAAAAQO2cMTmuc0dD3FGcTfxOXE7sTHxb3E/uV\n/KfkQv28F+MFAAAAgHioPOMtbz2D1CTLaxHX9XNsAAAAAKgGpOZB997gCofx\n8F6MFyYOtwAAACA6Af9tDc7lOvZ83R995/B7ChPfeKP2IpPuEzJDTSoZSpag\niiWJDwQAAABUNQFmkimEvefx48cP+6OedZxZ6lelwkE6GEjtq3utiuK8F+Od\nyCT3ZgcAAIAqJcBMxiMbLEw043WvOhFmtpqMSjLSkqOWegbJYJfLDyuP5N7s\nAAAAUKUEmEmAxzok1i8JfPz4cU/jldltso/0p5XsqNTB6t7rtz5FGON1e68+\nBow3KZJ7swMAAECVEmAmnqnd9vZ2T4n1O8MkMl79tujGG1zPoHckk8pk6UoR\n1QOrhyTe5gAAAFDVRNUVP4mNtLP0N5OuZe7aBr+ViP1qG8LPX9PHgPEmRbxv\ncAAAAIDCxuuZ41U/w7jNZDRev3oG3XX1egYZp3SckDlr8rrCG2C1kcTbHAAA\nAKqagn7iWc1bovGeNJD1KaTqVa9tCJ7FFrW2AeOdaCT3ZgcAAIAqpaCf9Pb2\nlj3HO7mM173ehIxERqXPWbtoIJ0owhtgtZHcmx0AAACqlIJ+0t3drf9aljre\nHgOZvyZVr+KKUtugrz4cprYB451cJPdmBwAAgColWE6U1yllVT/tLVVlvO6O\nZOK6MhJ9ZWEZudQkS+46nP1VI8m92QEAAKBKCZaT7u5upax6mrcsxvu2wRkD\nff6a9DrQaxv8Vh8W/wyev4bxTkySe7MDAABAlRJgJpLgFew0b4UZr9/aE35z\n1nTjdfclkw7DkruO4oDVRXJvdgAAAKhSAsxEErzpdFpP85bFeLsM+gzc89eC\naxuC568Fr0OhjwHjTYrk3uwAAABQpfhpSW9vr2R3T5w4IQ/UltEqMF6/vmR6\nRzIZid6XTEYuNcnS1CK6CSaJelEHDhxoK4TaR92EEq+V3JsdAAAAqhQ/LZEu\nZO4evGUx3k6DUwbnDPT5a2FqG/T5a+4eZfLSMN7wqH/ONIVD/uFTCsm92ScO\nmc6WHAdODyc9EgAAgKrAT0vsvruOHrwVYLyl9CXTjVdGJeOUtSf6DaQ+uVgf\nTAYxXuVgff7s2rVL7dPc3FwwFRycHw73xhw+fcCQws6M9/ODvWnj+b3HLlwv\n/WMQN231NTnmNp5NeiQAAABVgZ8C6bLq97ggfjt3GPQaSEZUXFHmr0m+VDrc\nSgY12Hij9ijDeN2I8R4+fPiSP+rZkHng4PxwuDfm2ca5hhTWt3k8me1rrEvl\nnp1a3zZYjo9B3GC8AAAAseKnQBivbbz6nDVxXRmJbrySnZa+E6cNirfPJAhj\nvBcuXAjIAAcj+eEyGW+2q2FmzWT2XYwXAAAgZvwUaFyN9y0DWYdC71Em89fE\nr8LPX8N4SyeM8ZaC5IfLYryDbfVTc0+k6hr7suX6GMQNxgsAABArfgp01sL9\nuBqM12/tCd14ZVSSi5bstKwvLFnN4u0zCcR4d+zYsXt8UGcui/FO+nIGE4wX\nAAAgVqKqUVmM95hBt4FkRMUVpZ+te/5aGOMNvw4FxusmfK+GJOt4w6d3s1cv\nn2w3Zra1n7x81XNfaZdgTYzLXu0/kZsKlz7x3ojH03knvDISPPQQF8d4AQAA\nYiWqGmG8dl8yP+OVHhRRb2yyiPEePXr0g/FE/VlHizbesOndkZ5XHpkzpUZn\nypwVrf1O8xTpXNKaVWduun96ytzXklB5en7TpVsj53avyD9havoPm13nK+Li\nGC8AAEBMRFWjshjvUQNZa1hfhyJMjzKMdzwQ4+3p6RnXq6gbNVqk8YZM7w62\nLRN3TdXOXrBk+fLlSxbMrk15HijSOfeFVkOkU7XzFqndFy145i396TuXN/xw\nemrsdIvm1aZq/GQ18sUxXgAAgJiIKi1VZbzuvmRSzyDGK6OSemMxXnkVJw2i\n3thkKdp41V1SN0T93LNnj/p13759o5bZuinWeO30bk3NPRt9+vMax6w3dkvV\nNRwbGBPM7ECrYcup+U36sSKdtVOnpqZ+Z2OPq1DBdNJckvbutdrpsn0vyMBq\nVx0p9eIYLwAAQExENZyyGG+7wQkD8cN3DKRHmb7isGRQw69DgfEWRxHGK66r\n/mrPPvvshg0bGiy2bNmitkiBitpHP6Q447XSu2ZFwcJmn5qG4V2Lc8pZu6TV\ntUP20Mpap2BaSjuzocsraWw+Xbtk94Dj6eHmhW5dLe7iGC8AAEA8RFUjjBfj\nFdR9UH6r5HbHjh3qQPVnUlvUT/V4z5498pQj2VuM8c6tqzMLA1atmi91vKuO\neCnqpab5hsCu7fF4Mtu6xCrLtSggnQFP971wpzGiZenxujgAAACUl6hqhPFi\nvIpf/epXSmiV2aq7YW/UV5qTOgflvWpPe2MxxisYs9XsgoK5L3jU8qaXGT78\njZ+2ePHTbzgNs3jj9WgjUeaLAwAAQHmJqkYYb5Ubr/pzqL+U8li1882bN+3t\n6uUfPXpU/ZRfpT3yW2+9pcRYMsCjRRvv2Lyv7JFVMn8tvyo2x/n1dTUFGS/j\nLffFAQAAoLxEVSOMt8qNN5PJNDQ0KJVVj9WfQx3V2dmpHkiv3QMHDqh7pR5v\n27ZNPRg1VhtR+6ujRos03vxmZIPNC41sam1927Dn/jO/vdyf59LlqGpwG2+5\nLw4AAADlJaoaYbzVbLzqb7TDQH69efOmUtwLFy6ow6WkoddAPW5raxPjVWzZ\nskUdoqS3GOPNNcz1fMI548yUSL1aNpCyVjWU+eIAAABQXqKqEcZbzcYrCV5J\n2AqdnZ1Hjx5VP1taWpT6KtFVp5KN9j7qLyhHldCPV8MqbXD4onlAavGuYecR\nnpTVeMt8cQAAACgvUdUI461a41UvfN++fRs2bLh58+aZM2c6DURx1Rb18tVj\n9VP9jcR4Bal2+NWvfrVnzx6p8g33xvQ33rHShvxOZZmN94hGes1rc1NW4y3z\nxQEAAKC8RFUjjLdqjVfdEKW7ssaEclr1qkeNwgZ1oExhUxvVT3WvWlpa1F9K\nPb5w4YJsFFVWv46Ww3iVYDaZncqWpceSqsPpZZL8nbrYtQjwyLl9h/PtsrzG\nW96LAwAAQHmJqkYYbzUb75YtW2TO2qjht+olnzlzRvnt0aNH1QP5qbY3Nzer\nE6pnJcGrOHTokDLe8lQ1GGS7Gma6y3nHFmfLrRq8ZpPRG2zTGlkb2DHZrczG\nG+3iZjez2vkN2zsDFpEDAACA8hBVjTDeqjVeWV7NNl71t5C6BalVuHDhwrZt\n2+SxuiHqhHqzMmlTJseGe2MWMN5bt4bb6msNvczvVJbtb10xZ0qNk9T0e1fv\nPqevJVx2441ycbsWmTwvAABAHERVI4y3ao1XsWfPnkOHDo0aunvgwAFJ8KqX\nf/Pmzc7OTnWXlOWqx2qL1Peqn1LeoFx3x44dUXK8l9LPGT29XvZaxUzI7H3G\n2OVftvVey38me/V0e8umNcazTzVuT594b8R1dM/Lrp5hIZ8uMLQwF1d7DfRs\nW2PscZgkLwAAwHgTVY0w3qo1XvWHkDWFldMqld22bZsyXnVn7MejVqZXybDc\nk+bmZvWs2q6OUsdGqeMFAAAAKBtR1QjjrVrjHTXaNShxlcfSn0HJrfqjKJVt\naWmx2/NKjldyv6NGAbA6Sh0bJccLAAAAUDaiqhHGW8HG293dHbybLKAmhQ2C\ntGIQy21ublY3QRK5sl1Q+yvj3bdvH8YLAAAAiRBVjTDeCjberVu3tnkhEivI\n/DV1E0atyWuyyJosPCEdG6QfryR4pRYi+irDAAAAAGUjqhphvBVpvMppm/zR\nqx3Un+lXBur+qD+HUly7GW9LS4vdjkxKfKWFr0LOcOXKlVGMFwAAAGInqhph\nvBVpvKNGwvZ9H5SpDuezzuDcuXP2FvVnam1tVT/tLeomyG7y60cffSQXSu7N\nDgAAAFVKVC/CeCvVeMOj7kxPT8+hQ4caGhrs6txRYy6bPMhkMmq7NOC1+/fa\nJPdmBwAAgColqu1gvBivoO7PDgPlvdK1TLFlyxb1WG1Rj/fs2SPlvg6Se7MD\nAABAlRLVczBejFdH3aVDhw7Zy7HJJLV9+/Z5uq6Q3JsdAAAAqpSohoPxYrye\nSG2DumkF90zuzQ4AAABVSlSxwXgx3hJJ7s0OAAAAVUpUXcF4Md4SSe7NDgAA\nAFVKVF3BeDHeEknuzQ4AAABVSoCZnPVCmSrGi/GWQnJvdgAAAKhSAsxEfNUT\njBfjLZrk3uwAAABQpQSYiWeO1yaM22C8MJFJ7mMHAAAAseInA2HaTBVEae3O\nnTvVT/d2jBcSJ7mPHQAAAMSKpwko2Tt48OCpU6dKzPFK0S/GCxOT5D52AAAA\nECtuDRDdVab6xhtvlFjHe/z4cbWz+unYjvHCRCC5jx0AAADEiqcJ3Lx505Ze\nR6aXXg0Yb8WQ3McOAAAAYsVPBmzpPXDggF7TSz9ejLdiSO5jBwAAALES4AOe\n0ovxYrwVQ3IfOwAAAIiVYCVwSy/Gi/FWDMl97AAAACBWClqBQ3oxXoy3Ykju\nYwcAAACxEkYMdOk9deoUxovxxoD6W3d2dh4tio6ODvXHKniJ5D52AAAAECsh\n9UPv3oDxYrzjzZUrV3bs2NFUAuqNqt4/wVdJ7mMHAAAAsVLQPW7cuCEPbOlV\nnDp1Koy3YLxQHOoNpqz1wIEDF6Kj3qUivcqZP/roo4CrJPexAwAAgFgp6B7d\n3d32YyW9e/fuVRKrfoZZhhjjheLo7e1VytrT01P0sVu2bFE/W1tbAzK9yX3s\nAAAAIFaC5eHGjRtKWe00r6Kvr2/nzp3keDHecaV041VvLfXvsmDpTe5jBwAA\nALESLA/d3d1KWfU0L70aMN4YKN141bHqrxksvfF/3IZPH2jJ0ZkZvyMqEe4C\nAACUSIA5SIJXsNO8GC/GGwNlMV71WP3J1DvNT3qjf1ws82o5cHq4mI/b2ca5\nNTnq28p7RPbq5ZPtMrL0ifOXr2aLGdwEJvp9AwAAyCPAHCTBm06n9TQvxovx\nxoCf8X527ergww9EOlb9Y+3IkSOe0hv50zK8a3HKMK+a1OJdxShv+Y13sHfb\ninm15qhsptyxYPXucyNFjHBigvECAECJBGiDZHeVlMoDtWUU48V4Y8HPeN9f\nuKB/2m3XN2+wtygH9jy2paXFbs8r3Rs2b968Y8cOvU9v1A+LCG9tbW3Rylte\n4x3sWHv3FMtxv3DXouWKJQvu/IK1bep3mvoqI9uL8QIAQIn4KYcy0tfzUVtG\nMV6MNxY8jffaurXKeH+f6bfTvEp91UbHser95tmh9+WXX1Y/5R9uQsTPighv\nqr5p4/xilbeMxpvta6xLmWLbeGxAN9uR9/atniPaO7W+bTDyKCceGC8AAJSI\nn3KI8aqfyh/sx6MYL8YbC27j/eza1cysaUp31eOL82aPGrrbP+025cCOY9Wf\nMpPJ+PXpLd54zZKGhc3D4l/FKG/5jPfsevHdVF2jZx7XFuLU/KbJP90L4wUA\ngBLxUw5dVv0eFwTjheJwG+/w00+qkMcfrlyqRFcJsGR9Q55Tna0U4zWFd37T\npVu3uhpmhFLe7NX+E+ncdLL2kzKbrKC5hTwie2hlbUGdtQ6tXXlId2KZfTc2\n9W7kynm5ZPpEf6Epb2Mz5KzxFeL6O4f9pvoN9sple11Z6Gz/8dwze9++5Hgp\nGC8AABSJnx5gvBhvgjiM97NrV/un3fZJT5f8OrLrVfWr+vn7TP/At+pCnrM0\n4zWFd27j2dxvR1YVquUd7Gi8f7o+oSxVO2/1bwda6wOqckMfYc2gc7isz5gd\nu4k91q46cis7cMxxyZopd6/t8C6DGOl55ZE5U2rydp6zorW/kPbKvw6M6+Vz\nqWm+nMb4R4TXMQubrduL8QIAQIn46QHGi/EmiMN4ldzqZisCrB7EZ7ymPM5o\n6DJ+zbbVpwKUd7CtfqplrbMXLFm+fPmiu4z5ZKlUytvcoh2RXiYFC/Vtwb45\n3LzQONgatoFpj3/1LzLtzZzytmTBHabO1ta3udOxbcvEjK3RLVkwuzawqmIM\n+ddB/hi0seWZbd4IzX9daFswXgAAKBY/PThr4X6M8WK8441uvMpvldbq/RkU\ngw8/8ElPl4p4jNchvMHKa5fYzl71W21G2ci53ctmmwlVh7lFPOL8+jpjW936\n8wXG3ffCna40qmWP6nLTf7hNa2E22Lqk1jPpag4vVdegz5DLDrQall6oUNi8\nVc6zGiI8d/78Wlf+13RhXZExXgAAKJGoKoLxYrwxoBvvhyuXXpw329GF7PeZ\n/v5pt6mnYjFeU3h1MzM3uZXXKiXwFEHLQD1rFEIfYf5P/xD+Z1UOaOlS2x7n\nPtvjbNjreWLrxS9pddfbSjmxfnYPrGxuXirXuFTtqjbjufz8r2Sw8zQY4wUA\ngBKJqiIYL8YbA7bxSsmuXcGroxxYmXBm1rSQ5yzeeD2E1/Y4p/JaeuddYutl\nbtGPaKv3zBR7Ye7qZbweR2dbl7iSx6Y0z1zb43F68wB3JW4e5in0+yeDUA4s\n+Wp9fK4i3uAxAwAAhCGqimC8GG8MiPH2th9Wumu3aHAj0uvOAHtStPFa6VxH\n1azpcQ7lNUts3RO1DLzMLfoR5cnxeh3tIcjm8L7x0xYvfvoN5/4BL2IslSuW\nb4i1lPmO+a1ZspEv0RgvAACUSFQVwXgx3hgQ4z3z/YXKeKUHrwNdcT9cudQv\nD6xTrPFaRQd3PbUz3/bWP/ifXMprJWx9HNDD3KIfYW8rkFq9FVzHG854rZrh\nQAoZrzV7zRqGlPaKAEua2P7nhHk77nyhr9BdAAAAiEBUFcF4Md4YUF66/fnn\nzk+dIu12Pz6YHtn1qr6D2n7hczWDDz8g6ntt3Vr1q3v9NZ0ijdcSXn905fVK\nqmp4mFv0I8Z6NSxLFxi7VTARtibWbbzW3jO/vdyf59IF1NuavWamcg0BtgYl\nN8D6TdzYmfDGeAEAoESiqgjGi/HGgPLSw/d9XUmsEt3hp5/0tNlPerqub95g\np3bVA6lw8MwJjxZrvJbwehrfkrumOpXXdEZHjtIioCo3whEFSn9dY8+vx4hY\n1WBuKpxPDsQcsZisjGBJa1YfkGR8JSntaruG8QIAQIlEVRGMF+ONgZNH2s9+\n/g/O/eHnR40CBj/pdSPJXkcrM6Eo47Wk0dky1sQ0MU15rRpb7wOCqnLDH6G5\n7MJm7/UicmQ23uPlxRGN1/0Si8JMZee8Xh5qCi13ILfB3Mt1KzBeAAAokagq\ngvFivDFw+sfLlbie+f5C+XXw4QfCryasdNdTeosxXsssfTOcpq5qPmiWrNbc\ns9Hdaizb86xHd7LoR6jtXQ0zje1T69u8nXeweWHKs1wiovHa4jz3hQJLTeQY\nOdfeku4Z8G86oRTdqHDQU9pmzYPyXCnXcBd4YLwAAFAiUVUE48V4Y+DMYw8p\naz35P14aNcoVpGT3w5VLVQw//aSy2Y8PplV4tmhQO3jqcRHGW1B4vZS3Z624\nqHM1spFz2xab66o5zC36EYpsX6PnshX5B3osiRbVeG8pD5WTTV3c7FxUeOTc\nvsP2vtkjq8yreqWe5U7NaNgknXjdnd5qV200ahqcq7MVGDMAAEAIoqoIxovx\nxoAy3rOf/wNZgUL57cC36pTEivSqn+pXFUqDJTKzptk7KN31a1YW3Xgt4fVK\nvtqYGVpNebNHVsuSvDWp6feuaNze0tKyac2iOblFfKfOnl3rlbGNfISBvfZv\nTap23qI1m3INJLY3rrDXC1YufMhtnpGNV7Nr7UK5Ec7LrTQ8tirx2GpunieX\nOzVzZk7v7SJewZy9Vus1ay2H1TFiZv2mA6dLqq4AAIAqJaqKYLwYbwwo4z18\n39fFeP1Q9ivFvSO7XlVWrFxXhdro16YssvFawlug95ZbeZWLdqy9e0pNHqnp\n9zd2DJpS6BbC6EcYjJzbvWKO4zjTTFe0OhOyQhHGq8j2t3pdSBn66t3WSsVj\nbS0816uw5tvVeCTNrWLmGp965kzTfKtjBnleAAAogqgqgvFivDGgjLfl8ceC\njfeza1eV8fo17HUT2XhPbv/nXEOGZ/YGZHhv5UpqNxuNG/55+8n87VdPt29a\nYzy1ZlP76auinz0v5za87LWAWRFHWMf1n0hvb3zKOPKpxu3tJ6841w/WuJR+\nbrnfGeVavt3GcgNsMUeorpM+8Z7jOkrA1yx/auMxr0LesSt73VLzyv7XHjm3\nz3iFa5pJ8gIAQHSiqgjGi/HGwOkfL9/60vpg4x210rwhJ7UVv8owAAAATHKi\nqgjGi/HGwMkdryg7LWi8kuZVUXDBtVGMFwAAoIqJqiIYL8YbAyePtIcx3lEr\nzZuZNa3gnhgvAABA1RJVRTBejDcGlJeGNF47zVtwfQqMFwAAoGqJqiIYL8Yb\nA+GNd9RK8xacwobxAgAAVC1RVQTjxXhjQL0ZlJ22tLQcDcGxtr2S5j19758H\n7KbOps6pvxuT+9gBAABArERVEYwX442Bmzdvbt++vSk0h+/7ukhvy+OPBey2\nbds29We1r5Lcxw4AAABiJaqKYLwYbzyov0gmk7kQkre7Ljz7s1xsbfLbRZ3N\n8YZP6kMHAAAAMRPVQzBejLdiSO5jBwAAALESVRIwXoy3YkjuYwcAAACxElUS\nMF6Mt2JI7mMHAAAAsRJVEjBejLdiSO5jBwAAALES4ANnvVCmivFivJVBch87\nAAAAiBU/Gfi4vV181ROMF+OtAJL72AEAAECseJqA0t1L3//+ez/72bu//rVf\n3Ni5U0WwUWC8MJFJ7mMHAAAAseLWANHdMFHQeLu6upTxqp+O7RgvTAiuXycI\ngiCIqo5qpaDuDkQxXin6VT/d2zFeSJ7Ev2cIgiAIItmoYv798GGMF+OtChL/\nniEIgiCIZKO6cUvv8Lp1Urg79Mwz4Y2XOl6Y0CT+PUMQBEEQyUbV45ZetUVt\nV5aL8WK8FULi3zMEQRAEkWyAj/RivBhv5ZD49wxBEARBJBtg4FnegPFivBVC\n4t8zBEEQBJFsgEXARDaMF+Od3CT+PUMQBEEQyQZoXN+2DePFeCuQxL9nCIIg\nCCLZAI2h55/3zPRivBjv5Cbx7xmCIAiCSDbA4pPTp5Xcqp+eNb3Bx2K8MKFJ\n/HuGIAiCIJINsBj6xS+U3Kqfo141vR+7VpfQwXhhQpP49wxBEARBJBtgIAle\nCfVYbdF7NVz95S+DD8d4oRTUn/v9ohgaGgp1gcS/ZwiCIAgi2QADSfBKSJrX\n7sc78IMfUMeL8Y4T6s/R2traVAKHDh1Sf98Cl0n8e4YgCIIgkg3IT/DaaV4x\nXqW7zFzDeMePCxcuKGttbm5ui456y23evDmU9Cb+PUMQBEEQyUbVo2x28Ec/\nGlByq4XaMvTMM/RqwHjHm97eXqWsPT09RRzb2dlpZ3rfeuutbDbru2vi3zME\nQRAEkWxUPVc3bPDswXtl9WqMF+Mdb0oxXjk2nU5v3bq1gPQm/j1DEARBEMlG\n1aPncvUYXLkS48V4x5vSjVcdOzg4WEB6Y/xK+ajrjd+89tpvXjt0Mewhl955\n47XcIYfOJP99mHREv3sEQRBEuKh6MF6MN0HKYrzqsXoj7d6921d6I3wnWP75\n2hvvXCrmK+X881+ryfHQm2EP6X7RPGKXteVM12syhsLRdSbpr9CyRvS7RxAE\nQYSLqkcZ71j57sqV+mOMF+MdbwKM9/rmDZGOVe+lPXv2eEtv+C+ES9v/PmU4\nV03q77dfKuIrpRzGu2tpTViW7kr6K7SsgfESBEGMV1Q9dheyXF8yLd/LzDWM\nNwb8jPfaurUXPlfz+0x/wWOPHj36gYX6c3hPZAv9hfDR9kVKeGtvvz2nvIu2\nfxT9K6UcxnvslUcffTwv5v+RsUvtvL/L3/7oK8eS/gota2C8BEEQ4xVVD8aL\n8SaIp/F+0tN1cd5sJb3DTz8pW5T6ulO+cqwfZ86cGds17BfCpT054U0t3bB+\ngaG8e6IXNpTDeN1hZn3/7Pnu5L8zxzMwXoIgiPGKqgfjxXgTxNN4B75VN7Lr\n1c+uXe2fdpv6VT1QAjz48AOOYz/66KP9+/c7mvTu3btXvRXVOdWZx3YN+W1g\nljR8d+clsdBiChsw3lIC4yUIghivqHqUzdqhLFd/jPFivOON23ivb97w/sIF\n8lhZ7scH05lZ09QWe2NB1NmKM14paaj55ob3r1/v/smXQxU2DA28d7glN4ns\nzY7BgaHREM726UDf2y25SWdHO353feh6GYz3g54jxiy2Q10uP8+8tT/3VEtf\nxjWMvgO5Ye888r7XixrseNOYGffm6d8NfBrq7n1wYZ8xme6NLtcdy/QZr3f/\nWxnXhfo6clfZ2XPe3ILxEgRBjFfET6bj+uvpj4eKOHLo4/Tr1zsyUQ/7tC99\n/fUO/+783ui5X4wX4x0n3MZ7cd7skV2vymNlvxc+V/PhyqW/z/QPfKsu5DmL\nNV4pabCsMv1EbYHChsyJ578zPaXNIkvd/uerWj9ofsjX2TIHX/zOl/KP+C//\n0nrhjYdKzPG2//zLRpXvE2nHU+9v+KZcaMGG846nROlrvrs1T1CHLrzleFE1\nNVP+8Hsv7r9Q0HvNE97+xDHHU+c3LJATGf+UyHuq/SczaiSpbm7BeAmCIMYr\nYifnn+m+T4s4cqjvxuuvj0QW3iI9GePFeGPAYbzKdTOzpn127ar8qh6I6MZh\nvGZJw5d/3m78OrRraSqgsCHz5kNftKx11v/14KOPP/rXd3/+P+R+TaW8nS2z\na6l1RO2sbz306KOP//VffiHviOKrGo49kZtqV/Pln3Tnbb+087uWtjrM1kos\n551w6MSL81KW5eojVHzxrzacKCC98m8E+wZa8dHWsUHszP/ng+m3X3v+vGML\nxksQBFH2iJ1sRzH+maPI5HBm5PXXb/RFPgzjxXhjwGG8w08/ac9WEy7Omz0a\ni/GaJQ1j0jj05kMpv8KG8+tEDVN//ETrB0P29sHf7aj/Y9MZHc7W/a/mEbOe\nbNXypYO9LfWzrCOKN95Pdxljrfnmv53Xt6efVCL8tW8uuN2Ver209W+cdnpp\nf70Y+Rf/fmufPsIdi2T7V37ePhR0D81/IzjzyYaNf23BN3ODeDKtH2IK+Yyf\ntI/dWIyXIAhinCJuivTP0aKTw7nMcDFFFBgvxhsDuvFe37whM2uaoyPZyK5X\nlfR+fDA9zsZrljTohQGmA7sLG6yevalvbnAvDXZ27Vfdzmaeqia1YIN7YbUT\nv/xqqcZrGWzN32zVMtJGzUDtE7sMscxPvbbUpxwVCMd/Jg3Q/mytK5c71P7z\nrxjP3bU+cCk0K6Wcl082Ki5uf+JNI9Ory+3o9ZZ/MgahazDGSxAEMV4RgZys\nXjdiTFkdedfcr2PP5tK55iHWPvmVCbkddInNHZ5XcGufQZ3TmRw2TiXPOksd\njGHkQp3cdc6QYLwYbwzYxqtEt3/abXYFr47aeOFzNeNrvKbE5ichTY10FjZY\n/5v+9n9u88h5ejmbpYK3/1P7kPvqZenVcP7fjIpd3dhlJMqB+9fNcxzrLuI1\n6yJ86pYvrr/LuP7XXuwOuo1m2bAu0t3P/5lc6OS6v8gvYHAX8frcPYIgCKIc\nERLdbPOsVauSzdtu6LFls7n0rOyT55+5Y/V8b34W1ziDpbiivvbOeZPR8q3b\n2FN/6vXiyoYxXow3BmzjVUIb0I3h44NpJb3X1q0Nc84ijNdK5z70Zp6Rmhrp\nKGzYb+RHPaZoGeHlbJLM9JhZZkR5upOZ1x2ryhDNnvevJ60K2zG/Pfmv8xzl\nB9YY3JPLJERcHTlk393G8snyr4O/WHfSLLHQ/FY83HFFjJcgCGK8IhQ5+dTz\nqMoq89O8yjDz9NWZvLVwO6122rwpZs4z6DrtLFTIHWg+5az1LXLa2ijGi/HG\nghjv6R8vV0KrtDZgz096uvqn3fbhyqUFzxndeM2Shpq//PFuo82XHf/6d1Nd\nmU8rYaunK7XwcDar5MDHV8vUj9ecOGaV8kpVrQjwkNE/wvZ5czxf/eUJ+3DT\nyf3HELIhsGit7dJSCy0CPPTGg7lBLN01pN/GP117osDdIwiCIMoSIXAX0OYZ\nr5TmprV9/Jsq5FUmOO1UE2B38a22s2vum228zqRxKWXDGC/GGwPKS7e+tP7c\nH35eZqh9du2qo7Dh+uYNgw8/IAuuSesGtWfw6sORjdeqy/VHL2wwE78RjNdq\nzzW+xmtNHDPTsIYAW1llGbNVsyFunJejNs9fsvGa0/2sfLIhwNaFpObBGpK4\nsWMuG8ZLEAQxblEYI036ujM0oZX6Xq1W1rd0Ns9InW1yNct1d9DVrHusnFgL\n40C3aRc7bW0U48V4Y0F56f7v3XfhczXDTz/5SU+Xe+baxwfT6ikluupZ2XJt\n3Vq1v3vRYZuoxmtNK/vKfY8++rgzHrz7i5LlHStseFPa53517Vmvs3k5m6mL\njnymFeVac83MmopSyjAeah7SRyUTx2RuXeqhXZ+6x/Bgs3cLMkvajfqEwJsp\nRc5iuVLkYJ9TfpW084m1f1rjLiPBeAmCIMYtCuNOnDqfvd7Rodcn+DZVcE9b\n01O1mie7iyK0nZ0lFvlncGeGi5m2NorxYryxoLy07/+oPT91ihJd6dWgbNZz\n/pqOsl9Zd9ju3KsT0XitkgZnx1ozTAfTChvMaV+u7rJ5++c5m7lChM8lyrbK\nsDlxLKfiktTVmpXJNLFc0ayZo86vyLVys95z6+zuZ85eux5hunGuZELGo1UL\ny33IjcocquuGYLwEQRDjFSEI6KBry62rXMHLMwOnremW6zJefWd/A3cZb/Gr\nXWC8GG8s9K17TinuO//tL+XXa+vW6itQBPP+wgXqWDv3axPNeK2SBveqZGaY\nLQW0wgazYrbm6+vdrcaGTv3cozuZ2Qmh5q7/94zr/EPHf1F6dzIJc+LYd3dm\njAoHPQtt1jwoS5eSXWfXhU/b/sl4Uam/2epaC/j6mX/7pmTBf3ZK257tffM3\nLcc+cBqyKfDqPIZF69XCplcr2ZbZf+6Xg/ESBEGMV4TB6HigpXD7tE4IlsHm\n1Q/kVc9+2tcxVqsw5p9Gctj81SqcyHPm/LYPjhyy3pyhL6i9Q5GrXWC8GG8s\nnHnsIWWtp154dtQo0+2fdpuSXiWxKoKLdUeNggdPPY5kvFZJg2PtBj3MDK1W\n2HD8OelPm5r34gm9Qdng7zYvMqa6uZzN6nabmvf8WV0Rx9Z3KIfxmkP98s9f\nkk68emsIqXm4/cn1RjmBc3W269oaGfN+eXxQf1Gn1ppP6DL8afoJeaWp724d\nyj+V5MBn/OQl6cSrd7SQmofaJ9YbLYg9MsYYL0EQxHhFSOwOt7lmX+kR6Y7r\n32lBb5Z7Pd3xcWbIPkl+kwe7Ctcr5Ws+25F1leMa0js2no/tYWjjHMkE12MU\nAOPFeGNAGe/Zz/9Bb/vhUavvrgrlvSrsxxfnzX5/4YLBhx8YfvrJ65s3KNFV\nIauwedY/RDFeq6QhcG0Fd6/aT9Orpstkt9SXvvmPz7/62mu/eanhb+/Mrcg7\nddasWg9nGzq26kvWEfc88XzTb157bXPDX38td8QX/3jW7WUyXnOof/SVnJHb\nRbwS5sSx22+v8euTZq+DnLr9z3+Q96LUpun1u3SztdTUy04lB/6Vr+Qk31EY\nLDUPt9/umjpnhtmyrOYrS1964x2vohGCIAiiyAAfMF6MNwaU8XbU/Ym9yrDy\nWEfOVm2R6gWRXmW5mVnTRIn92vNGMF6rpKGASZplDHlLUQwd/Nl//Q81eaS+\n9NfPHxwySwvcWcrMiZ/9n1OcR3znxYMZ0x7LYbzW6hheWWuzPCOHX1vdTy/s\nf/E7X3I2rpDX5biQmRt3ljoYd9XsxlbjUStilTTX+FQ1n9mwwLr80l1J/9eB\nIAiikgJ8wHgx3hhQxrv/e/fZxuvJJz1dyniV6IY8ZwTj7Wj6Ua4hw9P73OW1\negy1bzFaN/yoqSN/+8A7b770rPHUsy+9+c6A5FSPvZLbsvGk16k+Heg6+lKD\n0QWiYfObXdelwuHYxtyWjcf8xyDnfPT5Fp9iYzvOtzwvXSae3unKWpsnefzR\n/77ft4RDxdD1vsP77UG2HL406Lnb4O92NDz+4/VvXXAvPHd+/3+XC3nc2JMb\nzT4Yfq8l27v7xR/nLr2zK3C1C4IgCCJSgA8YL8YbA8p4tz//XLDxjlqT1AI6\nkukUs8owQRAEQVR2gA8YL8YbA33rnpNVhoN3kzRv/7TbCk5nG8V4CYIgCMId\n4APGi/HGwMkj7WGMd9RK86qfBffEeAmCIAjCGeADxovxxoDy0pDGK2lezwa8\nDjBegiAIgnAG+IDxYrwxEN54R600b8EpbBgvQRAEQTgDfMB4Md4YEOM9evTo\nByEY+O0+SfNe/NnqgN3U2TBegiAIgsgL8AHjxXhjQP3pX3755abQdNT9iTLe\ns5//g+3PPxe856VLl8Yuk/j3DEEQBEEkG+ADxovxxkMmk9m/f39bOA6sbzz1\nX2apOL50id8+6mzvvvtu3jUS/54hCIIgiGQDfMB4Md7KIfHvGYIgCIJINsAH\njBfjrRwS/54hCIIgiGQDfMB4Md7KIfHvGYIgCIJINsAHjBfjrRwS/54hCIIg\niGQDfMB4Md7KIfHvGYIgCIJINsAHjBfjrRwS/54hCIIgiGQDfMB4Md7KIfHv\nGYIgCIJINsAHjBfjrRwS/54hCIIgiGSj6lE26xlDzzwzgPFivJVB4t8zBEEQ\nBJFsVD16LtcvMF6Md3KT+PcMQRAEQSQbVQ/Gi/FWPol/zxAEQRBEslH1DGG8\nGG+lcwsAAACqA08TULK3f+fOt3fu7PUPKesNNgqltcp41U/3dowXEie5jx0A\nAADEilsDlOkdPHhQmeobb7zxug/utK0nGC9MZJL72AEAAECseJrAzZs3bek9\nderUWQ2R2JDGq8RP7ezWP4wXJgLJfewAAAAgVvxkwJbeAwcOKPezt/uV5npC\nHS9MZJL72AEAAECsBPiAp/RivBhvxZDcxw4AAABiJVgJ3NKL8WK8FUNyHzsA\nAACIlYJW4JBejBfjrRiS+9gBAABArIQRA116T506hfFivJVBch87AAAAiJWQ\nbqB3b8B4Md4YUG+blpaW5qLYvXu3+nMUvERyHzsAAACIlYJWcOPGDXlgS6/i\n1KlTIaUF44UiuHjx4pYtW5pKYMeOHeodFXyV5D52AAAAECsF3aO7u9t+rKR3\n7969SmLVT71lmR8YLxRHb2+vstbOzs6R6Bw/flykVzlzJpMJuEpyHzsAAACI\nlWDxuHHjhlJWO82r6Ovr27lzJzlejHdcEePt6ekp+tgdO3aon9u2bQvI9Cb3\nsQMAAIBYCZaH7u5upax6mpdeDRhvDJRuvOrYzs7OYOlN7mM34cl0tuQ4cHo4\n6ZFEYfj0AWPYnZmkRwIAABONAHOQBK9gp3kxXow3BspivOpxsPSG+4hYGtWS\n7h0MtV8JwmWKpoP0ifMXr4wUe86iaKuvyTG38Wysly2Rs41zjWHXtyU9EgAA\nmGgEmIMkeNPptJ7mxXgx3hgIMN7fZ/rDH6v+xOqBn/SG+4hYGlVTM3Ntj/9u\nw80Lzd1KEC5TND2ZcseC1bvPxSS+5TFeEfj4Mq4YLwAA+BGgDZLdVVIqD9SW\nUYwX440FP+P9pKerf9ptwdLrODZAesN9RMaMN0h5NeEt3Xhr6x5cPsaiu2Z8\nYYp17qn1bYGZ5jJRFuM9v74uXv/EeAEAwA8/bVBG+no+assoxovxxoKn8X52\n7erFebPfX7jg2rq19kblwJ7HKr/VO/SqLZs3b96yZcvly5ftPcN9RESjamtr\n1c8ZDV3eO11qml9TPuN1i2b26ultP5yeyj2ZWrxr/Itry2K8poBivAAAkDx+\nyiHGq34qX7Ufj2K8GG8seBrvhyuXqlDeq6RXtgw+/IDa4jhW/SE8e/m++uqr\n6qf8rwoh3EdENGruypX3+CuvCG/tPffcOU7Ga9Czdqbx9PymS8VeoDwDCcmR\nVbUYLwAATAz8lEOXVb/HBcF4oTjcxvvxwXRm1jSlu+qxPFC6qx7Y9quj/nbu\nPr3qzVaC8aaWbRWrXXXEvUtm4z3GU02OpOalt/cGTmUzJ7vtfdsy2AKi2feC\nYdSpZWn3c9mrl8+fSFsz3QpPdFP7n2w3d++/mnU8W9B4R66YV/O6mPnkT79h\nnOQbPx2bhOd3J66/c9ivOcRgb9pn3mC2/3j+7cN4AQDADz/lwHgx3gRxG68y\n2+Gnn5THH65cenHebBWf9HR5Gq8nUs1brPEqizITuSsPOfVQhHdGQ5czqZk9\ntNLY4JMZHt61OFenkKpvs85YQDQ9jS470LNt9YI77EpfITX9h839zoGaB/S3\nrr5XKiRspsx55JUeTVwDBpId+O0ax+Gp6fc3dgy6jvbA10W7GmbUeP6Dwq4X\ncWe2zWMWNluWjPECAIAffnqA8WK8CeIw3t9n+vUJa0p0Jc2rtgx8qy7kOUs2\n3ls+ymsLr2V6mnCZhQiemWG38BYyXlPxtBzvtcNP3mHK55Qv3LXImOg2r9bc\nMnVZ2p0xPbRqdv4BSxbMlgOmrjh4vdBAsn3r756Sf7m7zGl12py6npdzzzxY\nZ+h+zcxvj83Ce9l36p/5rwXnPw60GYFjZiuYfxhtjBgvAAD44acHZy3cjzFe\njHe8cRjvtXVrHbnci/NmjxomHJvx5sRK9EtXVPt5o42D23hNHfbKDGfb6lPO\nZ8LV8erql+1q+Or0e1fvPq0VJmQHWuunGnveszG/iuDs+jrR3amLt2mNzrID\nx9auWN+njdB7IMPpZVPdR98a6XnBOO3UVUfcNyasf5q3w5nKNUR47vz5ta5/\nNpgurCsyxgsAAH5EVRGMF+ONAd14ldZmZk37+GBa3+HDlUuVBn/S0xWr8Zpp\n2Tzl1YTXy3gt5XVosrfwBhhvduC3ZnK2tr4tL9eZzXoUL5hXzfdHM6lck6pb\nX2hCmudATOOe+0Kf64pyvfwXGdE/rWxuXirXyGrXrmoznsvP/6aXpZzZc4wX\nAAD8iKoiGC/GGwO28X527apyWndDBoXaLhHynOUwXkt5xxqEiQWauVQv47WL\nF/KbinkKr3WCGUt+rS25tmmNXXhQk5q+LFw/Xo+6WKsi1iPf7MLLeKXuwKc5\nmkyqK8k/zfHp55BTKAeW1r76cFxFvEVcEQAAqoeoKoLxYrwxYBvv8NNP2i0a\n3Aw+/EDBBSlsymK8pqna2pcnvN7Ga81fy1NFc5tTPoPWXHPNLvMme/XyxYsn\n23+9ZIZzLJIU9a4pduJhvOZ6Evk2bmNeT3/pkf3TPGAslStp37r15y3dHvNb\nczT5NRAYLwAA+BFVRTBejDcGxHh7t29VQquvN+Hmw5VL1T6OmgdPymO8lquK\ne4nw2trlbbx2OcCYnlnC65RPzzXXlq/Z5NlBTCN79fS+xqcW3TW9Nr8Fgz4W\n0xHD9dj1MF5TmIMpyXit2WvWfZJ/XYgAZ1uX1GhlE2YJxJ0v9OnHY7wAAOBH\nVBXBeDHeGBDjPfeXdyqb9UzwftLTZVvuyK5XL3yuJliMR8tmvKatGhlb4ykt\nd+tnvJby2hPJRO3c2dYiFn7I9reumKO3JpvyhRkz7lpkNUoYG4ulg8Uar7eN\nO9B7MUT3T2v2mpnKNe6SdZMu5bVD9r6BGC8AAPgRVUUwXow3BpSXtjz+mPJY\nWWRN/XRkcZXfZmZNUz4sqwyrnxfnzR74Vp1f/cNo+YzX1C0lun256Vp6sYKv\n8VozyUzlFV/z6NIb2XgHdy0W201Nv3f1Nm0xCA/5s4qE/VZKLjAQ84yhiiL8\nhlAIM3Ur15Djl7Rm9dPJ6KVq2DUbEOMFAAA/oqoIxovxxoDy0o66P1HGq1R2\n+OknRX3d9bqiuzZqT+XA1zdv8Dxn+YxXZk2l6urmOqzL33it+WuG8sqkKy/z\njGq8ZhlA7ZLdA46aBw/5szY5W5Z54TEQKwErbSlCUIx/mrPXctUK8lAr1JXb\nlttg7uVs0IvxAgCAL1FVBOPFeGPg5I5XlOWe/9P/LL8qiVUqO7Lr1YIHSrJ3\n8OEH3MneMhqv3RnXu7mYp3CZpbvqNHo/MwcRjdcqzXVfMNvxL66Za/aoHX1z\nvfAaiLWCXO2S1lDtIqzeEO7F0nKMnGtvSfc4Rd262wubBw3B1gt1TeVWnisl\nxe67hPECAIAfUVUE48V4Y+D0j5cr4z396BL5VUmsvcRwQZQYe85lK6fx+vwv\n/iDjtXKUc1euvMc3UxrReGU6lzNrO9a61zmW4bZ6qe6dutixBPFIz8ZHfnGk\n0FIY1gIWqbqGDof0ZgeO7e9ypFzNDLRHP7PskVWyREZKqW3+U1YCfJN04tXv\nr9Q81K7aaNQ0eOTIMV4AAPAjqopgvBhvDJx57CFlvCffaFWPlbuqx0p6Jd5f\nuECFEmAV1zdvUM86qh3kWfc5y2q8tzJ7n1m+/Kmd+WYabLxjmWHf0oCoVQ3W\nmhI1U+YsWrOppaVle+MjxiLDqelzZtd6jGWwbdl0s7Nv7TzrkBUL7pjiyP1a\nnczmN2zvzOQdb67mVjPljgUrGre36CdwDttKCuf6quV23bRm0S/SxhUsNfW6\nWeLJM2fm7pVdxCuYs9dqvaf9jeW8Z9ZvOnDaq2swAABULVFVBOPFeGNAGW/v\nH/0nWXNNOa3I7ciuVyXUY+nTq0xYfkqox7Imhef8tfIarycFjNdeCc33ZNF7\nNQweGsvnmkyZs6K1P2sO2z2WkZ6N9093NRqbcsffNmp5WzsJ6x7MYEejx/E5\nq914zFmkMCbYJqan2qbuof7W2ms1HvUQ5rITOVxFvDkyTfM9k9sAAFD1RFUR\njBfjjQFlvIfv+7oYrx/Ke5XlDj78wKixErESYyXD6qdfu4ZijfdS+rlc363n\n0l7VqPn0vOxq0ZWP9BjwN1rzBGGuNUb26un2TWtyxz3VuL39tNm3N9u1OWAs\nI1dOtm9vfMo66OQV18oW2YGebWuMpw97THQbee9E2jw+1y7YvqrH6AZ60mOj\nO3nZ3HHk3O41y59yO/It+4YvX/7MXteVzRvkf4tGzu0zhrWmmSQvAABoRFUR\njBfjjQFlvC2PPxZsvApJ8Do6NvhRrPGWETPvGqZZAgAAAJSRqCqC8WK8MXD6\nx8tlleHg3STNe3He7DDnTNx4s10NMxFeAACAJIiqIhgvxhsDJ3e8EsZ4R600\nr18PXp2EjTfb12g0OgjRGgwAAADKTFQVwXgx3hiQVYbDGK+kefun3eZen8JB\nMsZ7dmfjppaWTavvlRlcU+vbQvWyBQAAgHISVUUwXow3BsIb76iV5pUpbAEk\nYrxWv6wcqen3N/WR3wUAAEiAqCqC8WK8MRDJeCXNW3AKWyLGm+m0+hTsca8v\nBgAAADERVUUwXow3BjKZjLLTbdu2NYfj9Jf/Y26Nti//x4B91NnUOd999137\nKsl97AAAACBWoqoIxovxxoD60+zfv78pNHv/4YeS5lUPAnZLp9P6ez6xTx0A\nAADES1QVwXgx3thQf4KR0Hx0+pSE3w7qbI7zJ/exAwAAgFiJKiEYL8ZbMST3\nsQMAAIBYiSoJGC/GWzEk97EDAACAWIkqCRgvxlsxJPexAwAAgFgJ8IGzXihT\nxXgx3soguY8dAAAAxEqAD4iveoLxYrwVQHIfOwAAAIiVAB/wzPHaOPY848Xh\nw4cxXpiwJPexAwAAgFgpXRuUGQZkgzFecJDcmx0AAACgAJ72orTw4MGDhw4d\navcH4wWd5N7CAAAAAAVwq4vo7uuvv/7GG29EqvjFeKuZ5N7CAAAAAAXwtJeb\nN2/a0nvq1KmQXR0w3momubcwAAAAQAH8BMaW3gMHDugLuQZ07sV4q5nk3sIA\nAAAABQhwGE/pxXjBk+TewgAAAAAFCNYYt/RivOBJcm9hAAAAgAIUNBmH9GK8\n4Elyb2EAAACAAoSRGV16T506hfGCm+TewgAAAAAFCOkzevcGjHcyol6O+tdK\nbzlQ57l8+bLj/Mm9hQEAAAAKUNCUbty4IQ9s6VUo53HvifFOWNTfpancqHPq\nl0juLQwAAABQgIKy1N3dbT9W0rt3715lvOqn3rLM1iqMd0Lx8cH08NNPvvej\nZfu/d9/hBxed37ThbHpfT8l0dnZu3bpVSa+6Rfa1knsLAwAAABQgWJlu3Lih\n/NZO8yr6+vp27txJjndSoHT3wudqJD5cubSMZ1bSq4xXfxsk9xYGAAAAKECw\n2HR3dyvj1dO89GqYREiO98xjD+3/3n3vbn+5jGfu6elRxtvb22tvSe4tDAAA\nAFCAAKuRBK9gp3kx3kmH8lJlp8pRy3jOSW+8w6cPtOTozCQ9ktBkr14+2W4M\nuv3klZGkR6MxCe8lAABUHQFWIwnedDqtp3kx3knExMvxWnLkoP3kxctXs+Pz\nDvfmbOPcmhz1beN2iUyn8doOnB4u/VyDHWvvnlKjMb/pUulnLRMx3EsAAIAS\n8VMaJTOS3VX6Kg9EbzDeSYRexzv89P9TxjMXa7yWHHmRqp33yMZjA/GIb3ks\nTQTex2nb6o0rzG08W8oljMu01ddat2jR8uXLF8371vqST1o+MF4AAJj4+CmN\nctfX85FuVBjvJCI4x6uevbZurdrBDrXFPkqPkV2vOo4t1Xhnfnv5GEsW3Dm9\nNmV5b11jXwzSWx5LSy9L+Ttt+YxXLlNTu/JQrHnwsGC8AAAw8fGTJTFe9VPJ\nrf14FOOdhHjW8b6/cIGd/tXywE+O5meG7Rj4Vp1+eKnG65ajkfcOW//jfuba\nnjK9u4sZSBREasfbeCe6UU708QEAAPgbr262fo8dYLwTDb8c78iuV5XE9k+7\n7cOVSyWLq4TWYbxqi53jVXuqLdc3b7DPUH7jzTG8a7EkM1cdKcNbu4SBhORS\n03yMd+KPDwAAAOOtaOP1q+O9tm6to0Ov7Kkbrzx2PyuMj/HeyrYuMZ6uW3/e\n/eTIlYtmr4KW9pMhJrqNXDl/Iu3X26CwpdmHp0+cdx5utk349ZIZuXPMWPJr\new6eVtPrY7wyoc3uaxDYgUGeNC9T842fui9yy+M04ScBXn/nsN8JB3vlxfcO\nui7Vfzz3zN63rblzGC8AAEx8/GQJ460A4/XL8QY7bYLG622JI+f2NT4yz670\nNZly99oOl40Jgx0bH5mT19qgJjX93jW/1WbFBQ0kO/DbNfdOT+Uffn+jdjX/\nCXjayH2MVzbnei2MnNu9In+Yqek/bO7XdNXnOnmnzA4ca7w/f7Q1U+7428ZQ\ncwC7GgyZdifVzfS1V1MI85iFzZYlY7wAADDx8ZOlsxbuxxjv5MJdxzthjXe4\neaHxtJbj7f+3BaYUpmpnL1hiTHS7w9pS525ZkO1r+s7U/AMW3fUF44DU3f/D\nPq3vQLJ9681y4ilfuCvXGME+vGZqfZspvZfSz+We+fZMY3tt3YP2LLzn0rYg\nBhrvncsbfpjTVHuMttHr+8t1HqyTTg32dL+xi2T7GutSluXmvVg13O80FZ4D\neGSVce4ZDV2ef4g8s827c9owMV4AAJj4RNUnjHcSEZzj1St1g+t49WeF8a3j\nzfOvweaFtXMe2Xj4Pe1/+Y/0vFDn2b5gOL1sqinDDXqSc+TcthWr27SUsM9A\nrOOnLt52zuN6U1cd0S8XXKkbaLyGo969Vhtjtu8FGZIr4ep70+xXO3WxnhpW\nL3axbJ/Z0FXAebNt9SmPVK4hwnPnz691Dcd0Yf1PhPECAMDEJ6pEYbyTCL86\nXs9uDMG9GsbfeEd6NprJWYcjZrMe1pY9tLLWrYc9ayXrOnVZusCyD94DMY+f\n+4I7OZrZeE9OpOvbtGdKMd7aJbudZQdWYtV5hN9Ns16tx3CzXQ3y3D0bCyyE\nZl00L5VrFC7UrmoznsvP/0qntLzbjvECAMDEJ6pEYbyTCL8cr7vjbnA/Xv1Z\noVTjtSdh5dje+NTY/4ufcvf6UP14LVPTk5Pm/6IvrHk+libHpxbv8tLlvhfu\ndKpeKcbrdZBcoia1LF14rPar9RmuGHqIVhFmxa7+wuSCyoHPr69znMJVxOs/\nPgAAgAlEVInCeCcdnv14S2Q81lxzzS7zYeTKxYvnT6R/+g2n0YmfhVuB18vS\nzOP11gsaZscE/YByG6+POnpvtrb6vVrreWcdrt+OY6lc+ceEUUstVj12CvMW\n5V8T4wUAgIlPVNXBeCcREzfHm7fm2vKnGrd79ebSGXnvxLY1Sxbc+YX8Fgx5\n5mguTRbKvLwszTo+kAljvAVfbeh+wGay2NJYKe0VAZZ2cXYth5lYv/OFvhDD\nBgAAmEBElSiMdxIxqep4fRnsyO++laqdPuPOBUvMRgnudmBFG69VYau1XnDz\nco/rgGSMt+CrDW281uw1M5VrCLBV5CA1D9Zv4sbOqXUYLwAATHyiShTGO4mY\nbL0aPMh2rf2q2O6UOY807tNWV3ALXej/j+8zEHNb+BXfJkRVw5JW7zoQq6Ou\n52oe+ZipW3nhcl77rPKrZHylzjh/9p7/sAEAACYQUSUK4510TKJ+vC4sbZv7\nbI+z5sFtjlau0tmyLOxArONnru3xPa7AEEI8Wy7jLfBqraednXY9MW9zrlpB\nHmqFujJXLbfB3Mv1DwqMFwAAJj5R9QnjnURMvjXXnJjFqh56OLjtr1zmaPXz\nTc1vKtSswXMgdsuzJa0+q7nlYxbA+iSFx9l47dGmFja7R5tpmu+295Fz7S3p\nHq+5geYl1JkMUdYLdU11Vp4rfwz3wDFeAACY+ESVKIx3EhFcxzsZjNfs1+XI\nY4617nUKmHX+VF1D/hLE2YHfrl6xNePa0SmX62VlC9fxxmq++7vys5tWBto7\nKTzexquP9oW8FLi9QIcuw9kjq8zFObwMWTK5Mxo2SSdeXeGl5qF21Ubjb+GR\nM8Z4AQBg4hNVojDeSURArwZlsP3TbgtTx/vhyqVqT7VlZNer9hliq+O1VllI\nTb93ReP2lpaWTatlkeEpc+bM9DDHsUWCc8vumoesMdfw1XK/ViezmfWbDpzW\nPXawrX6q4/iW7Y0r5KJOTbWa3qrRrd5k7Ldiq3Mi3TgarzbaVO28R6wXO2eK\nOahlXqvM+dx9yVfPnJm7qY7SYHP2Wq3XrLUcvvcSAABgwhBVojDeSYdnP97B\nhx+I1KtB7f/Ztav24fH1asj2Ndn5XJPU9PsbOwZNdXSbYy6dO8fZxCynhCta\ntaV4rf/t7zEYZ3MIkylzHtl4zFESoAm2yVgFbBzGa6SePUZr3iIdq+TDJyVt\nrehR49Hh11x2IofnrMCAewkAADAxiKpPGO8kwi/HK4zsejVkP161p667o8Ub\n76X0c64eX4UZee/Ensancset2ZQ+8Z75P/Aze59RW55Ley7AkL3afyK9ac1y\n66D+q67q1ZFz+4yTrmn2Skyqa6a3y0XVCVraT7tPYJ+nffvY6M7bbYV7XjYO\ndg7QZ3MOn7tT+KY5X+17nq2NR87tXrP8KZe1O66y/Jm9riJoc8y+d7vAvQQA\nAEicqBKF8U4i/Op4S6dY4wUAAABIgKiqU8HGKyOpJOMNzvGWAsYLAAAAk4io\nqlNG471iMGSA8Y4fnnW8JYLxAgAAwCQiqupUsPFWXlUDOV4AAACAW1Q1VLTx\n6nW8H65cWsYzd3Z2KuM9deqUvSW5tzAAAABAAaKqThUa7wWDyWi8kuN970fL\n9n/vvsMPLjq/acPZ9L6eklG6u3XrVmW8ly9ftq+V3FsYAAAAoABRJSrAeI8Y\ndBmcMtCNV+wR400E9S+RpnKjzqlfIrm3MAAAAEABorpT1RqvvKLipTNp1MtR\n4+8tB+o8enZXSO4tDAAAAFCAqOIUyXjPGbxrgPFWNsm9hQEAAAAKEFVsKsB4\nswb/bnDD4CMDMV7pHSEjxHjDk9xbGAAAAKAAUcUmwHiPGrxt0GcgXQ7EeC8a\nXDYYNNCNV5xT/FNcVLwU450sJPcWBgAAAChAVLGpYOOVPLOf8corKocbVibJ\nvYUBAAAAChBVbAKM95hBt8FpA3HFjIHbeMUtJbOK8U52knsLAwAAABQgwGHO\netHe3j55jfemQbDxSs5ZRihj/p2BvKJxE8ZJT3JvYQAAAIACBDiMpHM98TTe\ntwxkkYIzBuKKsvbEJQPpgaCvLxxsvOKoGO/EJ7m3MAAAAEABAhzGM8dr495/\nchmvu0eZjEE3Xhmz1CHLKxo3YQQAAACASUCHgSxSIFbst/aEGG9wXzKMFwAA\nAAAmGskar4xBN17de3Xj9VuHQu9RJn0kpOpY6pBl/bhk7zAAAAAAJMsJg6h9\nyYLXntCNV3dd3Xj1MWC8AAAAADB+TGTjlfyw23j1+Wv6isNSY6yvNSyvKKl7\nCwAAAAATAelLJvWu0pdM5qxJPUP4OWtu43XXM2C8AAAAABA/E8d4g+ev+a1D\n4Td/TcYv+eqk7i0AAAAATAROGUi9qz5nLUw9QylrT+hjwHgBAAAAYPyYLMYb\nfv6aZKRl/PJapMOwdKKQimXpTfG2gVQyS88K6U4s69AdNWg3OAwAAAAAMXLI\n4KAL2S77iKeJs4m/ict1GojpnTQQD9RXFg6z6kSYOWsYLwAAAAAUB8brnr+m\nrzgso5XstO69ksGWuWyS05Y1iCXLLXdD1p6T+9Nl0AkAAAAAsaNnI3Vku76n\nOJv4m7ic2J2Ynlif7rphOpKFmbOG8QIAAABAKVSP8QbPXwuubXB7r7w66UQh\n9iuv/ZyB3A3pWSGVD3KvegEAAAAgdsRdu13Idn1PcTbxN3E5sTvJc0p1q+66\n7jWFw9QzBM9Zw3gBAAAAICrVYLzF1Tboq1Ho6w6L90plsrxGqXMQ+5UOZnI3\n3A4sdc5nAAAAACBGpCahT+O0huwjnibOJv4mLie5TXE88T29ksHPdf06koWv\nZ8B4AQAAACA8lW284eev6bUNwd4rr0Vel7xGeb1iv3IHxIEl4y33R+6VbsIA\nAAAAEA9Sk3DOhWyXfcTTdL8VlxOv02sYSnFdvZ4h/Jw1jBcAAAAAgqk24w3v\nvVJdHOy97joHP/uVHLjuwAAAAAAQJ/0u9GfF08TZ/CxXfE/vQhbsun6z1fxc\nF+MFAAAAgFKoJOMNP38t2Hsl/xzsvdJbWF6v5LT97FfWnrsIAAAAALGjZyB1\np9XNVhBn87Nc8T19jYlg1xWfDHbdqHPWMF4AAAAAcFMNxltKbYPbe/U1iHXv\n1escdPuVqmbdgQEAAAAgTgYC0fcUZxN/c1uu+J7bdfV1hHXXHb96BowXAAAA\nAHSqzXjL5b36SsRh7Fd3YAAAAACIkw8C0ffUzS2M5fpVMhTnuhgvAAAAABRH\ndRpv1FlswV3LPtLws1/dgQEAAAAgTq4Eou+pm5uf5fq5rm65xc1Ww3gBAAAA\noDgq1XiLq23w897wdQ7uagfdgXUTBgAAAIA40T3WjW5rusXpfhu+hiGM65ZS\nz4DxAgAAAICb6jHe4rzXb0abn/36OTAAAAAAxM+1QNz7u/3Wz3L9ZqiV7roY\nLwAAAACEB+MN471h6hx0+9Ud2G3CAAAAABAn1wNx769bnG53fpbrrmEI77oY\nLwAAAACUTmUbbyneG77Owa+PmZ8JAwAAAECcjATi3t/tcu6eY1FrGMbPdTFe\nAAAAAKgG443qveHrHIId2G3CAAAAABA/boP1s1kdt9e5/ba4GobxcF2MFwAA\nAKCawXiD7Te4ziGMAwf7MAAAAABMHPwsLthvS69hwHgBAAAAIB4mu/GW4r1+\n9uvnwH4mDAAAAACTCz/T8zPDqDUM5XVdjBcAAAAAojIZjTeq/RbnwGF8GAAA\nAAAmMmFMrxS/HT/LxXgBAAAAIAyVYbxRvTeMAxdnxQAAAAAw0Qjve8X5ZDyu\ni/ECAAAAgB+VZLzlcuDifBgAAAAAJj6l+2GyfusG4wUAAAAAncozXj9Kf6UA\nAAAAUNkkbaylkvT9AwAAAICJTtLGmgxJ33UAAAAAKIakLXIykfTfCgAAAACK\nIWmLBAAAAAAAAAAAAIBK438CJ4hmaw==\n    "
             ],
             {{0, 176.0}, {467.0, 0}},
             {0, 255},
             ColorFunction -> RGBColor,
             ImageResolution -> {144.0, 144.0},
             SmoothingQuality -> "High"
            ],
            BoxForm`ImageTag[
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ],
            Selectable -> False
           ],
           DefaultBaseStyle -> "ImageGraphics",
           ImageSize -> Automatic,
           ImageSizeRaw -> {467.0, 176.0},
           PlotRange -> {{0, 467.0}, {0, 176.0}}
          ]
         ],
         "Picture",
         CellID -> 282370770
        ],
        Cell[
         "Build the paclet and check the files manifest:",
         "ExampleText",
         CellID -> 450491735
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "BuildPaclet",
                 "[",
                 RowBox[{"ExampleDirectory", "[", "\"FewIssues\"", "]"}],
                 "]"
                }
               ],
               "[",
               "\"PacletManifest\"",
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 165574845
           ],
           Cell[
            BoxData[
             TagBox[
              TagBox[
               DynamicModuleBox[
                {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                  "InitialData" -> <|
                   "Files" -> {
                    <|
                     "File" -> File["Kernel\\AddOne.wl"],
                     "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                    |>,
                    <|
                     "File" -> File["Kernel\\MyPaclet.wl"],
                     "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                      ],
                     "Hash" -> "bc4ec7277b1f6135d154a02e86a7e48ff1a6cc6d1876a2b3b525adf02871a541"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                      ],
                     "Hash" -> "ba154d5b06184d7edb1653dbe5abdd4cc99e72a6ba94e78bfca58cb5a2c2565e"
                    |>,
                    <|
                     "File" -> File["LICENSE"],
                     "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                    |>
                   }
                  |>,
                  "AllowEmbedding" -> True,
                  "InitialShape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, All, TypeSystem`PackageScope`KeyDummy[7]} -> 1,
                     {All, All, "File"} -> 1,
                     {All, All, "Hash"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`KeyValueShape[
                       TypeSystem`PackageScope`AtomShape[56.0],
                       TypeSystem`PackageScope`Limited[
                        TypeSystem`PackageScope`ColumnShape[
                         TypeSystem`PackageScope`Limited[
                          TypeSystem`PackageScope`RowShape[
                           <|
                            "File" -> TypeSystem`PackageScope`AtomShape[60],
                            "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                           |>
                          ],
                          Infinity,
                          2,
                          {All, All}
                         ]
                        ],
                        5,
                        Infinity,
                        {All}
                       ]
                      ]
                     ],
                     1,
                     Infinity,
                     { }
                    ]
                   ],
                  "InitialType" ->
                   TypeSystem`Assoc[
                    TypeSystem`Atom[String],
                    TypeSystem`Vector[
                     TypeSystem`Struct[
                      {"File", "Hash"},
                      {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                     ],
                     5
                    ],
                    1
                   ],
                  "Meta" -> Association[HiddenItems -> {{All, All, "Hash"} -> True}],
                  "RowTarget" -> 20,
                  "ColumnTarget" -> 10,
                  "Shape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, All, TypeSystem`PackageScope`KeyDummy[7]} -> 1,
                     {All, All, "File"} -> 1,
                     {All, All, "Hash"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`KeyValueShape[
                       TypeSystem`PackageScope`AtomShape[56.0],
                       TypeSystem`PackageScope`Limited[
                        TypeSystem`PackageScope`ColumnShape[
                         TypeSystem`PackageScope`Limited[
                          TypeSystem`PackageScope`RowShape[
                           <|
                            "File" -> TypeSystem`PackageScope`AtomShape[60],
                            "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                           |>
                          ],
                          Infinity,
                          2,
                          {All, All}
                         ]
                        ],
                        5,
                        Infinity,
                        {All}
                       ]
                      ]
                     ],
                     1,
                     Infinity,
                     { }
                    ]
                   ],
                  "Type" ->
                   TypeSystem`Assoc[
                    TypeSystem`Atom[String],
                    TypeSystem`Vector[
                     TypeSystem`Struct[
                      {"File", "Hash"},
                      {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                     ],
                     5
                    ],
                    1
                   ],
                  "Path" -> { },
                  "DisplayedRowCount" -> 1,
                  "DisplayedColumnCount" -> 2,
                  "DataRowCount" -> 1,
                  "DataColumnCount" -> 2,
                  "SortPaths" -> { },
                  "SortDirections" -> { },
                  "HiddenItemsMap" -> <|
                   "Files" -> {
                    Association["File" -> False, "Hash" -> True],
                    Association["File" -> False, "Hash" -> True],
                    Association["File" -> False, "Hash" -> True],
                    Association["File" -> False, "Hash" -> True],
                    Association["File" -> False, "Hash" -> True]
                   }
                  |>,
                  "UpdateType" -> 1
                 |>,
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                 TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                  DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                     Deploy[
                      Style[
                       Grid[
                        {
                         {
                          Item[
                           Pane[
                            Annotation[
                             Mouseover[
                              Graphics[
                               { },
                               ImageSize -> 6,
                               BaselinePosition -> Scaled[-0.15]
                              ],
                              Graphics[
                               {
                                GrayLevel[0.6],
                                Polygon[
                                 {
                                  {1/Sqrt[2], -(1/Sqrt[2])},
                                  {1/Sqrt[2], 1/Sqrt[2]},
                                  {-(1/Sqrt[2]), 1/Sqrt[2]},
                                  {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                 }
                                ]
                               },
                               ImageSize -> 6,
                               BaselinePosition -> Scaled[-0.15]
                              ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, All, Keys},
                              "KeyDummy",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "File",
                                Style[
                                 "File",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, All, "File"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, All, "File"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style["\[ThinSpace]+\[ThinSpace]", GrayLevel[0.6]],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                EventHandler[
                                 MouseAppearance[
                                  Mouseover[
                                   "Hash",
                                   Style[
                                    "Hash",
                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                   ]
                                  ],
                                  "LinkHand"
                                 ],
                                 {"MouseClicked", 1} :>
                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                    {All, All, "Hash"},
                                    1
                                   ]
                                  ]
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {All, All, "Hash"},
                                 "ColumnHeader",
                                 True
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {All, All, "Hash"},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {All, All, "Hash"},
                             "ColumnHeader",
                             False
                            ],
                            "Mouse"
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Files",
                                Style[
                                 "Files",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Files"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{56.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             File["Kernel\\AddOne.wl"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 1, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 1, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 1, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 1, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          SpanFromAbove,
                          Item[
                           Pane[
                            Annotation[
                             File["Kernel\\MyPaclet.wl"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 2, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 2, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 2, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 2, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          SpanFromAbove,
                          Item[
                           Pane[
                            Annotation[
                             File[
                              "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 3, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "bc4ec7277b1f6135d154a02e86a7e48ff1a6cc6d1876a2b3b525adf02871a541",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 3, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 3, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 3, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          SpanFromAbove,
                          Item[
                           Pane[
                            Annotation[
                             File[
                              "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 4, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "ba154d5b06184d7edb1653dbe5abdd4cc99e72a6ba94e78bfca58cb5a2c2565e",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 4, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 4, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 4, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          SpanFromAbove,
                          Item[
                           Pane[
                            Annotation[
                             File["LICENSE"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 5, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 5, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 5, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 5, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         }
                        },
                        BaseStyle -> {
                         ContextMenu ->
                          Dynamic[
                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                           Which[
                            UnsameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                             TypeSystem`NestedGrid`PackagePrivate`localHold[
                              TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                             ]
                            ],
                            { },
                            SameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                             TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                            True,
                            
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                             Block[
                              {
                               TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                               }
                              },
                              With[
                               {
                                TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                 And[
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                   Alternatives["RowHeader", "ColumnHeader"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                   "SortDirections"
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                 Not[
                                  FailureQ[
                                   TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ]
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                 Not[
                                  FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                 ]
                               },
                               Join[
                                {
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Show ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "remove"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                   And[
                                    TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                   ]
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Hide ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "add"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 Delimiter
                                },
                                If[ And[
                                  TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                   Alternatives["ColumnHeader", "KeyDummy"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                  Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                 ],
                                 {
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Ascending"
                                   ],
                                   MenuItem[
                                    "Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Ascending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Descending"
                                   ],
                                   MenuItem[
                                    "Reverse Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Descending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    None
                                   ],
                                   MenuItem[
                                    "Unsort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      None
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  Delimiter
                                 },
                                 { }
                                ],
                                {
                                 MenuItem[
                                  "Copy Position to Clipboard",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`copyClip
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Copy Data to Clipboard",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`copyClip
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ],
                                 Delimiter,
                                 MenuItem[
                                  "Paste Position in New Cell",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Paste Data in New Cell",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ]
                                }
                               ]
                              ]
                             ]
                           ]
                          ],
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        },
                        Dividers -> All,
                        FrameStyle -> GrayLevel[0.74902],
                        Spacings -> {0, 0},
                        Alignment -> Left,
                        BaseStyle -> {
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        }
                       ],
                       LineBreakWithin -> False,
                       ContextMenu -> { },
                       NumberMarks -> False,
                       ShowAutoStyles -> False
                      ]
                     ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                         TypeSystem`NestedGrid`PackagePrivate`datasetData[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$
                         ]
                       },
                       
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                          TypeSystem`NestedGrid`PackagePrivate`tmpData$
                         ]
                        ];

                       If[ Not[
                         FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                        ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                      ]
                     ];

                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                     ]
                    ],
                    TrackedSymbols :> {
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                    }
                   ],
                   DynamicModuleValues :> { }
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     TypeSystem`NestedGrid`PackagePrivate`updateState[
                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                  Style[
                   Framed[
                    Dynamic[
                     Replace[
                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                      {
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Null,
                        Blank[]
                       ] -> "",
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`pathType$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                         Blank[]
                        ]
                       ] :>
                        (
                        Increment[
                         TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                        ];

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                         TypeSystem`NestedGrid`PackagePrivate`path$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                         TypeSystem`NestedGrid`PackagePrivate`pathType$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                         ];

                        TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         TypeSystem`NestedGrid`PackagePrivate`makePathElements
                        ]),
                       Null :> Spacer[10],
                       Blank[] :> Spacer[10]
                      }
                     ],
                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                    ],
                    FrameStyle -> None,
                    ImageMargins -> 0,
                    FrameMargins -> 0,
                    Alignment -> Top,
                    ImageSize -> {Automatic, 15}
                   ],
                   FontSize -> 1
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  Null
                },
                DynamicWrapperBox[
                 DynamicBox[
                  ToBoxes[
                   Dataset`DatasetContent[
                    2,
                    "Path" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                    "Grid" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                    "State" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                    "VPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                    "HPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                    "TopBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                    "BottomBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                    "OutputID" ->
                     Hold[
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {463.0, {91.854, 97.146}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  MouseAnnotation[],
                 ImageSizeCache -> {463.0, {91.854, 97.146}}
                ],
                BaseStyle -> {LineBreakWithin -> False},
                DynamicModuleValues :> { },
                Initialization :>
                 (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                  CreateUUID[]),
                UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
               ],
               Deploy,
               DefaultBaseStyle -> "Deploy"
              ],
              Dataset`InterpretDataset[1],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 435943480
           ]
          },
          Open
         ]
        ],
        Cell[
         "Compare to building without the definition notebook:",
         "ExampleText",
         CellID -> 157732336
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "pt`PacletBuild",
                 "[",
                 RowBox[{"ExampleDirectory", "[", "\"FewIssues\"", "]"}],
                 "]"
                }
               ],
               "[",
               "\"PacletManifest\"",
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 494279474
           ],
           Cell[
            BoxData[
             TagBox[
              TagBox[
               DynamicModuleBox[
                {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                  "InitialData" -> <|
                   "Files" -> {
                    <|
                     "File" -> File["Kernel\\AddOne.wl"],
                     "Hash" -> "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9"
                    |>,
                    <|
                     "File" -> File["Kernel\\AddTwo.wl"],
                     "Hash" -> "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364"
                    |>,
                    <|
                     "File" -> File["Kernel\\MyPaclet.wl"],
                     "Hash" -> "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                      ],
                     "Hash" -> "350537cead137295a8af9e3567f48a58283f914c95f36036ca5032e049de5fbd"
                    |>,
                    <|
                     "File" ->
                      File[
                       "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                      ],
                     "Hash" -> "0c64f80d46764659aac0821e21feeb9a60ebc4f958d9b7a19086dc5a8016e0d7"
                    |>,
                    <|
                     "File" -> File["LICENSE"],
                     "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                    |>
                   }
                  |>,
                  "AllowEmbedding" -> True,
                  "InitialShape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, All, TypeSystem`PackageScope`KeyDummy[8]} -> 1,
                     {All, All, "File"} -> 1,
                     {All, All, "Hash"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`KeyValueShape[
                       TypeSystem`PackageScope`AtomShape[56.0],
                       TypeSystem`PackageScope`Limited[
                        TypeSystem`PackageScope`ColumnShape[
                         TypeSystem`PackageScope`Limited[
                          TypeSystem`PackageScope`RowShape[
                           <|
                            "File" -> TypeSystem`PackageScope`AtomShape[60],
                            "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                           |>
                          ],
                          Infinity,
                          2,
                          {All, All}
                         ]
                        ],
                        6,
                        Infinity,
                        {All}
                       ]
                      ]
                     ],
                     1,
                     Infinity,
                     { }
                    ]
                   ],
                  "InitialType" ->
                   TypeSystem`Assoc[
                    TypeSystem`Atom[String],
                    TypeSystem`Vector[
                     TypeSystem`Struct[
                      {"File", "Hash"},
                      {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                     ],
                     6
                    ],
                    1
                   ],
                  "Meta" -> Association[HiddenItems -> {{All, All, "Hash"} -> True}],
                  "RowTarget" -> 20,
                  "ColumnTarget" -> 10,
                  "Shape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, All, TypeSystem`PackageScope`KeyDummy[8]} -> 1,
                     {All, All, "File"} -> 1,
                     {All, All, "Hash"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`KeyValueShape[
                       TypeSystem`PackageScope`AtomShape[56.0],
                       TypeSystem`PackageScope`Limited[
                        TypeSystem`PackageScope`ColumnShape[
                         TypeSystem`PackageScope`Limited[
                          TypeSystem`PackageScope`RowShape[
                           <|
                            "File" -> TypeSystem`PackageScope`AtomShape[60],
                            "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                           |>
                          ],
                          Infinity,
                          2,
                          {All, All}
                         ]
                        ],
                        6,
                        Infinity,
                        {All}
                       ]
                      ]
                     ],
                     1,
                     Infinity,
                     { }
                    ]
                   ],
                  "Type" ->
                   TypeSystem`Assoc[
                    TypeSystem`Atom[String],
                    TypeSystem`Vector[
                     TypeSystem`Struct[
                      {"File", "Hash"},
                      {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                     ],
                     6
                    ],
                    1
                   ],
                  "Path" -> { },
                  "DisplayedRowCount" -> 1,
                  "DisplayedColumnCount" -> 2,
                  "DataRowCount" -> 1,
                  "DataColumnCount" -> 2,
                  "SortPaths" -> { },
                  "SortDirections" -> { },
                  "HiddenItemsMap" -> <|
                   "Files" -> {
                    Association["File" -> False, "Hash" -> True],
                    Association["File" -> False, "Hash" -> True],
                    Association["File" -> False, "Hash" -> True],
                    Association["File" -> False, "Hash" -> True],
                    Association["File" -> False, "Hash" -> True],
                    Association["File" -> False, "Hash" -> True]
                   }
                  |>,
                  "UpdateType" -> 1
                 |>,
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                 TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                  DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                     Deploy[
                      Style[
                       Grid[
                        {
                         {
                          Item[
                           Pane[
                            Annotation[
                             Mouseover[
                              Graphics[
                               { },
                               ImageSize -> 6,
                               BaselinePosition -> Scaled[-0.15]
                              ],
                              Graphics[
                               {
                                GrayLevel[0.6],
                                Polygon[
                                 {
                                  {1/Sqrt[2], -(1/Sqrt[2])},
                                  {1/Sqrt[2], 1/Sqrt[2]},
                                  {-(1/Sqrt[2]), 1/Sqrt[2]},
                                  {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                 }
                                ]
                               },
                               ImageSize -> 6,
                               BaselinePosition -> Scaled[-0.15]
                              ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, All, Keys},
                              "KeyDummy",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "File",
                                Style[
                                 "File",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, All, "File"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, All, "File"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style["\[ThinSpace]+\[ThinSpace]", GrayLevel[0.6]],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                EventHandler[
                                 MouseAppearance[
                                  Mouseover[
                                   "Hash",
                                   Style[
                                    "Hash",
                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                   ]
                                  ],
                                  "LinkHand"
                                 ],
                                 {"MouseClicked", 1} :>
                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                    {All, All, "Hash"},
                                    1
                                   ]
                                  ]
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {All, All, "Hash"},
                                 "ColumnHeader",
                                 True
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {All, All, "Hash"},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {All, All, "Hash"},
                             "ColumnHeader",
                             False
                            ],
                            "Mouse"
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Files",
                                Style[
                                 "Files",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Files"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{56.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             File["Kernel\\AddOne.wl"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 1, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "5a6f32a2d63f0a3f2ec48500355809a80e704577852399706cdadb4f9adf15c9",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 1, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 1, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 1, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          SpanFromAbove,
                          Item[
                           Pane[
                            Annotation[
                             File["Kernel\\AddTwo.wl"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 2, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "9e7c5a43224e4487eb419b14f4eff776e323386ea786972fffc57dcb5266b364",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 2, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 2, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 2, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          SpanFromAbove,
                          Item[
                           Pane[
                            Annotation[
                             File["Kernel\\MyPaclet.wl"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 3, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "33e2ffdfae12de43330db51398972c226b78acd9e736b63c290b885927f00e31",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 3, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 3, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 3, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          SpanFromAbove,
                          Item[
                           Pane[
                            Annotation[
                             File[
                              "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 4, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "350537cead137295a8af9e3567f48a58283f914c95f36036ca5032e049de5fbd",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 4, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 4, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 4, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          SpanFromAbove,
                          Item[
                           Pane[
                            Annotation[
                             File[
                              "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 5, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "0c64f80d46764659aac0821e21feeb9a60ebc4f958d9b7a19086dc5a8016e0d7",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 5, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 5, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 5, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          SpanFromAbove,
                          Item[
                           Pane[
                            Annotation[
                             File["LICENSE"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Files"], 6, Key["File"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Annotation[
                            Pane[
                             Button[
                              Tooltip[
                               Mouseover[
                                Style[
                                 "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]",
                                 GrayLevel[0.6]
                                ],
                                Style[
                                 "\[ThinSpace]+\[ThinSpace]",
                                 RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               Annotation[
                                "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70",
                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                 {Key["Files"], 6, Key["Hash"]},
                                 "Item",
                                 False
                                ],
                                "Mouse"
                               ]
                              ],
                              TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                               {Key["Files"], 6, Key["Hash"]},
                               "remove"
                              ],
                              Appearance -> None,
                              BaseStyle -> None
                             ],
                             ImageSize -> {{5, Full}, Automatic},
                             ImageMargins -> {{3, 2}, {0, 0}}
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                             {Key["Files"], 6, Key["Hash"]},
                             "Item",
                             False
                            ],
                            "Mouse"
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         }
                        },
                        BaseStyle -> {
                         ContextMenu ->
                          Dynamic[
                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                           Which[
                            UnsameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                             TypeSystem`NestedGrid`PackagePrivate`localHold[
                              TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                             ]
                            ],
                            { },
                            SameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                             TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                            True,
                            
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                             Block[
                              {
                               TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                               }
                              },
                              With[
                               {
                                TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                 And[
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                   Alternatives["RowHeader", "ColumnHeader"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                   "SortDirections"
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                 Not[
                                  FailureQ[
                                   TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ]
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                 Not[
                                  FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                 ]
                               },
                               Join[
                                {
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Show ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "remove"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                   And[
                                    TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                   ]
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Hide ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "add"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 Delimiter
                                },
                                If[ And[
                                  TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                   Alternatives["ColumnHeader", "KeyDummy"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                  Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                 ],
                                 {
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Ascending"
                                   ],
                                   MenuItem[
                                    "Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Ascending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Descending"
                                   ],
                                   MenuItem[
                                    "Reverse Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Descending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    None
                                   ],
                                   MenuItem[
                                    "Unsort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      None
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  Delimiter
                                 },
                                 { }
                                ],
                                {
                                 MenuItem[
                                  "Copy Position to Clipboard",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`copyClip
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Copy Data to Clipboard",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`copyClip
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ],
                                 Delimiter,
                                 MenuItem[
                                  "Paste Position in New Cell",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Paste Data in New Cell",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ]
                                }
                               ]
                              ]
                             ]
                           ]
                          ],
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        },
                        Dividers -> All,
                        FrameStyle -> GrayLevel[0.74902],
                        Spacings -> {0, 0},
                        Alignment -> Left,
                        BaseStyle -> {
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        }
                       ],
                       LineBreakWithin -> False,
                       ContextMenu -> { },
                       NumberMarks -> False,
                       ShowAutoStyles -> False
                      ]
                     ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                         TypeSystem`NestedGrid`PackagePrivate`datasetData[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$
                         ]
                       },
                       
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                          TypeSystem`NestedGrid`PackagePrivate`tmpData$
                         ]
                        ];

                       If[ Not[
                         FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                        ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                      ]
                     ];

                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                     ]
                    ],
                    TrackedSymbols :> {
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                    }
                   ],
                   DynamicModuleValues :> { }
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     TypeSystem`NestedGrid`PackagePrivate`updateState[
                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                  Style[
                   Framed[
                    Dynamic[
                     Replace[
                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                      {
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Null,
                        Blank[]
                       ] -> "",
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`pathType$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                         Blank[]
                        ]
                       ] :>
                        (
                        Increment[
                         TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                        ];

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                         TypeSystem`NestedGrid`PackagePrivate`path$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                         TypeSystem`NestedGrid`PackagePrivate`pathType$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                         ];

                        TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         TypeSystem`NestedGrid`PackagePrivate`makePathElements
                        ]),
                       Null :> Spacer[10],
                       Blank[] :> Spacer[10]
                      }
                     ],
                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                    ],
                    FrameStyle -> None,
                    ImageMargins -> 0,
                    FrameMargins -> 0,
                    Alignment -> Top,
                    ImageSize -> {Automatic, 15}
                   ],
                   FontSize -> 1
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  Null
                },
                DynamicWrapperBox[
                 DynamicBox[
                  ToBoxes[
                   Dataset`DatasetContent[
                    2,
                    "Path" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                    "Grid" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                    "State" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                    "VPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                    "HPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                    "TopBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                    "BottomBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                    "OutputID" ->
                     Hold[
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {463.0, {106.35, 111.65}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  MouseAnnotation[],
                 ImageSizeCache -> {463.0, {106.35, 111.65}}
                ],
                BaseStyle -> {LineBreakWithin -> False},
                DynamicModuleValues :> { },
                Initialization :>
                 (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                  CreateUUID[]),
                UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
               ],
               Deploy,
               DefaultBaseStyle -> "Deploy"
              ],
              Dataset`InterpretDataset[1],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[0]=",
            CellID -> 140068604
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Possible Issues", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 710886752
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Interactive Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 76698383
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Neat Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 229624556
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell["Metadata", "MetadataSection", CellID -> 247090787],
     Cell[
      TextData[
       {
        "New in: ",
        Cell["", "HistoryData", CellTags -> "New"],
        " | Modified in: ",
        Cell[" ", "HistoryData", CellTags -> "Modified"],
        " | Obsolete in: ",
        Cell[" ", "HistoryData", CellTags -> "Obsolete"]
       }
      ],
      "History",
      CellID -> 291267017
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Categorization",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Metadata",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "Metadata such as page URI, context, and type of documentation page.",
                   "MoreInfoText"
                  ],
                  BaseStyle -> "IFrameBox"
                 ]
                ],
                "MoreInfoTextOuter"
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "CategorizationSection",
         CellID -> 194433104
        ],
        Cell[
         "Symbol",
         "Categorization",
         CellLabel -> "Entity Type",
         CellID -> 260136114
        ],
        Cell[
         "Wolfram/PacletCICD",
         "Categorization",
         CellLabel -> "Paclet Name",
         CellID -> 339809992
        ],
        Cell[
         "Wolfram`PacletCICD`",
         "Categorization",
         CellLabel -> "Context",
         CellID -> 568899056
        ],
        Cell[
         "Wolfram/PacletCICD/ref/BuildPaclet",
         "Categorization",
         CellLabel -> "URI",
         CellID -> 281625639
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell["Keywords", "KeywordsSection", CellID -> 334967452],
        Cell["XXXX", "Keywords", CellID -> 112379755]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Syntax Templates",
         "TemplatesSection",
         CellID -> 137518001
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Additional Function Template",
         CellID -> 173870313
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Arguments Pattern",
         CellID -> 46565389
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Local Variables",
         CellID -> 313042118
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Color Equal Signs",
         CellID -> 223536884
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ]
 },
 WindowStatusArea -> Automatic,
 TaggingRules -> <|
  "InformationPopupMenuItemAdded" -> True,
  "Paclet" -> "Wolfram/PacletCICD",
  "NotebookIndexQ" -> True,
  "NotebookLastIndexed" ->
   DateObject[
    {2022, 8, 8, 8, 21, 57.662},
    "Instant",
    "Gregorian",
    -4.0
   ],
  "NotebookUUID" -> "194ae1c5-9ea2-4080-a831-eb062d86a9b8"
 |>,
 FrontEndVersion -> "13.2 for Microsoft Windows (64-bit) (August 6, 2022)",
 StyleDefinitions ->
  FrontEnd`FileName[
   {"Wolfram"},
   "FunctionPageStylesExt.nb",
   CharacterEncoding -> "UTF-8"
  ]
]