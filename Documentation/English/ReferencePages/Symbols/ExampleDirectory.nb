(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   CellGroupData[
    {
     Cell["ExampleDirectory", "ObjectName", CellID -> 440013644],
     Cell[
      TextData[
       {
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "ExampleDirectory",
             BaseStyle -> "Link",
             ButtonData -> "paclet:Wolfram/PacletCICD/ref/ExampleDirectory"
            ],
            "[",
            "\"\!\(\*StyleBox[\"name\", \"TI\"]\)\"",
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        " \[LineSeparator]gives a directory containing an example Paclet.\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "ExampleDirectory",
             BaseStyle -> "Link",
             ButtonData -> "paclet:Wolfram/PacletCICD/ref/ExampleDirectory"
            ],
            "[",
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]gives all available example directory names.\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "ExampleDirectory",
             BaseStyle -> "Link",
             ButtonData -> "paclet:Wolfram/PacletCICD/ref/ExampleDirectory"
            ],
            "[",
            ButtonBox["All", BaseStyle -> "Link"],
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]gives all available example directories."
       }
      ],
      "Usage",
      CellID -> 108247565
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Tech Notes",
        Cell[
         BoxData[
          TemplateBox[
           {
            "TechNotes",
            Cell[
             BoxData[
              FrameBox[
               Cell["Insert links to related tech notes.", "MoreInfoText"],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "TechNotesSection",
      CellID -> 429378331
     ],
     Cell["XXXX", "Tutorials", CellID -> 32444883]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Related Links",
        Cell[
         BoxData[
          TemplateBox[
           {
            "RelatedLinks",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related page, including web pages.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "RelatedLinksSection",
      CellID -> 125882563
     ],
     Cell["XXXX", "RelatedLinks", CellID -> 334398216]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "See Also",
        Cell[
         BoxData[
          TemplateBox[
           {
            "SeeAlso",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related reference (function) pages. Type a space, a period and then another space between function names. Then click the palette's Inline Listing Toggle button.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "SeeAlsoSection",
      CellID -> 193225470
     ],
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          "$ExamplesLocation",
          BaseStyle -> "Link",
          ButtonData -> "paclet:Wolfram/PacletCICD/ref/$ExamplesLocation"
         ]
        ],
        "InlineFormula"
       ]
      ],
      "SeeAlso",
      CellID -> 110492049
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Related Guides",
      "MoreAboutSection",
      CellID -> 263569330
     ],
     Cell[
      TextData[
       ButtonBox[
        "Workflows",
        BaseStyle -> "Link",
        ButtonData -> "paclet:Wolfram/PacletCICD/guide/Workflows"
       ]
      ],
      "MoreAbout",
      CellID -> 59394675
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Examples Initialization",
        Cell[
         BoxData[
          TemplateBox[
           {
            "ExamplesInitialization",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Input that is to be evaluated before any examples are run, e.g. Needs[\[Ellipsis]].",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExamplesInitializationSection",
      CellID -> 462645252
     ],
     Cell[
      BoxData[
       RowBox[{"Needs", "[", "\"Wolfram`PacletCICD`\"", "]"}]
      ],
      "ExampleInitialization",
      CellID -> 9225029
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[
       InterpretationBox[
        GridBox[
         {
          {
           StyleBox[
            RowBox[{"Basic", " ", "Examples"}],
            "PrimaryExamplesSection"
           ],
           ButtonBox[
            RowBox[
             {
              RowBox[{"More", " ", "Examples"}],
              " ",
              "\[RightTriangle]"
             }
            ],
            BaseStyle -> "ExtendedExamplesLink",
            ButtonData :> "ExtendedExamples"
           ]
          }
         }
        ],
        $Line = 0;
       ]
      ],
      "PrimaryExamplesSection",
      CellID -> 330435858
     ],
     Cell[
      BoxData[
       RowBox[
        {RowBox[{"$PublisherID", "=", "\"SamplePublisher\""}], ";"}
       ]
      ],
      "Input",
      "FutureExample",
      CellDingbat ->
       Cell[
        BoxData[
         TooltipBox[
          Cell["rhennigan      ", "TentativeID"],
          "2022-02-21"
         ]
        ],
        "TentativeWrapper"
       ],
      InitializationCell -> True,
      CellLabel -> "In[1]:=",
      CellID -> 997816569
     ],
     Cell[
      "Load the PacletCICD package:",
      "ExampleText",
      CellID -> 349985564
     ],
     Cell[
      BoxData[
       RowBox[
        {
         RowBox[{"Needs", "[", "\"Wolfram`PacletCICD`\"", "]"}],
         ";"
        }
       ]
      ],
      "Input",
      CellProlog :> ($Line = 0),
      InitializationCell -> True,
      CellLabel -> "In[2]:=",
      CellID -> 222115023
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 107573276
        ],
        Cell[
         "Get an example paclet directory:",
         "ExampleText",
         CellID -> 180004050
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[{"ExampleDirectory", "[", "\"Sample\"", "]"}]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 10848978
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "File",
               "[",
               TemplateBox[
                {
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\""
                },
                "FileArgument"
               ],
               "]"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 222664317
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 158288702
        ],
        Cell[
         "Get a list of example names:",
         "ExampleText",
         CellID -> 170172498
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"ExampleDirectory", "[", "]"}]],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 642903748
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 "\"AdvancedSample\"",
                 ",",
                 "\"CompiledLibrary\"",
                 ",",
                 "\"FewIssues\"",
                 ",",
                 "\"MoreIssues\"",
                 ",",
                 "\"Sample\""
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 648534953
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 613793455
        ],
        Cell[
         "Get all available example directories:",
         "ExampleText",
         CellID -> 54344518
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"ExampleDirectory", "[", "All", "]"}]],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 899285234
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "File",
                   "[",
                   TemplateBox[
                    {
                     "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/AdvancedSample\""
                    },
                    "FileArgument"
                   ],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "File",
                   "[",
                   TemplateBox[
                    {
                     "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/CompiledLibrary\""
                    },
                    "FileArgument"
                   ],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "File",
                   "[",
                   TemplateBox[
                    {
                     "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues\""
                    },
                    "FileArgument"
                   ],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "File",
                   "[",
                   TemplateBox[
                    {
                     "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues\""
                    },
                    "FileArgument"
                   ],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "File",
                   "[",
                   TemplateBox[
                    {
                     "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\""
                    },
                    "FileArgument"
                   ],
                   "]"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 2305719
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "More Examples",
        Cell[
         BoxData[
          TemplateBox[
           {
            "MoreExamples",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Extended examples in standardized sections.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExtendedExamplesSection",
      CellTags -> "ExtendedExamples",
      CellID -> 55686900
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Scope", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 71835673
        ],
        Cell[
         "See the contents of an example directory:",
         "ExampleText",
         CellID -> 89398127
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "dir",
               "=",
               RowBox[{"ExampleDirectory", "[", "\"Sample\"", "]"}]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 539611881
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "File",
               "[",
               TemplateBox[
                {
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\""
                },
                "FileArgument"
               ],
               "]"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 241189953
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 RowBox[
                  {
                   RowBox[
                    {
                     RowBox[{"ResourceFunction", "[", "\"RelativePath\"", "]"}],
                     "[",
                     RowBox[{"dir", ",", "#"}],
                     "]"
                    }
                   ],
                   "&"
                  }
                 ],
                 "/@",
                 RowBox[
                  {
                   "FileNames",
                   "[",
                   RowBox[{"All", ",", "dir", ",", "Infinity"}],
                   "]"
                  }
                 ]
                }
               ],
               "//",
               "Column"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 15263651
           ],
           Cell[
            BoxData[
             TagBox[
              GridBox[
               {
                {"\"Documentation\""},
                {"\"Documentation\\\\English\""},
                {"\"Documentation\\\\English\\\\ReferencePages\""},
                {
                 "\"Documentation\\\\English\\\\ReferencePages\\\\Symbols\""
                },
                {
                 "\"Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\""
                },
                {
                 "\"Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddTwo.nb\""
                },
                {"\"Kernel\""},
                {"\"Kernel\\\\AddOne.wl\""},
                {"\"Kernel\\\\AddTwo.wl\""},
                {"\"Kernel\\\\SamplePaclet.wl\""},
                {"\"LICENSE\""},
                {"\"PacletInfo.wl\""},
                {"\"README.md\""},
                {"\"ResourceDefinition.nb\""},
                {"\"Tests\""},
                {"\"Tests\\\\AddOne.wlt\""},
                {"\"Tests\\\\AddTwo.wlt\""}
               },
               DefaultBaseStyle -> "Column",
               GridBoxAlignment -> {"Columns" -> {{Left}}},
               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
              ],
              "Column"
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 646023725
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Generalizations & Extensions", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 82409613
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Options", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 198083452
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 701874873
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 163647238
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Applications", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 34786160
        ],
        Cell[
         "Check an example paclet for issues:",
         "ExampleText",
         CellID -> 678623753
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "CheckPaclet",
               "[",
               RowBox[{"ExampleDirectory", "[", "\"FewIssues\"", "]"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 65917847
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                "\"\"",
                "\[InvisibleSpace]",
                InterpretationBox[
                 RowBox[
                  {
                   FrameBox[
                    TagBox[
                     TooltipBox[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        {
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                         FilledCurveBox[
                          {
                           {
                            {1, 4, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3}
                           }
                          },
                          CompressedData[
                           "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                          ]
                         ]
                        },
                        {
                         FaceForm[RGBColor[1.0, 1.0, 1.0]],
                         FilledCurveBox[
                          {
                           {
                            {0, 2, 0},
                            {0, 1, 0},
                            {0, 1, 0},
                            {0, 1, 0},
                            {0, 1, 0},
                            {0, 1, 0}
                           },
                           {
                            {1, 4, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3}
                           }
                          },
                          {
                           {
                            {8.1753, 7.4169},
                            {7.7969, 11.308},
                            {7.7969, 13.38},
                            {10.12, 13.38},
                            {10.12, 11.308},
                            {9.7415, 7.4169},
                            {8.1753, 7.4169}
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                           ]
                          }
                         ]
                        }
                       },
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1],
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}}
                      ],
                      "\"Suggestion\"",
                      TooltipStyle -> "TextStyling"
                     ],
                     Annotation[#1, "Suggestion", "Tooltip"] &
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    FrameMargins -> {{1, 1}, {0, 0}},
                    FrameStyle -> None,
                    RoundingRadius -> 8,
                    StripOnInput -> False
                   ],
                   "\[InvisibleSpace]",
                   "\" \""
                  }
                 ],
                 SequenceForm[
                  Framed[
                   Tooltip[
                    RawBoxes[
                     GraphicsBox[
                      {
                       Thickness[0.055556],
                       StyleBox[
                        {
                         FilledCurveBox[
                          {
                           {
                            {1, 4, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3}
                           }
                          },
                          CompressedData[
                           "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                          ]
                         ]
                        },
                        FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                       ],
                       StyleBox[
                        {
                         FilledCurveBox[
                          {
                           {
                            {0, 2, 0},
                            {0, 1, 0},
                            {0, 1, 0},
                            {0, 1, 0},
                            {0, 1, 0},
                            {0, 1, 0}
                           },
                           {
                            {1, 4, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3},
                            {1, 3, 3}
                           }
                          },
                          {
                           {
                            {8.1753, 7.4169},
                            {7.7969, 11.308},
                            {7.7969, 13.38},
                            {10.12, 13.38},
                            {10.12, 11.308},
                            {9.7415, 7.4169},
                            {8.1753, 7.4169}
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                           ]
                          }
                         ]
                        },
                        FaceForm[RGBColor[1.0, 1.0, 1.0]]
                       ]
                      },
                      ImageSize ->
                       Dynamic[
                        {
                         Automatic,
                         Times[
                          1.75,
                          Times[
                           CurrentValue["FontCapHeight"],
                           AbsoluteCurrentValue[Magnification]^(-1)
                          ]
                         ]
                        }
                       ],
                      PlotRange -> {{0, 18}, {0, 17}},
                      AspectRatio -> Automatic,
                      BaselinePosition -> Scaled[0.1]
                     ]
                    ],
                    "Suggestion"
                   ],
                   Background -> RGBColor[0.91372, 0.91372, 0.91372],
                   RoundingRadius -> 8,
                   FrameStyle -> None,
                   FrameMargins -> {{1, 1}, {0, 0}}
                  ],
                  " "
                 ],
                 Editable -> False
                ],
                "\[InvisibleSpace]",
                TemplateBox[
                 {
                  "\"The description should usually not end with punctuation\"",
                  "\" \"",
                  ButtonBox[
                   TagBox[
                    StyleBox[
                     TemplateBox[
                      {
                       "\"(\"",
                       "\"DescriptionEndsInPunctuation\"",
                       "\":\"",
                       "120063846",
                       "\")\""
                      },
                      "RowDefault"
                     ],
                     "Hyperlink",
                     FontSize -> 0.85 * Inherited,
                     StripOnInput -> False
                    ],
                    MouseAppearanceTag["LinkHand"]
                   ],
                   ButtonFunction :>
                    (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                    DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                     File[
                      "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues/ResourceDefinition.nb"
                     ],
                     <|
                      "CellID" -> 120063846,
                      "Level" -> "Suggestion",
                      "Tag" -> "DescriptionEndsInPunctuation",
                      "Parameters" -> { }
                     |>
                    ]),
                   Appearance -> None,
                   BaseStyle -> None,
                   Method -> "Queued",
                   Evaluator -> Automatic
                  ]
                 },
                 "RowDefault"
                ]
               }
              ],
              SequenceForm[
               "",
               SequenceForm[
                Framed[
                 Tooltip[
                  RawBoxes[
                   GraphicsBox[
                    {
                     Thickness[0.055556],
                     StyleBox[
                      {
                       FilledCurveBox[
                        {
                         {
                          {1, 4, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3}
                         }
                        },
                        CompressedData[
                         "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                        ]
                       ]
                      },
                      FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                     ],
                     StyleBox[
                      {
                       FilledCurveBox[
                        {
                         {
                          {0, 2, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0}
                         },
                         {
                          {1, 4, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3},
                          {1, 3, 3}
                         }
                        },
                        {
                         {
                          {8.1753, 7.4169},
                          {7.7969, 11.308},
                          {7.7969, 13.38},
                          {10.12, 13.38},
                          {10.12, 11.308},
                          {9.7415, 7.4169},
                          {8.1753, 7.4169}
                         },
                         CompressedData[
                          "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                         ]
                        }
                       ]
                      },
                      FaceForm[RGBColor[1.0, 1.0, 1.0]]
                     ]
                    },
                    ImageSize ->
                     Dynamic[
                      {
                       Automatic,
                       Times[
                        1.75,
                        Times[
                         CurrentValue["FontCapHeight"],
                         AbsoluteCurrentValue[Magnification]^(-1)
                        ]
                       ]
                      }
                     ],
                    PlotRange -> {{0, 18}, {0, 17}},
                    AspectRatio -> Automatic,
                    BaselinePosition -> Scaled[0.1]
                   ]
                  ],
                  "Suggestion"
                 ],
                 Background -> RGBColor[0.91372, 0.91372, 0.91372],
                 RoundingRadius -> 8,
                 FrameStyle -> None,
                 FrameMargins -> {{1, 1}, {0, 0}}
                ],
                " "
               ],
               Row[
                {
                 "The description should usually not end with punctuation",
                 " ",
                 Button[
                  MouseAppearance[
                   Style[
                    Row[
                     {"(", "DescriptionEndsInPunctuation", ":", 120063846, ")"}
                    ],
                    "Hyperlink",
                    FontSize -> 0.85 * Inherited
                   ],
                   "LinkHand"
                  ],
                  DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                  DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                   File[
                    "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/FewIssues/ResourceDefinition.nb"
                   ],
                   <|
                    "CellID" -> 120063846,
                    "Level" -> "Suggestion",
                    "Tag" -> "DescriptionEndsInPunctuation",
                    "Parameters" -> { }
                   |>
                  ],
                  Appearance -> None,
                  BaseStyle -> None,
                  Method -> "Queued"
                 ]
                }
               ]
              ],
              Editable -> False
             ]
            ],
            "Print",
            CellLabel -> "During evaluation of In[1]:=",
            CellID -> 285434657
           ],
           Cell[
            BoxData[
             TagBox[
              TagBox[
               DynamicModuleBox[
                {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                  "InitialData" -> {
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "The description should usually not end with punctuation",
                    "Tag" -> "DescriptionEndsInPunctuation",
                    "CellID" -> 120063846
                   |>
                  },
                  "AllowEmbedding" -> True,
                  "InitialShape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, "Level"} -> 1,
                     {All, "Message"} -> 1,
                     {All, "Tag"} -> 1,
                     {All, "CellID"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`Limited[
                       TypeSystem`PackageScope`RowShape[
                        <|
                         "Level" -> TypeSystem`PackageScope`AtomShape[112.0],
                         "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                         "Tag" -> TypeSystem`PackageScope`AtomShape[313.6],
                         "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                        |>
                       ],
                       Infinity,
                       4,
                       {All}
                      ]
                     ],
                     1,
                     Infinity,
                     { }
                    ]
                   ],
                  "InitialType" ->
                   TypeSystem`Vector[
                    TypeSystem`Struct[
                     {"Level", "Message", "Tag", "CellID"},
                     {
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[Integer]
                     }
                    ],
                    1
                   ],
                  "Meta" -> <| |>,
                  "RowTarget" -> 20,
                  "ColumnTarget" -> 10,
                  "Shape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, "Level"} -> 1,
                     {All, "Message"} -> 1,
                     {All, "Tag"} -> 1,
                     {All, "CellID"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`Limited[
                       TypeSystem`PackageScope`RowShape[
                        <|
                         "Level" -> TypeSystem`PackageScope`AtomShape[112.0],
                         "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                         "Tag" -> TypeSystem`PackageScope`AtomShape[313.6],
                         "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                        |>
                       ],
                       Infinity,
                       4,
                       {All}
                      ]
                     ],
                     1,
                     Infinity,
                     { }
                    ]
                   ],
                  "Type" ->
                   TypeSystem`Vector[
                    TypeSystem`Struct[
                     {"Level", "Message", "Tag", "CellID"},
                     {
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[Integer]
                     }
                    ],
                    1
                   ],
                  "Path" -> { },
                  "DisplayedRowCount" -> 1,
                  "DisplayedColumnCount" -> 4,
                  "DataRowCount" -> 1,
                  "DataColumnCount" -> 4,
                  "SortPaths" -> { },
                  "SortDirections" -> { },
                  "HiddenItemsMap" -> Null,
                  "UpdateType" -> 1
                 |>,
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                 TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                  DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                     Deploy[
                      Style[
                       Grid[
                        {
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Level",
                                Style[
                                 "Level",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Level"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Level"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Message",
                                Style[
                                 "Message",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Message"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Message"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Tag",
                                Style[
                                 "Tag",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Tag"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Tag"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "CellID",
                                Style[
                                 "CellID",
                                 FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "CellID"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "CellID"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             "Suggestion",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {1, Key["Level"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{112.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "The description should usually not end with punctuation",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {1, Key["Message"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560.0, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "DescriptionEndsInPunctuation",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {1, Key["Tag"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{313.6, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["120063846"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {1, Key["CellID"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         }
                        },
                        BaseStyle -> {
                         ContextMenu ->
                          Dynamic[
                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                           Which[
                            UnsameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                             TypeSystem`NestedGrid`PackagePrivate`localHold[
                              TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                             ]
                            ],
                            { },
                            SameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                             TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                            True,
                            
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                             Block[
                              {
                               TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                               }
                              },
                              With[
                               {
                                TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                 And[
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                   Alternatives["RowHeader", "ColumnHeader"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                   "SortDirections"
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                 Not[
                                  FailureQ[
                                   TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ]
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                 Not[
                                  FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                 ]
                               },
                               Join[
                                {
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Show ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "remove"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                   And[
                                    TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                   ]
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Hide ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "add"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 Delimiter
                                },
                                If[ And[
                                  TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                   Alternatives["ColumnHeader", "KeyDummy"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                  Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                 ],
                                 {
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Ascending"
                                   ],
                                   MenuItem[
                                    "Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Ascending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Descending"
                                   ],
                                   MenuItem[
                                    "Reverse Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Descending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    None
                                   ],
                                   MenuItem[
                                    "Unsort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      None
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  Delimiter
                                 },
                                 { }
                                ],
                                {
                                 MenuItem[
                                  "Copy Position to Clipboard",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`copyClip
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Copy Data to Clipboard",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`copyClip
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ],
                                 Delimiter,
                                 MenuItem[
                                  "Paste Position in New Cell",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Paste Data in New Cell",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ]
                                }
                               ]
                              ]
                             ]
                           ]
                          ],
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        },
                        Dividers -> All,
                        FrameStyle -> GrayLevel[0.74902],
                        Spacings -> {0, 0},
                        Alignment -> Left,
                        BaseStyle -> {
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        }
                       ],
                       LineBreakWithin -> False,
                       ContextMenu -> { },
                       NumberMarks -> False,
                       ShowAutoStyles -> False
                      ]
                     ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                         TypeSystem`NestedGrid`PackagePrivate`datasetData[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$
                         ]
                       },
                       
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                          TypeSystem`NestedGrid`PackagePrivate`tmpData$
                         ]
                        ];

                       If[ Not[
                         FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                        ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                      ]
                     ];

                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                     ]
                    ],
                    TrackedSymbols :> {
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                    }
                   ],
                   DynamicModuleValues :> { }
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     TypeSystem`NestedGrid`PackagePrivate`updateState[
                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                  Style[
                   Framed[
                    Dynamic[
                     Replace[
                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                      {
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Null,
                        Blank[]
                       ] -> "",
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`pathType$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                         Blank[]
                        ]
                       ] :>
                        (
                        Increment[
                         TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                        ];

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                         TypeSystem`NestedGrid`PackagePrivate`path$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                         TypeSystem`NestedGrid`PackagePrivate`pathType$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                         ];

                        TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         TypeSystem`NestedGrid`PackagePrivate`makePathElements
                        ]),
                       Null :> Spacer[10],
                       Blank[] :> Spacer[10]
                      }
                     ],
                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                    ],
                    FrameStyle -> None,
                    ImageMargins -> 0,
                    FrameMargins -> 0,
                    Alignment -> Top,
                    ImageSize -> {Automatic, 15}
                   ],
                   FontSize -> 1
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  Null
                },
                DynamicWrapperBox[
                 DynamicBox[
                  ToBoxes[
                   Dataset`DatasetContent[
                    2,
                    "Path" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                    "Grid" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                    "State" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                    "VPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                    "HPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                    "TopBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                    "BottomBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                    "OutputID" ->
                     Hold[
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {0.0, {0.0, 0.0}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  MouseAnnotation[],
                 ImageSizeCache -> {0.0, {0.0, 0.0}}
                ],
                BaseStyle -> {LineBreakWithin -> False},
                DynamicModuleValues :> { },
                Initialization :>
                 (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                  CreateUUID[]),
                UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
               ],
               Deploy,
               DefaultBaseStyle -> "Deploy"
              ],
              Dataset`InterpretDataset[1],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 390049908
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "CheckPaclet",
               "[",
               RowBox[{"ExampleDirectory", "[", "\"MoreIssues\"", "]"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 255577798
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.96471, 0.16863, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Error\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Error", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.80784, 0.80392],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Error"
                      ],
                      Background -> RGBColor[1.0, 0.80784, 0.80392],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"CodeInspect found 1 fatal error\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"CodeInspectionIssues\"",
                          "\":\"",
                          "57873694",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 57873694,
                         "Level" -> "Error",
                         "Tag" -> "CodeInspectionIssues",
                         "Parameters" -> <|
                          "Issues" -> "1 fatal error",
                          "Key" -> Key[{6308105214813299588, "Submit", None}],
                          "Type" -> File,
                          "MessageText" -> "Expected context: SamplePublisher`MyPaclet`",
                          "PriorityTag" -> "NotPublisherContext",
                          "Metadata" -> <|
                           CodeParser`Source -> {{1, 14}, {1, 25}},
                           "Hash" -> 8824024375246586329,
                           ConfidenceLevel -> 0.99,
                           CodeParser`CodeActions -> {
                            CodeParser`CodeAction[
                             "Replace with suggested context",
                             CodeParser`ReplaceNode,
                             <|
                              "ReplacementNode" ->
                               CodeParser`ContainerNode[
                                String,
                                {
                                 CodeParser`LeafNode[
                                  String,
                                  "\"SamplePublisher`MyPaclet`\"",
                                  Association[CodeParser`Source -> {{1, 1}, {1, 24}}]
                                 ]
                                },
                                <| |>
                               ],
                              CodeParser`Source -> {{1, 14}, {1, 25}}
                             |>
                            ],
                            CodeParser`CodeAction[
                             "Go to code",
                             PacletResource`DefinitionNotebook`Private`GoToNode,
                             <|
                              CodeParser`Source -> {{1, 14}, {1, 25}},
                              "Hash" -> 8824024375246586329
                             |>
                            ]
                           },
                           "MessageParameters" -> {"SamplePublisher`MyPaclet`"},
                           "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Kernel\\AddOne.wl",
                           "Editor" -> Automatic
                          |>,
                          "CodeInspectLevel" -> "Fatal",
                          "Hash" -> 6308105214813299588
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Error"
                    ],
                    Background -> RGBColor[1.0, 0.80784, 0.80392],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "CodeInspect found 1 fatal error",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "CodeInspectionIssues", ":", 57873694, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 57873694,
                       "Level" -> "Error",
                       "Tag" -> "CodeInspectionIssues",
                       "Parameters" -> <|
                        "Issues" -> "1 fatal error",
                        "Key" -> Key[{6308105214813299588, "Submit", None}],
                        "Type" -> File,
                        "MessageText" -> "Expected context: SamplePublisher`MyPaclet`",
                        "PriorityTag" -> "NotPublisherContext",
                        "Metadata" -> <|
                         CodeParser`Source -> {{1, 14}, {1, 25}},
                         "Hash" -> 8824024375246586329,
                         ConfidenceLevel -> 0.99,
                         CodeParser`CodeActions -> {
                          CodeParser`CodeAction[
                           "Replace with suggested context",
                           CodeParser`ReplaceNode,
                           <|
                            "ReplacementNode" ->
                             CodeParser`ContainerNode[
                              String,
                              {
                               CodeParser`LeafNode[
                                String,
                                "\"SamplePublisher`MyPaclet`\"",
                                Association[CodeParser`Source -> {{1, 1}, {1, 24}}]
                               ]
                              },
                              <| |>
                             ],
                            CodeParser`Source -> {{1, 14}, {1, 25}}
                           |>
                          ],
                          CodeParser`CodeAction[
                           "Go to code",
                           PacletResource`DefinitionNotebook`Private`GoToNode,
                           <|
                            CodeParser`Source -> {{1, 14}, {1, 25}},
                            "Hash" -> 8824024375246586329
                           |>
                          ]
                         },
                         "MessageParameters" -> {"SamplePublisher`MyPaclet`"},
                         "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Kernel\\AddOne.wl",
                         "Editor" -> Automatic
                        |>,
                        "CodeInspectLevel" -> "Fatal",
                        "Hash" -> 6308105214813299588
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[2]:=",
               CellID -> 67868399
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"CodeInspect found 1 error\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"CodeInspectionIssues\"",
                          "\":\"",
                          "76478523",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 76478523,
                         "Level" -> "Warning",
                         "Tag" -> "CodeInspectionIssues",
                         "Parameters" -> <|
                          "Issues" -> "1 error",
                          "Key" -> Key[{7590840479290891073, "Submit", None}],
                          "Type" -> File
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "CodeInspect found 1 error",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "CodeInspectionIssues", ":", 76478523, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 76478523,
                       "Level" -> "Warning",
                       "Tag" -> "CodeInspectionIssues",
                       "Parameters" -> <|
                        "Issues" -> "1 error",
                        "Key" -> Key[{7590840479290891073, "Submit", None}],
                        "Type" -> File
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[2]:=",
               CellID -> 264973953
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"CodeInspect found 1 error and 1 warning\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"CodeInspectionIssues\"",
                          "\":\"",
                          "351143504",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 351143504,
                         "Level" -> "Warning",
                         "Tag" -> "CodeInspectionIssues",
                         "Parameters" -> <|
                          "Issues" -> "1 error and 1 warning",
                          "Key" -> Key[{3889468743964391510, "Submit", None}],
                          "Type" -> File
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "CodeInspect found 1 error and 1 warning",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "CodeInspectionIssues", ":", 351143504, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 351143504,
                       "Level" -> "Warning",
                       "Tag" -> "CodeInspectionIssues",
                       "Parameters" -> <|
                        "Issues" -> "1 error and 1 warning",
                        "Key" -> Key[{3889468743964391510, "Submit", None}],
                        "Type" -> File
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[2]:=",
               CellID -> 25113344
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"DocumentationWrongPacletName\"",
                          "\":\"",
                          "268995717",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 268995717,
                         "Level" -> "Warning",
                         "Tag" -> "DocumentationWrongPacletName",
                         "Parameters" -> <|
                          "CellID" -> 268995717,
                          "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb",
                          "Excluded" -> False,
                          "DocumentationNotebook" -> True,
                          "DocumentFlag" -> None,
                          "ObjectName" -> "AddOne",
                          "FullName" -> "SamplePublisher`MyPaclet`AddOne",
                          "Type" -> "Function",
                          "FileHash" -> 9062897167568967930,
                          "EntityType" -> "Symbol",
                          "PacletName" -> "SamplePublisher/WrongPacletName",
                          "Context" -> "SamplePublisher`MyPaclet`",
                          "URI" -> "SamplePublisher/MyPaclet/ref/AddOne",
                          "ExpectedPacletName" -> "SamplePublisher/MyPaclet"
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[
                        {"(", "DocumentationWrongPacletName", ":", 268995717, ")"}
                       ],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 268995717,
                       "Level" -> "Warning",
                       "Tag" -> "DocumentationWrongPacletName",
                       "Parameters" -> <|
                        "CellID" -> 268995717,
                        "File" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb",
                        "Excluded" -> False,
                        "DocumentationNotebook" -> True,
                        "DocumentFlag" -> None,
                        "ObjectName" -> "AddOne",
                        "FullName" -> "SamplePublisher`MyPaclet`AddOne",
                        "Type" -> "Function",
                        "FileHash" -> 9062897167568967930,
                        "EntityType" -> "Symbol",
                        "PacletName" -> "SamplePublisher/WrongPacletName",
                        "Context" -> "SamplePublisher`MyPaclet`",
                        "URI" -> "SamplePublisher/MyPaclet/ref/AddOne",
                        "ExpectedPacletName" -> "SamplePublisher/MyPaclet"
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[2]:=",
               CellID -> 455982565
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[1.0, 0.46275, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Warning\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Warning", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.90196, 0.79608],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Warning"
                      ],
                      Background -> RGBColor[1.0, 0.90196, 0.79608],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"The paclet creator and the resource creator are expected to match\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"PacletCreatorMismatch\"",
                          "\":\"",
                          "312969925",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 312969925,
                         "Level" -> "Warning",
                         "Tag" -> "PacletCreatorMismatch",
                         "Parameters" -> <|
                          "PacletCreator" -> "Example Creator",
                          "ResourceCreator" -> "Example Author",
                          "PacletDirectory" ->
                           File[
                            "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\"
                           ]
                         |>
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[1.0, 0.46275, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Warning"
                    ],
                    Background -> RGBColor[1.0, 0.90196, 0.79608],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "The paclet creator and the resource creator are expected to match",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "PacletCreatorMismatch", ":", 312969925, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 312969925,
                       "Level" -> "Warning",
                       "Tag" -> "PacletCreatorMismatch",
                       "Parameters" -> <|
                        "PacletCreator" -> "Example Creator",
                        "ResourceCreator" -> "Example Author",
                        "PacletDirectory" ->
                         File[
                          "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\MoreIssues\\"
                         ]
                       |>
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[2]:=",
               CellID -> 353460128
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Example captions should usually end in a colon when appearing before input\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"ExampleTextLastCharacter\"",
                          "\":\"",
                          "319073343",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 319073343,
                         "Level" -> "Suggestion",
                         "Tag" -> "ExampleTextLastCharacter",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Example captions should usually end in a colon when appearing before input",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "ExampleTextLastCharacter", ":", 319073343, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 319073343,
                       "Level" -> "Suggestion",
                       "Tag" -> "ExampleTextLastCharacter",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[2]:=",
               CellID -> 119408359
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Inputs should be separated so they each generate at most a single output\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {
                          "\"(\"",
                          "\"MultipleOutputs\"",
                          "\":\"",
                          "55333842",
                          "\")\""
                         },
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 55333842,
                         "Level" -> "Suggestion",
                         "Tag" -> "MultipleOutputs",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Inputs should be separated so they each generate at most a single output",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "MultipleOutputs", ":", 55333842, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 55333842,
                       "Level" -> "Suggestion",
                       "Tag" -> "MultipleOutputs",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[2]:=",
               CellID -> 230652237
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.4902, 0.4902, 0.4902]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Suggestion\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Suggestion", "Tooltip"] &
                       ],
                       Background -> RGBColor[0.91372, 0.91372, 0.91372],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Suggestion"
                      ],
                      Background -> RGBColor[0.91372, 0.91372, 0.91372],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   TemplateBox[
                    {
                     "\"Related links should usually be given as a labeled hyperlink instead of a raw URL\"",
                     "\" \"",
                     ButtonBox[
                      TagBox[
                       StyleBox[
                        TemplateBox[
                         {"\"(\"", "\"StringLink\"", "\":\"", "437199519", "\")\""},
                         "RowDefault"
                        ],
                        "Hyperlink",
                        FontSize -> 0.85 * Inherited,
                        StripOnInput -> False
                       ],
                       MouseAppearanceTag["LinkHand"]
                      ],
                      ButtonFunction :>
                       (DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                       DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                        File[
                         "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                        ],
                        <|
                         "CellID" -> 437199519,
                         "Level" -> "Suggestion",
                         "Tag" -> "StringLink",
                         "Parameters" -> { }
                        |>
                       ]),
                      Appearance -> None,
                      BaseStyle -> None,
                      Method -> "Queued",
                      Evaluator -> Automatic
                     ]
                    },
                    "RowDefault"
                   ]
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.4902, 0.4902, 0.4902]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Suggestion"
                    ],
                    Background -> RGBColor[0.91372, 0.91372, 0.91372],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  Row[
                   {
                    "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                    " ",
                    Button[
                     MouseAppearance[
                      Style[
                       Row[{"(", "StringLink", ":", 437199519, ")"}],
                       "Hyperlink",
                       FontSize -> 0.85 * Inherited
                      ],
                      "LinkHand"
                     ],
                     DefinitionNotebookClient`LoadDefinitionNotebook["Paclet"];
                     DefinitionNotebookClient`Console`PackagePrivate`openNotebookAndDisplayHint[
                      File[
                       "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/MoreIssues/ResourceDefinition.nb"
                      ],
                      <|
                       "CellID" -> 437199519,
                       "Level" -> "Suggestion",
                       "Tag" -> "StringLink",
                       "Parameters" -> { }
                      |>
                     ],
                     Appearance -> None,
                     BaseStyle -> None,
                     Method -> "Queued"
                    ]
                   }
                  ]
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[2]:=",
               CellID -> 103132036
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   "\"\"",
                   "\[InvisibleSpace]",
                   InterpretationBox[
                    RowBox[
                     {
                      FrameBox[
                       TagBox[
                        TooltipBox[
                         GraphicsBox[
                          {
                           Thickness[0.055556],
                           {
                            FaceForm[RGBColor[0.96471, 0.16863, 0.0]],
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                             ]
                            ]
                           },
                           {
                            FaceForm[RGBColor[1.0, 1.0, 1.0]],
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                              ]
                             }
                            ]
                           }
                          },
                          AspectRatio -> Automatic,
                          BaselinePosition -> Scaled[0.1],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              1.75,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          PlotRange -> {{0, 18}, {0, 17}}
                         ],
                         "\"Error\"",
                         TooltipStyle -> "TextStyling"
                        ],
                        Annotation[#1, "Error", "Tooltip"] &
                       ],
                       Background -> RGBColor[1.0, 0.80784, 0.80392],
                       FrameMargins -> {{1, 1}, {0, 0}},
                       FrameStyle -> None,
                       RoundingRadius -> 8,
                       StripOnInput -> False
                      ],
                      "\[InvisibleSpace]",
                      "\" \""
                     }
                    ],
                    SequenceForm[
                     Framed[
                      Tooltip[
                       RawBoxes[
                        GraphicsBox[
                         {
                          Thickness[0.055556],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             CompressedData[
                              "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n             "
                             ]
                            ]
                           },
                           FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                          ],
                          StyleBox[
                           {
                            FilledCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0},
                               {0, 1, 0}
                              },
                              {
                               {1, 4, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3},
                               {1, 3, 3}
                              }
                             },
                             {
                              {
                               {8.1753, 7.4169},
                               {7.7969, 11.308},
                               {7.7969, 13.38},
                               {10.12, 13.38},
                               {10.12, 11.308},
                               {9.7415, 7.4169},
                               {8.1753, 7.4169}
                              },
                              CompressedData[
                               "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n              "
                              ]
                             }
                            ]
                           },
                           FaceForm[RGBColor[1.0, 1.0, 1.0]]
                          ]
                         },
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             1.75,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ],
                         PlotRange -> {{0, 18}, {0, 17}},
                         AspectRatio -> Automatic,
                         BaselinePosition -> Scaled[0.1]
                        ]
                       ],
                       "Error"
                      ],
                      Background -> RGBColor[1.0, 0.80784, 0.80392],
                      RoundingRadius -> 8,
                      FrameStyle -> None,
                      FrameMargins -> {{1, 1}, {0, 0}}
                     ],
                     " "
                    ],
                    Editable -> False
                   ],
                   "\[InvisibleSpace]",
                   "\"Scraping failed due to the specified failure conditions.\""
                  }
                 ],
                 SequenceForm[
                  "",
                  SequenceForm[
                   Framed[
                    Tooltip[
                     RawBoxes[
                      GraphicsBox[
                       {
                        Thickness[0.055556],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO\nm+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD\njI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh\nMRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d\n            "
                           ]
                          ]
                         },
                         FaceForm[RGBColor[0.96471, 0.16863, 0.0]]
                        ],
                        StyleBox[
                         {
                          FilledCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0},
                             {0, 1, 0}
                            },
                            {
                             {1, 4, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3},
                             {1, 3, 3}
                            }
                           },
                           {
                            {
                             {8.1753, 7.4169},
                             {7.7969, 11.308},
                             {7.7969, 13.38},
                             {10.12, 13.38},
                             {10.12, 11.308},
                             {9.7415, 7.4169},
                             {8.1753, 7.4169}
                            },
                            CompressedData[
                             "\n1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA\nqBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed\nHTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2\nqB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa\nm8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5\nN5G6\n             "
                            ]
                           }
                          ]
                         },
                         FaceForm[RGBColor[1.0, 1.0, 1.0]]
                        ]
                       },
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           1.75,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ],
                       PlotRange -> {{0, 18}, {0, 17}},
                       AspectRatio -> Automatic,
                       BaselinePosition -> Scaled[0.1]
                      ]
                     ],
                     "Error"
                    ],
                    Background -> RGBColor[1.0, 0.80784, 0.80392],
                    RoundingRadius -> 8,
                    FrameStyle -> None,
                    FrameMargins -> {{1, 1}, {0, 0}}
                   ],
                   " "
                  ],
                  "Scraping failed due to the specified failure conditions."
                 ],
                 Editable -> False
                ]
               ],
               "Print",
               CellLabel -> "During evaluation of In[2]:=",
               CellID -> 21671503
              ]
             },
             Open
            ]
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               "CheckPaclet",
               "errors",
               "\"Errors encountered while checking paclet.\"",
               2,
               2,
               8,
               33997430240731871973,
               "Local",
               "Wolfram`PacletCICD`CheckPaclet"
              },
              "MessageTemplate2"
             ]
            ],
            "Message",
            "MSG",
            CellLabel -> "During evaluation of In[2]:=",
            CellID -> 354715595
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Failure", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[WarningSign]\"",
                           Directive["Message", 35],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Message: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"Errors encountered while checking paclet.\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Tag: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"CheckPaclet::errors\"", "SummaryItem"]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[WarningSign]\"",
                           Directive["Message", 35],
                           StripOnInput -> False
                          ],
                          ContentPadding -> False,
                          FrameStyle -> None,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Message: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"Errors encountered while checking paclet.\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Tag: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"CheckPaclet::errors\"", "SummaryItem"]
                               }
                              },
                              GridBoxItemSize -> {"Columns" -> {6.5, All}},
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"FailureCondition\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[TagBox["\"Error\"", HoldForm], "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Result\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                TagBox[
                                 TagBox[
                                  DynamicModuleBox[
                                   {
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                     "InitialData" -> {
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                                       "Tag" -> "DocumentationWrongPacletName",
                                       "CellID" -> 268995717
                                      |>,
                                      <|
                                       "Level" -> "Error",
                                       "Message" -> "CodeInspect found 1 fatal error",
                                       "Tag" -> "CodeInspectionIssues",
                                       "CellID" -> 57873694
                                      |>,
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "CodeInspect found 1 error",
                                       "Tag" -> "CodeInspectionIssues",
                                       "CellID" -> 76478523
                                      |>,
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "CodeInspect found 1 error and 1 warning",
                                       "Tag" -> "CodeInspectionIssues",
                                       "CellID" -> 351143504
                                      |>,
                                      <|
                                       "Level" -> "Suggestion",
                                       "Message" -> "Example captions should usually end in a colon when appearing before input",
                                       "Tag" -> "ExampleTextLastCharacter",
                                       "CellID" -> 319073343
                                      |>,
                                      <|
                                       "Level" -> "Suggestion",
                                       "Message" -> "Inputs should be separated so they each generate at most a single output",
                                       "Tag" -> "MultipleOutputs",
                                       "CellID" -> 55333842
                                      |>,
                                      <|
                                       "Level" -> "Warning",
                                       "Message" -> "The paclet creator and the resource creator are expected to match",
                                       "Tag" -> "PacletCreatorMismatch",
                                       "CellID" -> 312969925
                                      |>,
                                      <|
                                       "Level" -> "Suggestion",
                                       "Message" -> "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                                       "Tag" -> "StringLink",
                                       "CellID" -> 437199519
                                      |>
                                     },
                                     "AllowEmbedding" -> True,
                                     "InitialShape" ->
                                      TypeSystem`PackageScope`HeaderShape[
                                       <|
                                        {All, "Level"} -> 1,
                                        {All, "Message"} -> 1,
                                        {All, "Tag"} -> 1,
                                        {All, "CellID"} -> 1
                                       |>,
                                       TypeSystem`PackageScope`Limited[
                                        TypeSystem`PackageScope`ColumnShape[
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`RowShape[
                                           <|
                                            "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                                            "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                                            "Tag" -> TypeSystem`PackageScope`AtomShape[294.0],
                                            "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                                           |>
                                          ],
                                          Infinity,
                                          4,
                                          {All}
                                         ]
                                        ],
                                        8,
                                        Infinity,
                                        { }
                                       ]
                                      ],
                                     "InitialType" ->
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"Level", "Message", "Tag", "CellID"},
                                        {
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration["Error", "Suggestion", "Warning"]
                                         ],
                                         TypeSystem`Atom[String],
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration[
                                           "CodeInspectionIssues",
                                           "DocumentationWrongPacletName",
                                           "ExampleTextLastCharacter",
                                           "MultipleOutputs",
                                           "PacletCreatorMismatch",
                                           "StringLink"
                                          ]
                                         ],
                                         TypeSystem`Atom[Integer]
                                        }
                                       ],
                                       8
                                      ],
                                     "Meta" -> <| |>,
                                     "RowTarget" -> 20,
                                     "ColumnTarget" -> 10,
                                     "Shape" ->
                                      TypeSystem`PackageScope`HeaderShape[
                                       <|
                                        {All, "Level"} -> 1,
                                        {All, "Message"} -> 1,
                                        {All, "Tag"} -> 1,
                                        {All, "CellID"} -> 1
                                       |>,
                                       TypeSystem`PackageScope`Limited[
                                        TypeSystem`PackageScope`ColumnShape[
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`RowShape[
                                           <|
                                            "Level" -> TypeSystem`PackageScope`AtomShape[105.0],
                                            "Message" -> TypeSystem`PackageScope`AtomShape[560.0],
                                            "Tag" -> TypeSystem`PackageScope`AtomShape[294.0],
                                            "CellID" -> TypeSystem`PackageScope`AtomShape[34]
                                           |>
                                          ],
                                          Infinity,
                                          4,
                                          {All}
                                         ]
                                        ],
                                        8,
                                        Infinity,
                                        { }
                                       ]
                                      ],
                                     "Type" ->
                                      TypeSystem`Vector[
                                       TypeSystem`Struct[
                                        {"Level", "Message", "Tag", "CellID"},
                                        {
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration["Error", "Suggestion", "Warning"]
                                         ],
                                         TypeSystem`Atom[String],
                                         TypeSystem`Atom[
                                          TypeSystem`Enumeration[
                                           "CodeInspectionIssues",
                                           "DocumentationWrongPacletName",
                                           "ExampleTextLastCharacter",
                                           "MultipleOutputs",
                                           "PacletCreatorMismatch",
                                           "StringLink"
                                          ]
                                         ],
                                         TypeSystem`Atom[Integer]
                                        }
                                       ],
                                       8
                                      ],
                                     "Path" -> { },
                                     "DisplayedRowCount" -> 8,
                                     "DisplayedColumnCount" -> 4,
                                     "DataRowCount" -> 8,
                                     "DataColumnCount" -> 4,
                                     "SortPaths" -> { },
                                     "SortDirections" -> { },
                                     "HiddenItemsMap" -> Null,
                                     "UpdateType" -> 1
                                    |>,
                                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                     DynamicModule[
                                      {
                                       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                        Deploy[
                                         Style[
                                          Grid[
                                           {
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "Level",
                                                   Style[
                                                    "Level",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "Level"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "Level"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "Message",
                                                   Style[
                                                    "Message",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "Message"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "Message"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "Tag",
                                                   Style[
                                                    "Tag",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "Tag"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "Tag"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                EventHandler[
                                                 MouseAppearance[
                                                  Mouseover[
                                                   "CellID",
                                                   Style[
                                                    "CellID",
                                                    FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                   ]
                                                  ],
                                                  "LinkHand"
                                                 ],
                                                 {"MouseClicked", 1} :>
                                                  If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                   ],
                                                   TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                    {All, "CellID"},
                                                    1
                                                   ]
                                                  ]
                                                ],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {All, "CellID"},
                                                 "ColumnHeader",
                                                 True
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{1, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              Background -> GrayLevel[0.95],
                                              Alignment -> {Left, Baseline}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "DocumentationWrongPacletName",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["268995717"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {1, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Error",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspect found 1 fatal error",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspectionIssues",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["57873694"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {2, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspect found 1 error",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspectionIssues",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["76478523"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {3, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspect found 1 error and 1 warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "CodeInspectionIssues",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["351143504"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {4, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Suggestion",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Example captions should usually end in a colon when appearing before input",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "ExampleTextLastCharacter",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["319073343"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {5, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Suggestion",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {6, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Inputs should be separated so they each generate at most a single output",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {6, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "MultipleOutputs",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {6, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["55333842"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {6, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Warning",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {7, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "The paclet creator and the resource creator are expected to match",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {7, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "PacletCreatorMismatch",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {7, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["312969925"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {7, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            },
                                            {
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Suggestion",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {8, Key["Level"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{105.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {8, Key["Message"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{560.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                "StringLink",
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {8, Key["Tag"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{294.0, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ],
                                             Item[
                                              Pane[
                                               Annotation[
                                                RawBoxes["437199519"],
                                                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                 {8, Key["CellID"]},
                                                 "Item",
                                                 False
                                                ],
                                                "Mouse"
                                               ],
                                               ImageSize -> {{34, Full}, Automatic},
                                               ImageMargins -> {{5, 3}, {4, 5}}
                                              ],
                                              ItemSize -> {Full, Automatic}
                                             ]
                                            }
                                           },
                                           BaseStyle -> {
                                            ContextMenu ->
                                             Dynamic[
                                              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                              Which[
                                               UnsameQ[
                                                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                                TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                                ]
                                               ],
                                               { },
                                               SameQ[
                                                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                               ],
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                               True,
                                               
                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                               TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                                Block[
                                                 {
                                                  TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                  }
                                                 },
                                                 With[
                                                  {
                                                   TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                   TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                    And[
                                                     MatchQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                      Alternatives["RowHeader", "ColumnHeader"]
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ]
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                     TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                     TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                      "SortDirections"
                                                     ]
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                    Not[
                                                     FailureQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ]
                                                     ]
                                                    ],
                                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                    Not[
                                                     FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                    ]
                                                  },
                                                  Join[
                                                   {
                                                    If[ Or[
                                                      Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                      Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                      TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                     ],
                                                     Nothing,
                                                     MenuItem[
                                                      StringJoin[
                                                       "Show ",
                                                       Which[
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "Item"
                                                        ],
                                                        "",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "RowHeader"
                                                        ],
                                                        "Row",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "ColumnHeader"
                                                        ],
                                                        "Column",
                                                        True,
                                                        ""
                                                       ]
                                                      ],
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "remove"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ]
                                                    ],
                                                    If[ Or[
                                                      Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                      TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ],
                                                      TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                      And[
                                                       TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                       TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                      ]
                                                     ],
                                                     Nothing,
                                                     MenuItem[
                                                      StringJoin[
                                                       "Hide ",
                                                       Which[
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "Item"
                                                        ],
                                                        "",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "RowHeader"
                                                        ],
                                                        "Row",
                                                        Equal[
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                         "ColumnHeader"
                                                        ],
                                                        "Column",
                                                        True,
                                                        ""
                                                       ]
                                                      ],
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                        "add"
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ]
                                                    ],
                                                    Delimiter
                                                   },
                                                   If[ And[
                                                     TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                     MatchQ[
                                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                      Alternatives["ColumnHeader", "KeyDummy"]
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                     Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                    ],
                                                    {
                                                     If[ UnsameQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                       "Ascending"
                                                      ],
                                                      MenuItem[
                                                       "Sort",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                         "Ascending"
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      Nothing
                                                     ],
                                                     If[ UnsameQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                       "Descending"
                                                      ],
                                                      MenuItem[
                                                       "Reverse Sort",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                         "Descending"
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      Nothing
                                                     ],
                                                     If[ UnsameQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                       None
                                                      ],
                                                      MenuItem[
                                                       "Unsort",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                         TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                         None
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      Nothing
                                                     ],
                                                     Delimiter
                                                    },
                                                    { }
                                                   ],
                                                   {
                                                    MenuItem[
                                                     "Copy Position to Clipboard",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                       TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                     MenuItem[
                                                      "Copy Data to Clipboard",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                        TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ],
                                                    Delimiter,
                                                    MenuItem[
                                                     "Paste Position in New Cell",
                                                     KernelExecute[
                                                      TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                       TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                      ]
                                                     ],
                                                     MenuEvaluator -> Automatic
                                                    ],
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                     MenuItem[
                                                      "Paste Data in New Cell",
                                                      KernelExecute[
                                                       TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                        TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                       ]
                                                      ],
                                                      MenuEvaluator -> Automatic
                                                     ],
                                                     Nothing
                                                    ]
                                                   }
                                                  ]
                                                 ]
                                                ]
                                              ]
                                             ],
                                            FontFamily -> "Source Sans Pro",
                                            FontSize -> 14,
                                            FontWeight -> Plain
                                           },
                                           Dividers -> All,
                                           FrameStyle -> GrayLevel[0.74902],
                                           Spacings -> {0, 0},
                                           Alignment -> Left,
                                           BaseStyle -> {
                                            FontFamily -> "Source Sans Pro",
                                            FontSize -> 14,
                                            FontWeight -> Plain
                                           }
                                          ],
                                          LineBreakWithin -> False,
                                          ContextMenu -> { },
                                          NumberMarks -> False,
                                          ShowAutoStyles -> False
                                         ]
                                        ],
                                       TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                      },
                                      Dynamic[
                                       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        
                                        If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                         Module[
                                          {
                                           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                            TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                             TypeSystem`NestedGrid`PackagePrivate`$state$$
                                            ]
                                          },
                                          
                                          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                           If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                            TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                            TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                             TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                            ]
                                           ];

                                          If[ Not[
                                            FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                           ],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                          ];
                                         ]
                                        ];

                                        TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                         TypeSystem`SparseGrid[
                                          TypeSystem`H["(data no longer present)"]
                                         ],
                                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                        ]
                                       ],
                                       TrackedSymbols :> {
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                       }
                                      ],
                                      DynamicModuleValues :> { }
                                     ],
                                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                     Dynamic[
                                      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                       TypeSystem`PackageScope`SubViewPathbar[
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`updateState[
                                         TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                         TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                         ]
                                        ]
                                       ]
                                      ],
                                      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                     ],
                                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                     Style[
                                      Framed[
                                       Dynamic[
                                        Replace[
                                         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                         {
                                          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                           Null,
                                           Blank[]
                                          ] -> "",
                                          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                           Pattern[
                                            TypeSystem`NestedGrid`PackagePrivate`path$,
                                            Blank[]
                                           ],
                                           Pattern[
                                            TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                            Blank[]
                                           ],
                                           Pattern[
                                            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                            Blank[]
                                           ]
                                          ] :>
                                           (
                                           Increment[
                                            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                           ];

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                            TypeSystem`NestedGrid`PackagePrivate`path$;

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                            TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                           
                                           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                            TypeSystem`NestedGrid`PackagePrivate`localHold[
                                             TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                            ];

                                           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                            TypeSystem`NestedGrid`PackagePrivate`path$,
                                            TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                           ]),
                                          Null :> Spacer[10],
                                          Blank[] :> Spacer[10]
                                         }
                                        ],
                                        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                       ],
                                       FrameStyle -> None,
                                       ImageMargins -> 0,
                                       FrameMargins -> 0,
                                       Alignment -> Top,
                                       ImageSize -> {Automatic, 15}
                                      ],
                                      FontSize -> 1
                                     ],
                                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                   },
                                   DynamicWrapperBox[
                                    DynamicBox[
                                     ToBoxes[
                                      Dataset`DatasetContent[
                                       2,
                                       "Path" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                       "Grid" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                       "State" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                       "VPos" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                       "HPos" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                       "TopBar" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                       "BottomBar" ->
                                        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                       "OutputID" ->
                                        Hold[
                                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                         ]
                                        ]
                                      ],
                                      StandardForm
                                     ],
                                     TrackedSymbols :> {
                                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                      TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                     }
                                    ],
                                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                     MouseAnnotation[]
                                   ],
                                   Initialization :>
                                    (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                     CreateUUID[]),
                                   DynamicModuleValues :> { },
                                   BaseStyle -> {LineBreakWithin -> False},
                                   UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                  ],
                                  Deploy,
                                  DefaultBaseStyle -> "Deploy"
                                 ],
                                 Dataset`InterpretDataset[1],
                                 Selectable -> False,
                                 Editable -> False,
                                 SelectWithContents -> True
                                ],
                                HoldForm
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Failure[
               "CheckPaclet::errors",
               <|
                "MessageTemplate" ->
                 MessageName[Wolfram`PacletCICD`CheckPaclet, "errors"],
                "MessageParameters" -> { },
                "FailureCondition" -> "Error",
                "Result" ->
                 Dataset[
                  {
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The documentation metadata has an incorrect paclet name (SamplePublisher/WrongPacletName)",
                    "Tag" -> "DocumentationWrongPacletName",
                    "CellID" -> 268995717
                   |>,
                   <|
                    "Level" -> "Error",
                    "Message" -> "CodeInspect found 1 fatal error",
                    "Tag" -> "CodeInspectionIssues",
                    "CellID" -> 57873694
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "CodeInspect found 1 error",
                    "Tag" -> "CodeInspectionIssues",
                    "CellID" -> 76478523
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "CodeInspect found 1 error and 1 warning",
                    "Tag" -> "CodeInspectionIssues",
                    "CellID" -> 351143504
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Example captions should usually end in a colon when appearing before input",
                    "Tag" -> "ExampleTextLastCharacter",
                    "CellID" -> 319073343
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Inputs should be separated so they each generate at most a single output",
                    "Tag" -> "MultipleOutputs",
                    "CellID" -> 55333842
                   |>,
                   <|
                    "Level" -> "Warning",
                    "Message" -> "The paclet creator and the resource creator are expected to match",
                    "Tag" -> "PacletCreatorMismatch",
                    "CellID" -> 312969925
                   |>,
                   <|
                    "Level" -> "Suggestion",
                    "Message" -> "Related links should usually be given as a labeled hyperlink instead of a raw URL",
                    "Tag" -> "StringLink",
                    "CellID" -> 437199519
                   |>
                  },
                  TypeSystem`Vector[
                   TypeSystem`Struct[
                    {"Level", "Message", "Tag", "CellID"},
                    {
                     TypeSystem`Atom[
                      TypeSystem`Enumeration["Error", "Suggestion", "Warning"]
                     ],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[
                      TypeSystem`Enumeration[
                       "CodeInspectionIssues",
                       "DocumentationWrongPacletName",
                       "ExampleTextLastCharacter",
                       "MultipleOutputs",
                       "PacletCreatorMismatch",
                       "StringLink"
                      ]
                     ],
                     TypeSystem`Atom[Integer]
                    }
                   ],
                   8
                  ],
                  <| |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 366808710
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             InterpretationBox[
              Cell["\t", "ExampleDelimiter"],
              $Line = 0;
             ]
            ],
            "ExampleDelimiter",
            CellID -> 201465542
           ],
           Cell[
            "Build an example paclet:",
            "ExampleText",
            CellID -> 161481621
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "BuildPaclet",
                  "[",
                  RowBox[{"ExampleDirectory", "[", "\"Sample\"", "]"}],
                  "]"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[1]:=",
               CellID -> 288365026
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["Success", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = True),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                              StripOnInput -> False
                             ],
                             ContentPadding -> False,
                             FrameStyle -> None,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\Sample\\\\build\\\\MyPublisher__SamplePaclet-1.0.0\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TemplateBox[
                                   {"3.9313669`", "\"s\"", "seconds", "\"Seconds\""},
                                   "Quantity",
                                   SyntaxForm -> Mod
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = False),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                              StripOnInput -> False
                             ],
                             ContentPadding -> False,
                             FrameStyle -> None,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\Sample\\\\build\\\\MyPublisher__SamplePaclet-1.0.0\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TemplateBox[
                                   {"3.9313669`", "\"s\"", "seconds", "\"Seconds\""},
                                   "Quantity",
                                   SyntaxForm -> Mod
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TagBox[
                                   TagBox[
                                    DynamicModuleBox[
                                     {
                                      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                                       "InitialData" -> <|
                                        "Files" -> {
                                         <|
                                          "File" -> File["Kernel\\AddOne.wl"],
                                          "Hash" -> "21613b7fa0a688030d7788ba73a4e75cbc9cd2e7c75b702e897555cf426b0b3f"
                                         |>,
                                         <|
                                          "File" -> File["Kernel\\AddTwo.wl"],
                                          "Hash" -> "e19b3885251e9270d0be52bf4e830f29326ecb94a6605926debcc96240da38d3"
                                         |>,
                                         <|
                                          "File" -> File["Kernel\\SamplePaclet.wl"],
                                          "Hash" -> "ebceed73cf762f6839570d91041e401a34470a33c78d529bfacde146f2829c3b"
                                         |>,
                                         <|
                                          "File" ->
                                           File[
                                            "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                           ],
                                          "Hash" -> "2bf19cdabdf600856cd346bac14043a4f7855e8853fca639ba770187f544a090"
                                         |>,
                                         <|
                                          "File" ->
                                           File[
                                            "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                           ],
                                          "Hash" -> "4e58a801d0ee0b496b0b2924ddf91ae797426099631dc321e2708a3269a2dc68"
                                         |>,
                                         <|
                                          "File" -> File["LICENSE"],
                                          "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                                         |>
                                        }
                                       |>,
                                       "AllowEmbedding" -> True,
                                       "InitialShape" ->
                                        TypeSystem`PackageScope`HeaderShape[
                                         <|
                                          {All, All, TypeSystem`PackageScope`KeyDummy[9]} -> 1,
                                          {All, All, "File"} -> 1,
                                          {All, All, "Hash"} -> 1
                                         |>,
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`KeyValueShape[
                                            TypeSystem`PackageScope`AtomShape[56.0],
                                            TypeSystem`PackageScope`Limited[
                                             TypeSystem`PackageScope`ColumnShape[
                                              TypeSystem`PackageScope`Limited[
                                               TypeSystem`PackageScope`RowShape[
                                                <|
                                                 "File" -> TypeSystem`PackageScope`AtomShape[60],
                                                 "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                                |>
                                               ],
                                               Infinity,
                                               2,
                                               {All, All}
                                              ]
                                             ],
                                             6,
                                             Infinity,
                                             {All}
                                            ]
                                           ]
                                          ],
                                          1,
                                          Infinity,
                                          { }
                                         ]
                                        ],
                                       "InitialType" ->
                                        TypeSystem`Assoc[
                                         TypeSystem`Atom[String],
                                         TypeSystem`Vector[
                                          TypeSystem`Struct[
                                           {"File", "Hash"},
                                           {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                          ],
                                          6
                                         ],
                                         1
                                        ],
                                       "Meta" -> <| |>,
                                       "RowTarget" -> 20,
                                       "ColumnTarget" -> 10,
                                       "Shape" ->
                                        TypeSystem`PackageScope`HeaderShape[
                                         <|
                                          {All, All, TypeSystem`PackageScope`KeyDummy[9]} -> 1,
                                          {All, All, "File"} -> 1,
                                          {All, All, "Hash"} -> 1
                                         |>,
                                         TypeSystem`PackageScope`Limited[
                                          TypeSystem`PackageScope`ColumnShape[
                                           TypeSystem`PackageScope`KeyValueShape[
                                            TypeSystem`PackageScope`AtomShape[56.0],
                                            TypeSystem`PackageScope`Limited[
                                             TypeSystem`PackageScope`ColumnShape[
                                              TypeSystem`PackageScope`Limited[
                                               TypeSystem`PackageScope`RowShape[
                                                <|
                                                 "File" -> TypeSystem`PackageScope`AtomShape[60],
                                                 "Hash" -> TypeSystem`PackageScope`AtomShape[560.0]
                                                |>
                                               ],
                                               Infinity,
                                               2,
                                               {All, All}
                                              ]
                                             ],
                                             6,
                                             Infinity,
                                             {All}
                                            ]
                                           ]
                                          ],
                                          1,
                                          Infinity,
                                          { }
                                         ]
                                        ],
                                       "Type" ->
                                        TypeSystem`Assoc[
                                         TypeSystem`Atom[String],
                                         TypeSystem`Vector[
                                          TypeSystem`Struct[
                                           {"File", "Hash"},
                                           {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                                          ],
                                          6
                                         ],
                                         1
                                        ],
                                       "Path" -> { },
                                       "DisplayedRowCount" -> 1,
                                       "DisplayedColumnCount" -> 2,
                                       "DataRowCount" -> 1,
                                       "DataColumnCount" -> 2,
                                       "SortPaths" -> { },
                                       "SortDirections" -> { },
                                       "HiddenItemsMap" -> Null,
                                       "UpdateType" -> 1
                                      |>,
                                      TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                                      TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                                      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                                       DynamicModule[
                                        {
                                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                          Deploy[
                                           Style[
                                            Grid[
                                             {
                                              {
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  Mouseover[
                                                   Graphics[
                                                    { },
                                                    ImageSize -> 6,
                                                    BaselinePosition -> Scaled[-0.15]
                                                   ],
                                                   Graphics[
                                                    {
                                                     GrayLevel[0.6],
                                                     Polygon[
                                                      {
                                                       {1/Sqrt[2], -(1/Sqrt[2])},
                                                       {1/Sqrt[2], 1/Sqrt[2]},
                                                       {-(1/Sqrt[2]), 1/Sqrt[2]},
                                                       {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                                      }
                                                     ]
                                                    },
                                                    ImageSize -> 6,
                                                    BaselinePosition -> Scaled[-0.15]
                                                   ]
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {All, All, Keys},
                                                   "KeyDummy",
                                                   True
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{1, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                Background -> GrayLevel[0.95],
                                                Alignment -> {Left, Baseline}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  EventHandler[
                                                   MouseAppearance[
                                                    Mouseover[
                                                     "File",
                                                     Style[
                                                      "File",
                                                      FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                     ]
                                                    ],
                                                    "LinkHand"
                                                   ],
                                                   {"MouseClicked", 1} :>
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                      {All, All, "File"},
                                                      1
                                                     ]
                                                    ]
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {All, All, "File"},
                                                   "ColumnHeader",
                                                   True
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{1, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                Background -> GrayLevel[0.95],
                                                Alignment -> {Left, Baseline}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  EventHandler[
                                                   MouseAppearance[
                                                    Mouseover[
                                                     "Hash",
                                                     Style[
                                                      "Hash",
                                                      FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                     ]
                                                    ],
                                                    "LinkHand"
                                                   ],
                                                   {"MouseClicked", 1} :>
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                      {All, All, "Hash"},
                                                      1
                                                     ]
                                                    ]
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {All, All, "Hash"},
                                                   "ColumnHeader",
                                                   True
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{1, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                Background -> GrayLevel[0.95],
                                                Alignment -> {Left, Baseline}
                                               ]
                                              },
                                              {
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  EventHandler[
                                                   MouseAppearance[
                                                    Mouseover[
                                                     "Files",
                                                     Style[
                                                      "Files",
                                                      FontColor -> RGBColor[0.27451, 0.53726, 0.79216]
                                                     ]
                                                    ],
                                                    "LinkHand"
                                                   ],
                                                   {"MouseClicked", 1} :>
                                                    If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                                      TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                     ],
                                                     TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                      {Key["Files"]},
                                                      1
                                                     ]
                                                    ]
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"]},
                                                   "RowHeader",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{56.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                Background -> GrayLevel[0.95],
                                                Alignment -> {Left, Baseline}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File["Kernel\\AddOne.wl"],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 1, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "21613b7fa0a688030d7788ba73a4e75cbc9cd2e7c75b702e897555cf426b0b3f",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 1, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File["Kernel\\AddTwo.wl"],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 2, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "e19b3885251e9270d0be52bf4e830f29326ecb94a6605926debcc96240da38d3",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 2, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File["Kernel\\SamplePaclet.wl"],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 3, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "ebceed73cf762f6839570d91041e401a34470a33c78d529bfacde146f2829c3b",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 3, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File[
                                                   "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 4, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "2bf19cdabdf600856cd346bac14043a4f7855e8853fca639ba770187f544a090",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 4, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File[
                                                   "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                                                  ],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 5, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "4e58a801d0ee0b496b0b2924ddf91ae797426099631dc321e2708a3269a2dc68",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 5, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              },
                                              {
                                               SpanFromAbove,
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  File["LICENSE"],
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 6, Key["File"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{60, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ],
                                               Item[
                                                Pane[
                                                 Annotation[
                                                  "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70",
                                                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                   {Key["Files"], 6, Key["Hash"]},
                                                   "Item",
                                                   False
                                                  ],
                                                  "Mouse"
                                                 ],
                                                 ImageSize -> {{560.0, Full}, Automatic},
                                                 ImageMargins -> {{5, 3}, {4, 5}}
                                                ],
                                                ItemSize -> {Full, Automatic}
                                               ]
                                              }
                                             },
                                             BaseStyle -> {
                                              ContextMenu ->
                                               Dynamic[
                                                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                                                Which[
                                                 UnsameQ[
                                                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                                                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                                                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                                  ]
                                                 ],
                                                 { },
                                                 SameQ[
                                                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                                                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                                                 ],
                                                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                                                 True,
                                                 
                                                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                                                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                                                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                                                  Block[
                                                   {
                                                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                                    }
                                                   },
                                                   With[
                                                    {
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                     TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                     TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                                     TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                                      And[
                                                       MatchQ[
                                                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                                        Alternatives["RowHeader", "ColumnHeader"]
                                                       ],
                                                       TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                                        TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                        TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                       ]
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                                       TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                                      TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                                       TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                                       TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                                        "SortDirections"
                                                       ]
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                                      Not[
                                                       FailureQ[
                                                        TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                                         TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                        ]
                                                       ]
                                                      ],
                                                     TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                                      Not[
                                                       FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                                      ]
                                                    },
                                                    Join[
                                                     {
                                                      If[ Or[
                                                        Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                        Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                                        TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                                       ],
                                                       Nothing,
                                                       MenuItem[
                                                        StringJoin[
                                                         "Show ",
                                                         Which[
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "Item"
                                                          ],
                                                          "",
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "RowHeader"
                                                          ],
                                                          "Row",
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "ColumnHeader"
                                                          ],
                                                          "Column",
                                                          True,
                                                          ""
                                                         ]
                                                        ],
                                                        KernelExecute[
                                                         TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                          TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                          "remove"
                                                         ]
                                                        ],
                                                        MenuEvaluator -> Automatic
                                                       ]
                                                      ],
                                                      If[ Or[
                                                        Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                                        TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                                         TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                                         TypeSystem`NestedGrid`PackagePrivate`$state$$
                                                        ],
                                                        TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                                        And[
                                                         TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                                         TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                                        ]
                                                       ],
                                                       Nothing,
                                                       MenuItem[
                                                        StringJoin[
                                                         "Hide ",
                                                         Which[
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "Item"
                                                          ],
                                                          "",
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "RowHeader"
                                                          ],
                                                          "Row",
                                                          Equal[
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                           "ColumnHeader"
                                                          ],
                                                          "Column",
                                                          True,
                                                          ""
                                                         ]
                                                        ],
                                                        KernelExecute[
                                                         TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                                          TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                          "add"
                                                         ]
                                                        ],
                                                        MenuEvaluator -> Automatic
                                                       ]
                                                      ],
                                                      Delimiter
                                                     },
                                                     If[ And[
                                                       TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                       MatchQ[
                                                        TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                                        Alternatives["ColumnHeader", "KeyDummy"]
                                                       ],
                                                       TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                                       Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                                      ],
                                                      {
                                                       If[ UnsameQ[
                                                         TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                         "Ascending"
                                                        ],
                                                        MenuItem[
                                                         "Sort",
                                                         KernelExecute[
                                                          TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                           "Ascending"
                                                          ]
                                                         ],
                                                         MenuEvaluator -> Automatic
                                                        ],
                                                        Nothing
                                                       ],
                                                       If[ UnsameQ[
                                                         TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                         "Descending"
                                                        ],
                                                        MenuItem[
                                                         "Reverse Sort",
                                                         KernelExecute[
                                                          TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                           "Descending"
                                                          ]
                                                         ],
                                                         MenuEvaluator -> Automatic
                                                        ],
                                                        Nothing
                                                       ],
                                                       If[ UnsameQ[
                                                         TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                                         None
                                                        ],
                                                        MenuItem[
                                                         "Unsort",
                                                         KernelExecute[
                                                          TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                                           TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                                           None
                                                          ]
                                                         ],
                                                         MenuEvaluator -> Automatic
                                                        ],
                                                        Nothing
                                                       ],
                                                       Delimiter
                                                      },
                                                      { }
                                                     ],
                                                     {
                                                      MenuItem[
                                                       "Copy Position to Clipboard",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                         TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                       MenuItem[
                                                        "Copy Data to Clipboard",
                                                        KernelExecute[
                                                         TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                          TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                          TypeSystem`NestedGrid`PackagePrivate`copyClip
                                                         ]
                                                        ],
                                                        MenuEvaluator -> Automatic
                                                       ],
                                                       Nothing
                                                      ],
                                                      Delimiter,
                                                      MenuItem[
                                                       "Paste Position in New Cell",
                                                       KernelExecute[
                                                        TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                                         TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                        ]
                                                       ],
                                                       MenuEvaluator -> Automatic
                                                      ],
                                                      If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                                       MenuItem[
                                                        "Paste Data in New Cell",
                                                        KernelExecute[
                                                         TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                                          TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                                          TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                                         ]
                                                        ],
                                                        MenuEvaluator -> Automatic
                                                       ],
                                                       Nothing
                                                      ]
                                                     }
                                                    ]
                                                   ]
                                                  ]
                                                ]
                                               ],
                                              FontFamily -> "Source Sans Pro",
                                              FontSize -> 14,
                                              FontWeight -> Plain
                                             },
                                             Dividers -> All,
                                             FrameStyle -> GrayLevel[0.74902],
                                             Spacings -> {0, 0},
                                             Alignment -> Left,
                                             BaseStyle -> {
                                              FontFamily -> "Source Sans Pro",
                                              FontSize -> 14,
                                              FontWeight -> Plain
                                             }
                                            ],
                                            LineBreakWithin -> False,
                                            ContextMenu -> { },
                                            NumberMarks -> False,
                                            ShowAutoStyles -> False
                                           ]
                                          ],
                                         TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                                        },
                                        Dynamic[
                                         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                                          TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                          
                                          If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                                           Module[
                                            {
                                             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                                             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                                              TypeSystem`NestedGrid`PackagePrivate`datasetData[
                                               TypeSystem`NestedGrid`PackagePrivate`$state$$
                                              ]
                                            },
                                            
                                            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                                             If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                                              TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                                              TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                               TypeSystem`NestedGrid`PackagePrivate`tmpData$
                                              ]
                                             ];

                                            If[ Not[
                                              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                                             ],
                                             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                                              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                                            ];
                                           ]
                                          ];

                                          TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                                          TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                                          TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                                          If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                                           TypeSystem`SparseGrid[
                                            TypeSystem`H["(data no longer present)"]
                                           ],
                                           TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                                          ]
                                         ],
                                         TrackedSymbols :> {
                                          TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                          TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                                         }
                                        ],
                                        DynamicModuleValues :> { }
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                                       Dynamic[
                                        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                                         TypeSystem`PackageScope`SubViewPathbar[
                                          TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                          TypeSystem`NestedGrid`PackagePrivate`updateState[
                                           TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                           TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                           TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                           TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                           TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ]
                                          ]
                                         ]
                                        ],
                                        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                                       Style[
                                        Framed[
                                         Dynamic[
                                          Replace[
                                           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                                           {
                                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                             Null,
                                             Blank[]
                                            ] -> "",
                                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                             Pattern[
                                              TypeSystem`NestedGrid`PackagePrivate`path$,
                                              Blank[]
                                             ],
                                             Pattern[
                                              TypeSystem`NestedGrid`PackagePrivate`pathType$,
                                              Blank[]
                                             ],
                                             Pattern[
                                              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                              Blank[]
                                             ]
                                            ] :>
                                             (
                                             Increment[
                                              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                                             ];

                                             
                                             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                                              TypeSystem`NestedGrid`PackagePrivate`path$;

                                             
                                             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                                              TypeSystem`NestedGrid`PackagePrivate`pathType$;

                                             
                                             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                                              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                                             
                                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                                              TypeSystem`NestedGrid`PackagePrivate`localHold[
                                               TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                              ];

                                             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                                              TypeSystem`NestedGrid`PackagePrivate`path$,
                                              TypeSystem`NestedGrid`PackagePrivate`makePathElements
                                             ]),
                                            Null :> Spacer[10],
                                            Blank[] :> Spacer[10]
                                           }
                                          ],
                                          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                                         ],
                                         FrameStyle -> None,
                                         ImageMargins -> 0,
                                         FrameMargins -> 0,
                                         Alignment -> Top,
                                         ImageSize -> {Automatic, 15}
                                        ],
                                        FontSize -> 1
                                       ],
                                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$
                                     },
                                     DynamicWrapperBox[
                                      DynamicBox[
                                       ToBoxes[
                                        Dataset`DatasetContent[
                                         2,
                                         "Path" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                                         "Grid" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                                         "State" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                                         "VPos" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                                         "HPos" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                                         "TopBar" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                                         "BottomBar" ->
                                          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                                         "OutputID" ->
                                          Hold[
                                           TypeSystem`NestedGrid`PackagePrivate`localHold[
                                            TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                           ]
                                          ]
                                        ],
                                        StandardForm
                                       ],
                                       TrackedSymbols :> {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$
                                       }
                                      ],
                                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                                       MouseAnnotation[]
                                     ],
                                     Initialization :>
                                      (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                                       CreateUUID[]),
                                     DynamicModuleValues :> { },
                                     BaseStyle -> {LineBreakWithin -> False},
                                     UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
                                    ],
                                    Deploy,
                                    DefaultBaseStyle -> "Deploy"
                                   ],
                                   Dataset`InterpretDataset[1],
                                   Selectable -> False,
                                   Editable -> False,
                                   SelectWithContents -> True
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[
                                   {"\"DocumentationBuildResults\"", "\": \""},
                                   "RowDefault"
                                  ],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "{",
                                    InterpretationBox[
                                     RowBox[
                                      {
                                       TagBox["Success", "SummaryHead"],
                                       "[",
                                       DynamicModuleBox[
                                        {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                        TemplateBox[
                                         {
                                          PaneSelectorBox[
                                           {
                                            False ->
                                             GridBox[
                                              {
                                               {
                                                PaneBox[
                                                 ButtonBox[
                                                  DynamicBox[
                                                   FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                  ],
                                                  ButtonFunction :> (Typeset`open$$ = True),
                                                  Appearance -> None,
                                                  BaseStyle -> { },
                                                  Evaluator -> Automatic,
                                                  Method -> "Preemptive"
                                                 ],
                                                 Alignment -> {Center, Center},
                                                 ImageSize ->
                                                  Dynamic[
                                                   {
                                                    Automatic,
                                                    Times[
                                                     3.5,
                                                     Times[
                                                      CurrentValue["FontCapHeight"],
                                                      AbsoluteCurrentValue[Magnification]^(-1)
                                                     ]
                                                    ]
                                                   }
                                                  ]
                                                ],
                                                FrameBox[
                                                 StyleBox[
                                                  "\"\[Checkmark]\"",
                                                  Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                  StripOnInput -> False
                                                 ],
                                                 ContentPadding -> False,
                                                 FrameStyle -> None,
                                                 FrameMargins -> {{0, 0}, {0, 0}},
                                                 StripOnInput -> False
                                                ],
                                                GridBox[
                                                 {
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      "\"Documentation build completed successfully.\"",
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      TemplateBox[
                                                       {"1.18504`", "\"s\"", "seconds", "\"Seconds\""},
                                                       "Quantity",
                                                       SyntaxForm -> Mod
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  }
                                                 },
                                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                 AutoDelete -> False,
                                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                 GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                 BaseStyle -> {
                                                  ShowStringCharacters -> False,
                                                  NumberMarks -> False,
                                                  PrintPrecision -> 3,
                                                  ShowSyntaxStyles -> False
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              BaselinePosition -> {1, 1}
                                             ],
                                            True ->
                                             GridBox[
                                              {
                                               {
                                                PaneBox[
                                                 ButtonBox[
                                                  DynamicBox[
                                                   FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                  ],
                                                  ButtonFunction :> (Typeset`open$$ = False),
                                                  Appearance -> None,
                                                  BaseStyle -> { },
                                                  Evaluator -> Automatic,
                                                  Method -> "Preemptive"
                                                 ],
                                                 Alignment -> {Center, Center},
                                                 ImageSize ->
                                                  Dynamic[
                                                   {
                                                    Automatic,
                                                    Times[
                                                     3.5,
                                                     Times[
                                                      CurrentValue["FontCapHeight"],
                                                      AbsoluteCurrentValue[Magnification]^(-1)
                                                     ]
                                                    ]
                                                   }
                                                  ]
                                                ],
                                                FrameBox[
                                                 StyleBox[
                                                  "\"\[Checkmark]\"",
                                                  Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                  StripOnInput -> False
                                                 ],
                                                 ContentPadding -> False,
                                                 FrameStyle -> None,
                                                 FrameMargins -> {{0, 0}, {0, 0}},
                                                 StripOnInput -> False
                                                ],
                                                GridBox[
                                                 {
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      "\"Documentation build completed successfully.\"",
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      TemplateBox[
                                                       {"1.18504`", "\"s\"", "seconds", "\"Seconds\""},
                                                       "Quantity",
                                                       SyntaxForm -> Mod
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"MaximumFileTime\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      RowBox[
                                                       {
                                                        "{",
                                                        RowBox[
                                                         {
                                                          TemplateBox[
                                                           {"0.6687124`", "\"s\"", "seconds", "\"Seconds\""},
                                                           "Quantity",
                                                           SyntaxForm -> Mod
                                                          ],
                                                          ",",
                                                          "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\Sample\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\""
                                                         }
                                                        ],
                                                        "}"
                                                       }
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"ProcessedFiles\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      RowBox[
                                                       {
                                                        "\[LeftAssociation]",
                                                        RowBox[
                                                         {
                                                          RowBox[
                                                           {
                                                            "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\Sample\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddOne.nb\"",
                                                            "\[Rule]",
                                                            InterpretationBox[
                                                             RowBox[
                                                              {
                                                               TagBox["Success", "SummaryHead"],
                                                               "[",
                                                               DynamicModuleBox[
                                                                {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                                TemplateBox[
                                                                 {
                                                                  PaneSelectorBox[
                                                                   {
                                                                    False ->
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        FrameBox[
                                                                         StyleBox[
                                                                          "\"\[Checkmark]\"",
                                                                          Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                          StripOnInput -> False
                                                                         ],
                                                                         ContentPadding -> False,
                                                                         FrameStyle -> None,
                                                                         FrameMargins -> {{0, 0}, {0, 0}},
                                                                         StripOnInput -> False
                                                                        ],
                                                                        GridBox[
                                                                         {
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox[
                                                                              TemplateBox[
                                                                               {"0.6687124`", "\"s\"", "seconds", "\"Seconds\""},
                                                                               "Quantity",
                                                                               SyntaxForm -> Mod
                                                                              ],
                                                                              "SummaryItem"
                                                                             ]
                                                                            }
                                                                           ]
                                                                          },
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                            }
                                                                           ]
                                                                          }
                                                                         },
                                                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                         AutoDelete -> False,
                                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                         BaseStyle -> {
                                                                          ShowStringCharacters -> False,
                                                                          NumberMarks -> False,
                                                                          PrintPrecision -> 3,
                                                                          ShowSyntaxStyles -> False
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      BaselinePosition -> {1, 1}
                                                                     ],
                                                                    True ->
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        FrameBox[
                                                                         StyleBox[
                                                                          "\"\[Checkmark]\"",
                                                                          Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                          StripOnInput -> False
                                                                         ],
                                                                         ContentPadding -> False,
                                                                         FrameStyle -> None,
                                                                         FrameMargins -> {{0, 0}, {0, 0}},
                                                                         StripOnInput -> False
                                                                        ],
                                                                        GridBox[
                                                                         {
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox[
                                                                              TemplateBox[
                                                                               {"0.6687124`", "\"s\"", "seconds", "\"Seconds\""},
                                                                               "Quantity",
                                                                               SyntaxForm -> Mod
                                                                              ],
                                                                              "SummaryItem"
                                                                             ]
                                                                            }
                                                                           ]
                                                                          },
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                            }
                                                                           ]
                                                                          }
                                                                         },
                                                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                         AutoDelete -> False,
                                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                         BaseStyle -> {
                                                                          ShowStringCharacters -> False,
                                                                          NumberMarks -> False,
                                                                          PrintPrecision -> 3,
                                                                          ShowSyntaxStyles -> False
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      BaselinePosition -> {1, 1}
                                                                     ]
                                                                   },
                                                                   Dynamic[Typeset`open$$],
                                                                   ImageSize -> Automatic
                                                                  ]
                                                                 },
                                                                 "SummaryPanel"
                                                                ],
                                                                DynamicModuleValues :> { }
                                                               ],
                                                               "]"
                                                              }
                                                             ],
                                                             Success[
                                                              "BuildDocumentationNotebook",
                                                              Association["Time" -> Quantity[0.66871, "Seconds"]]
                                                             ],
                                                             Selectable -> False,
                                                             Editable -> False,
                                                             SelectWithContents -> True
                                                            ]
                                                           }
                                                          ],
                                                          ",",
                                                          RowBox[
                                                           {
                                                            "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Mathematica\\\\ApplicationData\\\\Wolfram\\\\PacletCICD\\\\Examples\\\\Sample\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\AddTwo.nb\"",
                                                            "\[Rule]",
                                                            InterpretationBox[
                                                             RowBox[
                                                              {
                                                               TagBox["Success", "SummaryHead"],
                                                               "[",
                                                               DynamicModuleBox[
                                                                {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                                                TemplateBox[
                                                                 {
                                                                  PaneSelectorBox[
                                                                   {
                                                                    False ->
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        FrameBox[
                                                                         StyleBox[
                                                                          "\"\[Checkmark]\"",
                                                                          Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                          StripOnInput -> False
                                                                         ],
                                                                         ContentPadding -> False,
                                                                         FrameStyle -> None,
                                                                         FrameMargins -> {{0, 0}, {0, 0}},
                                                                         StripOnInput -> False
                                                                        ],
                                                                        GridBox[
                                                                         {
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox[
                                                                              TemplateBox[
                                                                               {"0.4864321`", "\"s\"", "seconds", "\"Seconds\""},
                                                                               "Quantity",
                                                                               SyntaxForm -> Mod
                                                                              ],
                                                                              "SummaryItem"
                                                                             ]
                                                                            }
                                                                           ]
                                                                          },
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                            }
                                                                           ]
                                                                          }
                                                                         },
                                                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                         AutoDelete -> False,
                                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                         BaseStyle -> {
                                                                          ShowStringCharacters -> False,
                                                                          NumberMarks -> False,
                                                                          PrintPrecision -> 3,
                                                                          ShowSyntaxStyles -> False
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      BaselinePosition -> {1, 1}
                                                                     ],
                                                                    True ->
                                                                     GridBox[
                                                                      {
                                                                       {
                                                                        FrameBox[
                                                                         StyleBox[
                                                                          "\"\[Checkmark]\"",
                                                                          Directive[RGBColor[0.36078, 0.59608, 0.38039], 25],
                                                                          StripOnInput -> False
                                                                         ],
                                                                         ContentPadding -> False,
                                                                         FrameStyle -> None,
                                                                         FrameMargins -> {{0, 0}, {0, 0}},
                                                                         StripOnInput -> False
                                                                        ],
                                                                        GridBox[
                                                                         {
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox[
                                                                              TemplateBox[
                                                                               {"0.4864321`", "\"s\"", "seconds", "\"Seconds\""},
                                                                               "Quantity",
                                                                               SyntaxForm -> Mod
                                                                              ],
                                                                              "SummaryItem"
                                                                             ]
                                                                            }
                                                                           ]
                                                                          },
                                                                          {
                                                                           RowBox[
                                                                            {
                                                                             TagBox[
                                                                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                                              "SummaryItemAnnotation"
                                                                             ],
                                                                             "\[InvisibleSpace]",
                                                                             TagBox["\"BuildDocumentationNotebook\"", "SummaryItem"]
                                                                            }
                                                                           ]
                                                                          }
                                                                         },
                                                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                                         AutoDelete -> False,
                                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                                         BaseStyle -> {
                                                                          ShowStringCharacters -> False,
                                                                          NumberMarks -> False,
                                                                          PrintPrecision -> 3,
                                                                          ShowSyntaxStyles -> False
                                                                         }
                                                                        ]
                                                                       }
                                                                      },
                                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                                      AutoDelete -> False,
                                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                                      BaselinePosition -> {1, 1}
                                                                     ]
                                                                   },
                                                                   Dynamic[Typeset`open$$],
                                                                   ImageSize -> Automatic
                                                                  ]
                                                                 },
                                                                 "SummaryPanel"
                                                                ],
                                                                DynamicModuleValues :> { }
                                                               ],
                                                               "]"
                                                              }
                                                             ],
                                                             Success[
                                                              "BuildDocumentationNotebook",
                                                              Association["Time" -> Quantity[0.48643, "Seconds"]]
                                                             ],
                                                             Selectable -> False,
                                                             Editable -> False,
                                                             SelectWithContents -> True
                                                            ]
                                                           }
                                                          ]
                                                         }
                                                        ],
                                                        "\[RightAssociation]"
                                                       }
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"FailedFilesCount\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["0", "SummaryItem"]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"PercentSucceeded\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox[
                                                      TemplateBox[
                                                       {"100.`", "\"%\"", "percent", "\"Percent\""},
                                                       "QuantityPostfix",
                                                       SyntaxForm -> Mod
                                                      ],
                                                      "SummaryItem"
                                                     ]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"ProcessedFilesCount\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["2", "SummaryItem"]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"SuccessfulFilesCount\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["2", "SummaryItem"]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[
                                                       {"\"SkippedFilesCount\"", "\": \""},
                                                       "RowDefault"
                                                      ],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["0", "SummaryItem"]
                                                    }
                                                   ]
                                                  },
                                                  {
                                                   RowBox[
                                                    {
                                                     TagBox[
                                                      TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                                      "SummaryItemAnnotation"
                                                     ],
                                                     "\[InvisibleSpace]",
                                                     TagBox["\"DocumentationBuild\"", "SummaryItem"]
                                                    }
                                                   ]
                                                  }
                                                 },
                                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                 AutoDelete -> False,
                                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                 GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                 BaseStyle -> {
                                                  ShowStringCharacters -> False,
                                                  NumberMarks -> False,
                                                  PrintPrecision -> 3,
                                                  ShowSyntaxStyles -> False
                                                 }
                                                ]
                                               }
                                              },
                                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                              AutoDelete -> False,
                                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                              BaselinePosition -> {1, 1}
                                             ]
                                           },
                                           Dynamic[Typeset`open$$],
                                           ImageSize -> Automatic
                                          ]
                                         },
                                         "SummaryPanel"
                                        ],
                                        DynamicModuleValues :> { }
                                       ],
                                       "]"
                                      }
                                     ],
                                     Success[
                                      "DocumentationBuild",
                                      <|
                                       "TotalTime" -> Quantity[1.185, "Seconds"],
                                       "MaximumFileTime" -> {
                                        Quantity[0.66871, "Seconds"],
                                        "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\Sample\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                                       },
                                       "ProcessedFiles" -> <|
                                        "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\Sample\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                                         Success[
                                          "BuildDocumentationNotebook",
                                          Association["Time" -> Quantity[0.66871, "Seconds"]]
                                         ],
                                        "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\Sample\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                                         Success[
                                          "BuildDocumentationNotebook",
                                          Association["Time" -> Quantity[0.48643, "Seconds"]]
                                         ]
                                       |>,
                                       "FailedFilesCount" -> 0,
                                       "PercentSucceeded" -> Quantity[100.0, "Percent"],
                                       "ProcessedFilesCount" -> 2,
                                       "SuccessfulFilesCount" -> 2,
                                       "SkippedFilesCount" -> 0,
                                       "MessageTemplate" -> "Documentation build completed successfully."
                                      |>
                                     ],
                                     Selectable -> False,
                                     Editable -> False,
                                     SelectWithContents -> True
                                    ],
                                    "}"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Source\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {
                                      "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample/ResourceDefinition.nb\""
                                     },
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"CheckResult\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox["\"PacletBuild\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 Success[
                  "PacletBuild",
                  <|
                   "PacletArchive" -> "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\Sample\\build\\MyPublisher__SamplePaclet-1.0.0",
                   "TotalTime" -> Quantity[3.9314, "Seconds"],
                   "PacletManifest" ->
                    Dataset[
                     <|
                      "Files" -> {
                       <|
                        "File" -> File["Kernel\\AddOne.wl"],
                        "Hash" -> "21613b7fa0a688030d7788ba73a4e75cbc9cd2e7c75b702e897555cf426b0b3f"
                       |>,
                       <|
                        "File" -> File["Kernel\\AddTwo.wl"],
                        "Hash" -> "e19b3885251e9270d0be52bf4e830f29326ecb94a6605926debcc96240da38d3"
                       |>,
                       <|
                        "File" -> File["Kernel\\SamplePaclet.wl"],
                        "Hash" -> "ebceed73cf762f6839570d91041e401a34470a33c78d529bfacde146f2829c3b"
                       |>,
                       <|
                        "File" ->
                         File[
                          "Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                         ],
                        "Hash" -> "2bf19cdabdf600856cd346bac14043a4f7855e8853fca639ba770187f544a090"
                       |>,
                       <|
                        "File" ->
                         File[
                          "Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb"
                         ],
                        "Hash" -> "4e58a801d0ee0b496b0b2924ddf91ae797426099631dc321e2708a3269a2dc68"
                       |>,
                       <|
                        "File" -> File["LICENSE"],
                        "Hash" -> "9d2c9da3044bfe86e9928a0eb6bf454381bdee27dd6a04720cf77ad40cf45b70"
                       |>
                      }
                     |>,
                     TypeSystem`Assoc[
                      TypeSystem`Atom[String],
                      TypeSystem`Vector[
                       TypeSystem`Struct[
                        {"File", "Hash"},
                        {TypeSystem`Atom[File], TypeSystem`Atom[String]}
                       ],
                       6
                      ],
                      1
                     ],
                     <| |>
                    ],
                   "DocumentationBuildResults" -> {
                    Success[
                     "DocumentationBuild",
                     <|
                      "TotalTime" -> Quantity[1.185, "Seconds"],
                      "MaximumFileTime" -> {
                       Quantity[0.66871, "Seconds"],
                       "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\Sample\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb"
                      },
                      "ProcessedFiles" -> <|
                       "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\Sample\\Documentation\\English\\ReferencePages\\Symbols\\AddOne.nb" ->
                        Success[
                         "BuildDocumentationNotebook",
                         Association["Time" -> Quantity[0.66871, "Seconds"]]
                        ],
                       "C:\\Users\\rhennigan\\AppData\\Roaming\\Mathematica\\ApplicationData\\Wolfram\\PacletCICD\\Examples\\Sample\\Documentation\\English\\ReferencePages\\Symbols\\AddTwo.nb" ->
                        Success[
                         "BuildDocumentationNotebook",
                         Association["Time" -> Quantity[0.48643, "Seconds"]]
                        ]
                      |>,
                      "FailedFilesCount" -> 0,
                      "PercentSucceeded" -> Quantity[100.0, "Percent"],
                      "ProcessedFilesCount" -> 2,
                      "SuccessfulFilesCount" -> 2,
                      "SkippedFilesCount" -> 0,
                      "MessageTemplate" -> "Documentation build completed successfully."
                     |>
                    ]
                   },
                   "Source" ->
                    File[
                     "C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample/ResourceDefinition.nb"
                    ],
                   "CheckResult" -> Missing["NotAvailable"]
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[1]=",
               CellID -> 189539355
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Properties & Relations", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 804651009
        ],
        Cell[
         "Reset an example directory by deleting it:",
         "ExampleText",
         CellID -> 650416141
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "DeleteDirectory",
            "[",
            RowBox[
             {
              RowBox[{"ExampleDirectory", "[", "\"Sample\"", "]"}],
              ",",
              RowBox[{"DeleteContents", "\[Rule]", "True"}]
             }
            ],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 112156546
        ],
        Cell[
         TextData[
          {
           "Evaluating ",
           Cell[
            BoxData[
             ButtonBox[
              "ExampleDirectory",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/PacletCICD/ref/ExampleDirectory"
             ]
            ],
            "InlineFormula"
           ],
           " again will recreate it in its original state:"
          }
         ],
         "ExampleText",
         CellID -> 76913945
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "FileNames",
               "[",
               RowBox[
                {
                 "All",
                 ",",
                 RowBox[{"ExampleDirectory", "[", "\"Sample\"", "]"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 682756778
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\\\\Documentation\"",
                 ",",
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\\\\Kernel\"",
                 ",",
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\\\\LICENSE\"",
                 ",",
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\\\\PacletInfo.wl\"",
                 ",",
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\\\\README.md\"",
                 ",",
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\\\\ResourceDefinition.nb\"",
                 ",",
                 "\"C:/Users/rhennigan/AppData/Roaming/Mathematica/ApplicationData/Wolfram/PacletCICD/Examples/Sample\\\\Tests\""
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 193373620
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Possible Issues", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 215285214
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Interactive Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 87296468
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Neat Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 82145733
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell["Metadata", "MetadataSection", CellID -> 247090787],
     Cell[
      TextData[
       {
        "New in: ",
        Cell["", "HistoryData", CellTags -> "New"],
        " | Modified in: ",
        Cell[" ", "HistoryData", CellTags -> "Modified"],
        " | Obsolete in: ",
        Cell[" ", "HistoryData", CellTags -> "Obsolete"]
       }
      ],
      "History",
      CellID -> 291267017
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Categorization",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Metadata",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "Metadata such as page URI, context, and type of documentation page.",
                   "MoreInfoText"
                  ],
                  BaseStyle -> "IFrameBox"
                 ]
                ],
                "MoreInfoTextOuter"
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "CategorizationSection",
         CellID -> 194433104
        ],
        Cell[
         "Symbol",
         "Categorization",
         CellLabel -> "Entity Type",
         CellID -> 260136114
        ],
        Cell[
         "Wolfram/PacletCICD",
         "Categorization",
         CellLabel -> "Paclet Name",
         CellID -> 339809992
        ],
        Cell[
         "Wolfram`PacletCICD`",
         "Categorization",
         CellLabel -> "Context",
         CellID -> 568899056
        ],
        Cell[
         "Wolfram/PacletCICD/ref/ExampleDirectory",
         "Categorization",
         CellLabel -> "URI",
         CellID -> 281625639
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell["Keywords", "KeywordsSection", CellID -> 334967452],
        Cell["XXXX", "Keywords", CellID -> 86308871]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Syntax Templates",
         "TemplatesSection",
         CellID -> 137518001
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Additional Function Template",
         CellID -> 173870313
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Arguments Pattern",
         CellID -> 46565389
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Local Variables",
         CellID -> 313042118
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Color Equal Signs",
         CellID -> 223536884
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ]
 },
 WindowStatusArea -> Automatic,
 TaggingRules -> <|
  "InformationPopupMenuItemAdded" -> True,
  "Paclet" -> "Wolfram/PacletCICD",
  "NotebookIndexQ" -> True,
  "NotebookLastIndexed" ->
   DateObject[
    {2022, 8, 8, 8, 21, 57.662},
    "Instant",
    "Gregorian",
    -4.0
   ],
  "NotebookUUID" -> "194ae1c5-9ea2-4080-a831-eb062d86a9b8"
 |>,
 FrontEndVersion -> "13.2 for Microsoft Windows (64-bit) (August 6, 2022)",
 StyleDefinitions ->
  FrontEnd`FileName[
   {"Wolfram"},
   "FunctionPageStylesExt.nb",
   CharacterEncoding -> "UTF-8"
  ]
]